<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Archer</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.guitoubing.top/"/>
  <updated>2018-11-25T19:05:44.393Z</updated>
  <id>http://blog.guitoubing.top/</id>
  
  <author>
    <name>Rui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Best Practice</title>
    <link href="http://blog.guitoubing.top/2018/11/24/Practice/"/>
    <id>http://blog.guitoubing.top/2018/11/24/Practice/</id>
    <published>2018-11-24T06:18:44.000Z</published>
    <updated>2018-11-25T19:05:44.393Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Oracle专家的三次授课。</p></blockquote><a id="more"></a><h1 id="Lesson-1"><a href="#Lesson-1" class="headerlink" title="Lesson 1"></a>Lesson 1</h1><h2 id="创建用户并分配权限"><a href="#创建用户并分配权限" class="headerlink" title="创建用户并分配权限"></a>创建用户并分配权限</h2><h3 id="创建测试schema，命名为test"><a href="#创建测试schema，命名为test" class="headerlink" title="创建测试schema，命名为test"></a>创建测试schema，命名为test</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user test identified by test;</span><br></pre></td></tr></table></figure><h3 id="分配连接资源"><a href="#分配连接资源" class="headerlink" title="分配连接资源"></a>分配连接资源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant connect,resource to test;</span><br><span class="line">grant execute on dbms_lock to test;</span><br><span class="line">grant execute on UTL_FILE to test;</span><br></pre></td></tr></table></figure><h3 id="为test用户创建external-data目录以及分配权限"><a href="#为test用户创建external-data目录以及分配权限" class="headerlink" title="为test用户创建external_data目录以及分配权限"></a>为test用户创建external_data目录以及分配权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create directory external_data as &apos;/home/oracle/data&apos;;</span><br><span class="line">grant read,write on directory external_data to test;</span><br></pre></td></tr></table></figure><blockquote><p>要注意oracle用户必须拥有对这里的external_data路径读写的权限。</p></blockquote><h3 id="分配表空间权限"><a href="#分配表空间权限" class="headerlink" title="分配表空间权限"></a>分配表空间权限</h3><p>我们知道oracle中没有库的概念，取而代之的是表空间（Tablespace），在oracle初次被安装时，数据库中只有系统本身内置的表空间：</p><ul><li><strong>SYSTEM</strong> - 存储数据字典</li><li><strong>SYSAUX</strong> - 存储辅助应用程序的数据</li><li><strong>TEMP</strong> - 存储数据库临时对象</li><li><strong>USERS</strong> - 存储各个用户创建的对象</li><li><strong>UNDOTBS</strong> - 存储不一致数据，用于事物回滚、数据库恢复、读一致性、闪回查询</li><li>……</li></ul><p>而当第一次通过管理员创建一个用户且未为其创建并指定表空间时，数据库系统会为其指定默认的表空间为SYSTEM，而他并没有使用SYSTEM表空间的权限，因此该用户无法完成建表等操作，可通过执行以下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- DBA下执行：</span><br><span class="line">-- 查看数据库中的所有表空间</span><br><span class="line">select * from v$tablespace;</span><br><span class="line">-- 查看当前用户所在的表空间(注意oracle系统表中存储的用户名字段都是大写，要注意这与“oracle中不区分大小写”这一概念区分开来)</span><br><span class="line">select username,default_tablespace from dba_users where username=&apos;TEST&apos;;</span><br><span class="line">-- 为用户赋予当前表空间下的权限</span><br><span class="line">alter user test quota unlimited on users;</span><br><span class="line">--  或者制定用户可用大小：</span><br><span class="line">alter user test quota 50M on users;</span><br></pre></td></tr></table></figure><h2 id="连接用户，建表，跑存储过程和函数"><a href="#连接用户，建表，跑存储过程和函数" class="headerlink" title="连接用户，建表，跑存储过程和函数"></a>连接用户，建表，跑存储过程和函数</h2><h3 id="连接test用户"><a href="#连接test用户" class="headerlink" title="连接test用户"></a>连接test用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 在系统命令下连接</span><br><span class="line">sqlplus test/test</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 在进入sqlplus后的连接</span><br><span class="line">conn test/test</span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">create table t_mobiles(f_id number(6),f_mobile_head varchar2(50),f_province varchar2(50),f_city varchar2(50),f_platform varchar2(50),f_tel_head varchar2(50),f_zipcode varchar2(50),primary key(f_id));</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_ID IS &apos;主键&apos;;</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_MOBILE_HEAD IS &apos;手机号段&apos;;</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_PROVINCE IS &apos;省份地区&apos;;</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_CITY IS &apos;城市&apos;;</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_PLATFORM IS &apos;运营商&apos;;</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_TEL_HEAD IS &apos;固话区号&apos;;</span><br><span class="line">COMMENT ON COLUMN T_MOBILES.F_ZIPCODE IS &apos;邮政编码&apos;;</span><br><span class="line">COMMENT ON TABLE T_MOBILES  IS &apos;号段表&apos;;</span><br><span class="line"></span><br><span class="line">create table t_records(f_id number(6),f_no varchar2(50),f_begin_time date,f_end_time date,f_duration number(10,0),f_province VARCHAR2(50), f_platform varchar2(50), f_mobile NUMBER(1) DEFAULT -1);</span><br><span class="line">--*注：因f_id导入时缺少数据，所有先不设置为PK.</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_ID IS &apos;主键&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_NO IS &apos;通话号码&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_BEGIN_TIME IS &apos;开始时间&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_END_TIME IS &apos;结束时间&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_DURATION IS &apos;通话时长&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_PROVINCE IS &apos;省份地区&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_PLATFORM IS &apos;运营商&apos;;</span><br><span class="line">COMMENT ON COLUMN T_RECORDS.F_MOBILE IS &apos;手机号码标志&apos;;</span><br><span class="line">COMMENT ON TABLE T_RECORDS  IS &apos;通话清单表&apos;;</span><br></pre></td></tr></table></figure><h3 id="创建ctl文件导入csv数据"><a href="#创建ctl文件导入csv数据" class="headerlink" title="创建ctl文件导入csv数据"></a>创建ctl文件导入csv数据</h3><p>进入<code>external_data</code>路径下并创建以下文件：</p><p><code>contro_mobiles.ctl:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATA</span><br><span class="line">CHARACTERSET UTF8</span><br><span class="line">INFILE &apos;/home/oracle/data/mobiles.csv&apos;</span><br><span class="line">TRUNCATE INTO TABLE t_mobiles</span><br><span class="line">FIELDS TERMINATED BY &apos;,&apos; OPTIONALLY ENCLOSED BY &apos;&quot;&apos;</span><br><span class="line">TRAILING NULLCOLS</span><br><span class="line">(</span><br><span class="line">F_ID,</span><br><span class="line">F_MOBILE_HEAD,</span><br><span class="line">F_PROVINCE,</span><br><span class="line">F_CITY,</span><br><span class="line">F_PLATFORM,</span><br><span class="line">F_TEL_HEAD,</span><br><span class="line">F_ZIPCODE</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>control_records.ctl:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATA</span><br><span class="line">CHARACTERSET UTF8</span><br><span class="line">INFILE &apos;/home/oracle/data/records.csv&apos;</span><br><span class="line">TRUNCATE INTO TABLE t_records</span><br><span class="line">FIELDS TERMINATED BY &apos;,&apos; OPTIONALLY ENCLOSED BY &apos;&quot;&apos;</span><br><span class="line">TRAILING NULLCOLS</span><br><span class="line">(</span><br><span class="line">F_NO,</span><br><span class="line">F_BEGIN_TIME DATE &quot;YYYY-MM-DD HH24:MI:SS&quot;,</span><br><span class="line">F_END_TIME DATE &quot;YYYY-MM-DD HH24:MI:SS&quot;,</span><br><span class="line">F_DURATION INTEGER EXTERNAL</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在该路径下执行导入操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sqlldr userid=<span class="built_in">test</span>/<span class="built_in">test</span> control=control_mobiles.ctl</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sqlldr userid=<span class="built_in">test</span>/<span class="built_in">test</span> control=control_records.ctl</span></span><br></pre></td></tr></table></figure><blockquote><p>教程中命令为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ sqlldr userid=<span class="built_in">test</span>/<span class="built_in">test</span>@orcl control=control_mobiles.ctl</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>即在导入时指定<code>连接字符串</code>（这里的orcl实际上是连接字符串的别名），其在<code>$ORACLE_HOME/network/admin/tnsname.ora</code>中被声明，但是默认状态下oracle中并没有配置该连接字符串，意味着我们在连接时不需要为其指定值。</p><p>既然如此，应用程序该如何在未进行上述配置的情况下连接到该字符串呢？这里就是<code>连接字符串</code>和<code>服务名</code>的区别，oracle有个默认服务名<code>XE</code>，实际上oracle中还有多个备用服务，当XE服务崩掉的时候会自动切换到备用服务。连接字符串如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; jdbc:oracle:thin:@localhost:1521:XE</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>那么没有配置连接字符串别名时，sqlplus如何通过此方法连接呢？如下直接将连接字符串全部写全：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="comment"># 命令格式：sqlplus username/password@host:port/service_name</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> $ sqlplus tanrui/tanrui@127.0.0.1:1521/xe</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-- 1、创建序列seq_records_pk用于生成通话记录表t_records的主键</span><br><span class="line">create sequence seq_records increment by 1 start with 1 ;</span><br><span class="line"></span><br><span class="line">-- 2、修补通话记录表t_records的主键数据，并把f_id改为主键</span><br><span class="line">update t_records set f_id=seq_records.nextval;</span><br><span class="line">alter table t_records add constraint t_records_pk primary key (f_id);</span><br><span class="line"></span><br><span class="line">-- 3、创建并初始化同步锁表，用于多线程同步控制</span><br><span class="line">CREATE TABLE T_LOCK(F_NAME VARCHAR2(30),F_INDEX NUMBER(20,0),PRIMARY KEY(F_NAME));</span><br><span class="line">COMMENT ON COLUMN T_LOCK.F_NAME IS &apos;锁名&apos;;</span><br><span class="line">COMMENT ON COLUMN T_LOCK.F_INDEX IS &apos;锁的当前值&apos;;</span><br><span class="line">COMMENT ON TABLE T_LOCK  IS &apos;同步锁表&apos;;</span><br><span class="line">insert into T_LOCK values(&apos;_RECORD_INDEX&apos;,0);</span><br><span class="line"></span><br><span class="line">-- 4、在电话号段表中创建唯一性索引，提高号段检索速度</span><br><span class="line">create unique index uniq_mobile_head on t_mobiles(f_mobile_head);</span><br><span class="line">update t_mobiles set f_province = &apos;内蒙古&apos; where f_province = &apos;内蒙&apos;;</span><br><span class="line"></span><br><span class="line">-- 5、创建日志表，用于记录程序执行过程中的日志信息。</span><br><span class="line">create table t_log(f_time date, f_head varchar2(20), f_content varchar2(500));</span><br><span class="line">COMMENT ON COLUMN T_LOG.F_TIME IS &apos;日志时间&apos;;</span><br><span class="line">COMMENT ON COLUMN T_LOG.F_HEAD IS &apos;日志类型标志&apos;;</span><br><span class="line">COMMENT ON COLUMN T_LOG.F_CONTENT IS &apos;日志内容&apos;;</span><br><span class="line">COMMENT ON TABLE T_LOG  IS &apos;日志表&apos;;</span><br></pre></td></tr></table></figure><h2 id="创建函数和存储过程"><a href="#创建函数和存储过程" class="headerlink" title="创建函数和存储过程"></a>创建函数和存储过程</h2><h3 id="声明函数和存储过程"><a href="#声明函数和存储过程" class="headerlink" title="声明函数和存储过程"></a>声明函数和存储过程</h3><ul><li>函数is_mobile，判断通话号码是否为手机号码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">--函数：判断通话号码是否为手机号码</span><br><span class="line">CREATE OR REPLACE FUNCTION is_mobile(phone VARCHAR2)</span><br><span class="line">    RETURN BOOLEAN IS</span><br><span class="line"></span><br><span class="line">    v_phone VARCHAR2(20);</span><br><span class="line">    v_head VARCHAR2(2);</span><br><span class="line">BEGIN</span><br><span class="line">    --检查参数func</span><br><span class="line">    IF phone IS NULL THEN</span><br><span class="line">        RETURN FALSE;</span><br><span class="line">    END IF;</span><br><span class="line"></span><br><span class="line">--去除前后空格</span><br><span class="line">    v_phone := TRIM(phone);</span><br><span class="line"></span><br><span class="line">--去除号码前面的0</span><br><span class="line">    IF substr(v_phone,0,1) = &apos;0&apos; THEN</span><br><span class="line">        v_phone := substr(v_phone, 2);</span><br><span class="line">    END IF;</span><br><span class="line"></span><br><span class="line">--检查手机号码长度</span><br><span class="line">    IF substr(v_phone,0,1) &lt;&gt; &apos;1&apos; OR LENGTH(v_phone) &lt;&gt; 11 THEN</span><br><span class="line">        RETURN FALSE;</span><br><span class="line">    END IF;</span><br><span class="line"></span><br><span class="line">--截取号码前两位</span><br><span class="line">    v_head := substr(v_phone,1,2);</span><br><span class="line"></span><br><span class="line">    IF v_head = &apos;13&apos; OR v_head = &apos;14&apos; OR v_head =&apos;15&apos; OR v_head =&apos;17&apos; OR v_head = &apos;18&apos; THEN</span><br><span class="line">        RETURN TRUE;</span><br><span class="line">    ELSE</span><br><span class="line">        RETURN FALSE;</span><br><span class="line">    END IF;</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程init，清空t_log，同时t_lock置零</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">--存储过程：初始化测试数据</span><br><span class="line">CREATE OR REPLACE PROCEDURE init IS</span><br><span class="line">    CURSOR job_cursor IS SELECT JOB FROM user_jobs;</span><br><span class="line">BEGIN</span><br><span class="line">--重置处理位置为0</span><br><span class="line">    EXECUTE IMMEDIATE &apos;update t_lock set f_index=0&apos;;</span><br><span class="line"></span><br><span class="line">--清除日志表中的记录</span><br><span class="line">    EXECUTE IMMEDIATE &apos;truncate table t_log&apos;;</span><br><span class="line"></span><br><span class="line">--重置话单表中的记录</span><br><span class="line">    EXECUTE IMMEDIATE &apos;update t_records set f_province = NULL,f_platform=NULL, f_mobile=-1&apos;;</span><br><span class="line">    COMMIT;</span><br><span class="line"></span><br><span class="line">    FOR tmp_job IN job_cursor LOOP</span><br><span class="line">        dbms_job.broken(tmp_job.JOB,TRUE,sysdate);</span><br><span class="line">        dbms_job.REMOVE(tmp_job.JOB);</span><br><span class="line">    END LOOP;</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程print，打印日志，存到T_LOG表中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--存储过程：打印日志</span><br><span class="line">CREATE OR REPLACE PROCEDURE print(prefix VARCHAR2, content VARCHAR2) IS</span><br><span class="line">BEGIN</span><br><span class="line">--dbms_output.put_line(to_char(&apos;yyyy-mm-dd hh24:mi:ss&apos;)||&apos;,&apos;||prefix||&apos;,&apos;||content);</span><br><span class="line">INSERT INTO t_log VALUES(sysdate,prefix, content);</span><br><span class="line">COMMIT;</span><br><span class="line">EXCEPTION</span><br><span class="line">WHEN OTHERS THEN</span><br><span class="line">dbms_output.put_line(&apos;Error code: &apos;||SQLCODE);</span><br><span class="line">dbms_output.put_line(&apos;Error mesg: &apos;||sqlerrm);</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程show，显示当前处理情况</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">--存储过程：显示当前处理情况</span><br><span class="line">CREATE OR REPLACE PROCEDURE show IS</span><br><span class="line">--待处理记录总数</span><br><span class="line">    v_record_count NUMBER;</span><br><span class="line"></span><br><span class="line">--当前日志表记录总数</span><br><span class="line">    v_log_count NUMBER;</span><br><span class="line"></span><br><span class="line">--当前数据处理位置</span><br><span class="line">    v_current_index NUMBER;</span><br><span class="line"></span><br><span class="line">--用户Job表游标</span><br><span class="line">    CURSOR job_cursor IS SELECT * FROM user_jobs;</span><br><span class="line"></span><br><span class="line">BEGIN</span><br><span class="line">    SELECT COUNT(1) INTO v_log_count FROM t_log;</span><br><span class="line">    SELECT f_index INTO v_current_index FROM t_lock;</span><br><span class="line">    SELECT COUNT(1) INTO v_record_count FROM t_records;</span><br><span class="line"></span><br><span class="line">dbms_output.put_line(&apos;log count: &apos;||v_log_count);</span><br><span class="line">    dbms_output.put_line(&apos;record count: &apos;||v_record_count);</span><br><span class="line">    dbms_output.put_line(&apos;current index: &apos;||v_current_index);</span><br><span class="line"></span><br><span class="line">--清除用户job记录</span><br><span class="line">    FOR tmp_job IN job_cursor LOOP</span><br><span class="line">        dbms_output.put_line(&apos;job:&apos;||tmp_job.JOB||&apos;,broken:&apos;||tmp_job.broken||&apos;,total_time:&apos;||tmp_job.total_time||&apos;,failures:&apos;||tmp_job.failures||&apos;,interval:&apos;||tmp_job.INTERVAL||&apos;,last_sec:&apos;||tmp_job.last_sec||&apos;,next_sec:&apos;||tmp_job.next_sec);</span><br><span class="line"></span><br><span class="line">    END LOOP;</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程process_data，提交一个job处理数据</li></ul><blockquote><p><strong>共享锁和排它锁:</strong></p><ul><li><p>当某事务对数据添加共享锁时，此时该事务<code>只能读不能写</code>，其他事务只能对该数据添加共享锁，而不能添加排它锁</p></li><li><p>当某事务对数据添加排它锁时，此时该事务<code>既能读又能写</code>，其他事务不能对该数据添加任何锁</p></li></ul><p><strong>autocommit需要关掉:</strong></p><p>假设现在有三个job对T_LOCK表进行并发读写，如下：</p><p><img src="/img/image-20181124202306595.png" alt="image-20181124202306595"></p><p>步骤如下：</p><p><img src="/img/锁.png" alt="锁"></p><p>阻塞情况：</p><p><img src="/img/锁2.png" alt="锁2"></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">--存储过程：处理数据</span><br><span class="line">CREATE OR REPLACE PROCEDURE process_data(process_no IN NUMBER, batch_size IN NUMBER) IS</span><br><span class="line">    --定义常量</span><br><span class="line">    c_record_index CONSTANT VARCHAR2(20)   :=&apos;_RECORD_INDEX&apos;;</span><br><span class="line">    c_process_prefix CONSTANT VARCHAR2(20) := &apos;[  PROCESS ]&apos;;</span><br><span class="line">    c_select_record_sql VARCHAR2(100)  := &apos;select * from t_records where f_id &gt;= :x and f_id &lt;= :y&apos;;</span><br><span class="line">    c_select_mobile_sql VARCHAR2(100)  := &apos;select * from t_mobiles where f_mobile_head = :x&apos;;</span><br><span class="line">    c_update_mobile_sql VARCHAR2(100)  := &apos;update t_records set f_province = :x, f_platform = :y, f_mobile = 1 where f_id = :z&apos;;</span><br><span class="line">    c_update_record_sql VARCHAR2(100)  := &apos;update t_records set f_mobile = 0 where f_id = :n&apos;;</span><br><span class="line">    v_record_count NUMBER;</span><br><span class="line">    v_current_index NUMBER;</span><br><span class="line">    v_begin_index NUMBER;</span><br><span class="line">    v_end_index NUMBER;</span><br><span class="line">    v_id NUMBER;</span><br><span class="line">    v_phone VARCHAR2(20);</span><br><span class="line">    v_province VARCHAR2(20);</span><br><span class="line">    v_platform VARCHAR2(20);</span><br><span class="line">    --定义动态游标</span><br><span class="line">    TYPE ty_record_cursor IS REF CURSOR;</span><br><span class="line">    record_cursor ty_record_cursor;</span><br><span class="line">    mobile_cursor ty_record_cursor;</span><br><span class="line">    v_record_row t_records%rowtype;</span><br><span class="line">    v_mobile_row t_mobiles%rowtype;</span><br><span class="line">BEGIN</span><br><span class="line">    PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], running...&apos;);</span><br><span class="line">    --获取待处理的记录总数</span><br><span class="line">    SELECT COUNT(1) INTO v_record_count FROM t_records;</span><br><span class="line">    PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], records count: &apos;||v_record_count);</span><br><span class="line">    LOOP</span><br><span class="line">        --获取记录锁</span><br><span class="line">        SELECT f_index INTO v_current_index FROM t_lock WHERE f_name = c_record_index FOR UPDATE;</span><br><span class="line">        PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], current index: &apos;||v_current_index);</span><br><span class="line">        IF v_current_index = v_record_count THEN</span><br><span class="line">            PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], finished.&apos;);</span><br><span class="line">            EXIT;</span><br><span class="line">        END IF;</span><br><span class="line">        --记录本次处理的开始和结束记录位置</span><br><span class="line">        v_end_index := v_current_index + batch_size;</span><br><span class="line">        IF v_end_index &gt; v_record_count THEN</span><br><span class="line">            v_end_index := v_record_count;</span><br><span class="line">        END IF;</span><br><span class="line">        --提交事务，释放锁</span><br><span class="line">        UPDATE t_lock SET f_index = v_end_index WHERE f_name =c_record_index;</span><br><span class="line">        COMMIT;</span><br><span class="line">        --计算开始位置</span><br><span class="line">        v_begin_index := v_current_index +1;</span><br><span class="line">        PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], begin index:&apos;||v_begin_index||&apos;, end index:&apos;||v_end_index);</span><br><span class="line">        --test：dbms_lock.sleep(5);</span><br><span class="line">        --查询一批记录进行逐个处理</span><br><span class="line">        OPEN record_cursor FOR c_select_record_sql USING v_begin_index, v_end_index;</span><br><span class="line">        LOOP</span><br><span class="line">            FETCH record_cursor INTO v_record_row;</span><br><span class="line">            EXIT WHEN record_cursor%notfound;</span><br><span class="line">            v_id    := v_record_row.f_id;</span><br><span class="line">            v_phone := v_record_row.f_no;</span><br><span class="line">            IF is_mobile(v_phone) THEN</span><br><span class="line">                v_phone := TRIM(v_phone);</span><br><span class="line">                IF substr(v_phone,0,1) = &apos;0&apos; THEN</span><br><span class="line">                    v_phone := substr(v_phone, 2);</span><br><span class="line">                END IF;</span><br><span class="line">                --PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], id:&apos;||v_id||&apos;, phone:&apos;||v_phone);</span><br><span class="line">                --更新话单记录中的省份、运营商以及手机类型标志</span><br><span class="line">                OPEN mobile_cursor FOR c_select_mobile_sql USING substr(v_phone,1,7);</span><br><span class="line">                    FETCH mobile_cursor INTO v_mobile_row;</span><br><span class="line">                    v_province := v_mobile_row.f_province;</span><br><span class="line">                    v_platform := v_mobile_row.f_platform;</span><br><span class="line">                    --FETCH mobile_cursor INTO v_province, v_platform;</span><br><span class="line">                CLOSE mobile_cursor;</span><br><span class="line">--更新话单记录的运营商、省份地区信息</span><br><span class="line">                EXECUTE IMMEDIATE c_update_mobile_sql USING v_province,v_platform,v_id;</span><br><span class="line">            ELSE</span><br><span class="line">                --更新话单记录为非移动号码类型</span><br><span class="line">                EXECUTE IMMEDIATE c_update_record_sql USING v_id;</span><br><span class="line">            END IF;</span><br><span class="line">--提交事务</span><br><span class="line">            COMMIT;</span><br><span class="line">        END LOOP;</span><br><span class="line">        CLOSE record_cursor;</span><br><span class="line">        PRINT(c_process_prefix, &apos;process[&apos;||process_no||&apos;], processed index: &apos;||v_end_index);</span><br><span class="line">    END LOOP;</span><br><span class="line">EXCEPTION</span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line">        dbms_output.put_line(&apos;Error code: &apos;||SQLCODE);</span><br><span class="line">        dbms_output.put_line(&apos;Error mesg: &apos;||sqlerrm);</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程generate_csv_report，生成报表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">--存储过程：生成报表</span><br><span class="line">CREATE OR REPLACE PROCEDURE generate_csv_report IS</span><br><span class="line">c_report_prefix CONSTANT VARCHAR2(20) := &apos;[  REPORT  ]&apos;;</span><br><span class="line">    v_report_1  UTL_FILE.FILE_TYPE;</span><br><span class="line">    v_report_2  UTL_FILE.FILE_TYPE;</span><br><span class="line">    CURSOR report_1_cursor IS SELECT f_platform,f_province,SUM(f_duration) total FROM t_records WHERE f_mobile=1 GROUP BY f_platform,f_province ORDER BY f_platform ASC,SUM(f_duration) DESC;</span><br><span class="line">    cursor report_2_cursor is select f_province,f_platform,sum(f_duration) total from t_records where f_mobile=1 group by f_province,f_platform order by f_province asc,sum(f_duration) desc;</span><br><span class="line">BEGIN</span><br><span class="line">    --生成报表1，根据运营商分类汇总各省份地区的通话量</span><br><span class="line">    v_report_1 := UTL_FILE.FOPEN( LOCATION =&gt; &apos;EXTERNAL_DATA&apos;, filename =&gt; &apos;report1.csv&apos;, open_mode =&gt; &apos;w&apos;, max_linesize =&gt; 32767);</span><br><span class="line">    FOR cur_tmp IN report_1_cursor LOOP</span><br><span class="line">        UTL_FILE.PUT_LINE(v_report_1, cur_tmp.f_platform || &apos;,&apos; || cur_tmp.f_province || &apos;,&apos; || cur_tmp.total);</span><br><span class="line">    END LOOP;</span><br><span class="line">    UTL_FILE.FCLOSE(v_report_1);</span><br><span class="line">    --生成报表2，根据各省份地区汇总各运营商的通话量</span><br><span class="line">    v_report_2 := UTL_FILE.FOPEN( LOCATION =&gt; &apos;EXTERNAL_DATA&apos;, filename =&gt; &apos;report2.csv&apos;, open_mode =&gt; &apos;w&apos;, max_linesize =&gt; 32767);</span><br><span class="line">    FOR cur_tmp IN report_2_cursor LOOP</span><br><span class="line">        UTL_FILE.PUT_LINE(v_report_2, cur_tmp.f_province || &apos;,&apos; || cur_tmp.f_platform || &apos;,&apos; ||  cur_tmp.total);</span><br><span class="line">    END LOOP;</span><br><span class="line">    UTL_FILE.FCLOSE(v_report_2);</span><br><span class="line">    PRINT(c_report_prefix, &apos;generated reports.&apos;);</span><br><span class="line">    EXCEPTION</span><br><span class="line">        WHEN OTHERS THEN</span><br><span class="line">            dbms_output.put_line(&apos;Error code: &apos;||SQLCODE);</span><br><span class="line">            dbms_output.put_line(&apos;Error mesg: &apos;||sqlerrm);</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程analysis，调用上述函数，完成任务逻辑，支持指定任务个数和一批数量</li></ul><blockquote><p><strong><a href="https://docs.oracle.com/cd/B28359_01/appdev.111/b28419/d_job.htm#BABHCBFD" target="_blank" rel="noopener">dbms_job</a>:</strong></p><p>用于管理job的package</p><p><strong>oracle限定的job_queue_process:</strong></p><p>oracle中有一个对任务可启动进程的数量进行限制的参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; SQL&gt; show job_queue_process;</span><br><span class="line">&gt; NAME     TYPE VALUE</span><br><span class="line">&gt; ----------------------------------------------------------</span><br><span class="line">&gt; job_queue_processes integer 10</span><br><span class="line">&gt;</span><br><span class="line">&gt; SQL&gt; alter system set job_queue_process=0...1000;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>使用ctrl+c是无法停止job的:</strong></p><p>可使用<code>top</code>命令查看当前进程详情，如果需要结束特定job可kill对应job的进程号</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE PROCEDURE analysis (job_count IN NUMBER, batch_size IN NUMBER)IS</span><br><span class="line">    --定义常量</span><br><span class="line">    c_record_index CONSTANT VARCHAR2(20):=&apos;_RECORD_INDEX&apos;;</span><br><span class="line">  c_analysis_prefix CONSTANT VARCHAR2(20):= &apos;[ ANALYSIS ]&apos;;</span><br><span class="line">    --当前处理位置</span><br><span class="line">    v_record_index NUMBER;</span><br><span class="line">    --待处理的记录总数</span><br><span class="line">    v_record_count NUMBER;</span><br><span class="line">    --保存临时创建的job no</span><br><span class="line">    v_tmp_jobno NUMBER;</span><br><span class="line">    --开始结束时间</span><br><span class="line">    v_begin_time NUMBER;</span><br><span class="line">    v_process_end_time NUMBER;</span><br><span class="line">    v_analysis_end_time NUMBER;</span><br><span class="line">    --异常变量</span><br><span class="line">    e_invalid_input EXCEPTION;</span><br><span class="line">BEGIN</span><br><span class="line">    PRINT(c_analysis_prefix, &apos; start analysis...&apos;);</span><br><span class="line">    --输入参数检查</span><br><span class="line">    IF job_count &lt; 1 OR batch_size&lt;1 THEN</span><br><span class="line">        RAISE e_invalid_input;</span><br><span class="line">    END IF;</span><br><span class="line">    PRINT(c_analysis_prefix, &apos; checked input parameters.&apos;);</span><br><span class="line">    --记录开始时间</span><br><span class="line">    v_begin_time := dbms_utility.get_time;</span><br><span class="line">    --获取待处理的记录总数</span><br><span class="line">    SELECT COUNT(1) INTO v_record_count FROM t_records;</span><br><span class="line">    PRINT(c_analysis_prefix, &apos; records count: &apos;||v_record_count);</span><br><span class="line">    --开始计算重置为0</span><br><span class="line">    UPDATE t_lock SET f_index=0 WHERE f_name=c_record_index;</span><br><span class="line">    COMMIT;</span><br><span class="line">    PRINT(c_analysis_prefix, &apos; reset index to zero.&apos;);</span><br><span class="line">    --提交多个job</span><br><span class="line">    FOR I IN 1.. job_count LOOP</span><br><span class="line">        dbms_job.submit(v_tmp_jobno,&apos;begin process_data(&apos;||I||&apos;,&apos;||batch_size||&apos;); end;&apos;);</span><br><span class="line">        PRINT(c_analysis_prefix, &apos; submitted new job, no: &apos;||v_tmp_jobno);</span><br><span class="line">    END LOOP;</span><br><span class="line">    PRINT(c_analysis_prefix, &apos; created &apos;||job_count||&apos; jobs.&apos;);</span><br><span class="line">    --定时检查处理进度</span><br><span class="line">    LOOP</span><br><span class="line">        SELECT f_index INTO v_record_index FROM t_lock WHERE f_name = c_record_index;</span><br><span class="line">        PRINT(c_analysis_prefix, &apos; current index: &apos;||v_record_index);</span><br><span class="line">        IF v_record_index = v_record_count THEN</span><br><span class="line">            PRINT(c_analysis_prefix, &apos; processed all records, exiting...&apos;);</span><br><span class="line">            EXIT;</span><br><span class="line">        ELSE</span><br><span class="line">            dbms_lock.sleep(5);--暂停等待5秒</span><br><span class="line">        END IF;</span><br><span class="line">    END LOOP;</span><br><span class="line">    v_process_end_time := dbms_utility.get_time;</span><br><span class="line">    PRINT(c_analysis_prefix, &apos;process, elapsed time: &apos;||(v_process_end_time-v_begin_time)/100||&apos; seconds.&apos;);</span><br><span class="line">    dbms_output.put_line(&apos;process, elapsed time: &apos;||(v_process_end_time-v_begin_time)/100||&apos; seconds.&apos;);</span><br><span class="line">    --分类汇总产生报表</span><br><span class="line">    generate_csv_report;</span><br><span class="line">    --结束时间</span><br><span class="line">    v_analysis_end_time := dbms_utility.get_time;</span><br><span class="line">    PRINT(c_analysis_prefix, &apos;report, elapsed time: &apos;||(v_analysis_end_time-v_process_end_time)/100||&apos; seconds.&apos;);</span><br><span class="line">    dbms_output.put_line(&apos;report, elapsed time: &apos;||(v_analysis_end_time-v_process_end_time)/100||&apos; seconds.&apos;);</span><br><span class="line">--异常捕获部分</span><br><span class="line">EXCEPTION</span><br><span class="line">    WHEN e_invalid_input THEN</span><br><span class="line">        dbms_output.put_line(&apos;Invalid input values, job_count:&apos;||job_count||&apos;, batch_size:&apos;||batch_size);</span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line">        dbms_output.put_line(&apos;Error code: &apos;||SQLCODE);</span><br><span class="line">        dbms_output.put_line(&apos;Error mesg: &apos;||sqlerrm);</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><ul><li>存储过程mul_analysis，循环调用analysis，指定不同的任务个数和批数量，并将运行时间存入T_RESULT中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">-- 调用多次analysis，指定不同的job数和批数</span><br><span class="line">create or replace procedure mul_analysis is</span><br><span class="line">    -- 最小job数</span><br><span class="line">    v_begin_job_no NUMBER := 3;</span><br><span class="line">    -- 最大job数</span><br><span class="line">    v_end_job_no NUMBER := 8;</span><br><span class="line">    -- 每次增长的batch数量</span><br><span class="line">    v_range NUMBER := 2000;</span><br><span class="line">    -- 最小batch数量</span><br><span class="line">    v_begin_range NUMBER := 1000;</span><br><span class="line">    -- 最大batch数量</span><br><span class="line">    v_end_range NUMBER := 10000;</span><br><span class="line">    -- 当前range</span><br><span class="line">    range NUMBER;</span><br><span class="line">    begin</span><br><span class="line">        for I in v_begin_job_no..v_end_job_no LOOP</span><br><span class="line">            range := v_begin_range;</span><br><span class="line">            LOOP</span><br><span class="line">                -- 清洗表</span><br><span class="line">                init();</span><br><span class="line">                -- 分析</span><br><span class="line">                analysis(I, range);</span><br><span class="line">                range := range+v_range;</span><br><span class="line">-- range增长到10000则停止</span><br><span class="line">                if range &gt; v_end_range then</span><br><span class="line">                    exit;</span><br><span class="line">                end if;</span><br><span class="line">            end loop;</span><br><span class="line">        end loop;</span><br><span class="line">    end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h3 id="执行函数和存储过程"><a href="#执行函数和存储过程" class="headerlink" title="执行函数和存储过程"></a>执行函数和存储过程</h3><blockquote><p>在sqlplus中执行函数和存储过程之前需先打开serveroutput，即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; SQL&gt; set serveroutput on;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>这是因为存储过程中用到了<code>dbms_output.put_line</code>，上述语句是相当于告诉pl/sql引擎将<code>dbms_output.put_line</code>传递到缓冲区的内容输出到主控制台上。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call init();</span><br><span class="line">call analysis(4,1000);</span><br></pre></td></tr></table></figure><h2 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h2><p>通过执行<code>mul_analysis()</code>对一系列job和batch组合值进行测试，结果如下：</p><p><img src="/img/image-20181124205409162.png" alt="image-20181124205409162"></p><h1 id="Lesson-2"><a href="#Lesson-2" class="headerlink" title="Lesson 2"></a>Lesson 2</h1><h2 id="创建用户并分配权限-1"><a href="#创建用户并分配权限-1" class="headerlink" title="创建用户并分配权限"></a>创建用户并分配权限</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user audittest identified by audittest;</span><br></pre></td></tr></table></figure><h3 id="分配权限"><a href="#分配权限" class="headerlink" title="分配权限"></a>分配权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grant connect,resource to audittest;</span><br><span class="line">grant execute on dbms_lock to audittest;</span><br><span class="line">alter user audittest quota unlimited on users;</span><br><span class="line">conn audittest/audittest;</span><br></pre></td></tr></table></figure><h2 id="创建表及其他对象"><a href="#创建表及其他对象" class="headerlink" title="创建表及其他对象"></a>创建表及其他对象</h2><h3 id="创建表-1"><a href="#创建表-1" class="headerlink" title="创建表"></a>创建表</h3><blockquote><p>注意：</p><p>这里在创建表时添加了<code>ENABLE</code>限制条件，oracle中对表和列的约束有<code>Enable</code>/<code>Disable</code>(启用/禁用)和<code>Validate</code>/<code>NoValidate</code>(验证/不验证)</p><p>举两个例子：</p><p><strong>需更改的错误：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; -- 创建表，对name字段添加唯一性约束</span><br><span class="line">&gt; drop table T_TEST;</span><br><span class="line">&gt; create table T_TEST(</span><br><span class="line">&gt;   id int primary key ,</span><br><span class="line">&gt;   name varchar2(10) constraint unique_name unique disable</span><br><span class="line">&gt; );</span><br><span class="line">&gt; -- 由于某些错误，添加的记录违反了唯一性约束，但添加不会报错</span><br><span class="line">&gt; begin</span><br><span class="line">&gt;   insert into T_TEST values (1, &apos;tan&apos;);</span><br><span class="line">&gt;   insert into T_TEST values (2, &apos;rui&apos;);</span><br><span class="line">&gt;   insert into T_TEST values (3, &apos;tan&apos;);</span><br><span class="line">&gt; end;</span><br><span class="line">&gt; select * from T_TEST;</span><br><span class="line">&gt; -- 修改掉违反唯一性约束的值</span><br><span class="line">&gt; update T_TEST set name=&apos;chen&apos; where id=3;</span><br><span class="line">&gt; -- 使得唯一性约束生效</span><br><span class="line">&gt; alter table T_TEST modify constraint unique_name enable;</span><br><span class="line">&gt; select * from T_TEST;</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>需保留的错误：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; -- 创建表，无约束</span><br><span class="line">&gt; drop table T_TEST;</span><br><span class="line">&gt; create table T_TEST(</span><br><span class="line">&gt;   id int primary key ,</span><br><span class="line">&gt;   name varchar2(10)</span><br><span class="line">&gt; );</span><br><span class="line">&gt; -- 一些old的记录本身可能存在重复数据</span><br><span class="line">&gt; begin</span><br><span class="line">&gt;   insert into T_TEST values (1, &apos;tan&apos;);</span><br><span class="line">&gt;   insert into T_TEST values (2, &apos;rui&apos;);</span><br><span class="line">&gt;   insert into T_TEST values (3, &apos;tan&apos;);</span><br><span class="line">&gt; end;</span><br><span class="line">&gt; select * from T_TEST;</span><br><span class="line">&gt; -- 对name列创建非唯一性索引</span><br><span class="line">&gt; create index i_name on T_TEST(name);</span><br><span class="line">&gt; -- 新要求需要对name添加唯一性约束unique_name，但保留旧值，注意这里一定要使用非唯一性索引</span><br><span class="line">&gt; alter table T_TEST add constraint unique_name unique(name) using index i_name ENABLE NOVALIDATE ;</span><br><span class="line">&gt; -- 此时无法插入name相同的数据了</span><br><span class="line">&gt; insert into T_TEST values (4, &apos;tan&apos;);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">--部门表</span><br><span class="line">CREATE TABLE &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CODE&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_PARENT_ID&quot; NUMBER(6,0),</span><br><span class="line">&quot;F_MANAGER&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line"> CONSTRAINT &quot;T_DEPARTMENT_PK&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;.&quot;F_NAME&quot; IS &apos;部门名称&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;.&quot;F_CODE&quot; IS &apos;部门编号&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;.&quot;F_PARENT_ID&quot; IS &apos;上级部门ID&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;.&quot;F_MANAGER&quot; IS &apos;部门经理&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;AUDITTEST&quot;.&quot;T_DEPARTMENT&quot;  IS &apos;部门表&apos;;</span><br><span class="line"></span><br><span class="line">--用户表</span><br><span class="line">CREATE TABLE &quot;AUDITTEST&quot;.&quot;T_USER&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_DEPT_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CODE&quot; VARCHAR2(20 BYTE),</span><br><span class="line">&quot;F_SEX&quot; VARCHAR2(5 BYTE) DEFAULT NULL,</span><br><span class="line">&quot;F_MOBILE&quot; VARCHAR2(20 BYTE),</span><br><span class="line">&quot;F_TELEPHONE&quot; VARCHAR2(20 BYTE),</span><br><span class="line">&quot;F_EMAIL&quot; VARCHAR2(50 BYTE),</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line"> CONSTRAINT &quot;T_USER_PK&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_DEPT_ID&quot; IS &apos;部门ID&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_NAME&quot; IS &apos;用户名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_CODE&quot; IS &apos;员工编号&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_SEX&quot; IS &apos;性别&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_MOBILE&quot; IS &apos;手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_TELEPHONE&quot; IS &apos;固话&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_EMAIL&quot; IS &apos;邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_USER&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;AUDITTEST&quot;.&quot;T_USER&quot;  IS &apos;用户表&apos;;</span><br><span class="line"></span><br><span class="line">--客户信息表</span><br><span class="line">CREATE TABLE &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CODE&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_FULL_NAME&quot; VARCHAR2(145 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_LINKMAN&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MOBILE&quot; VARCHAR2(11 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_TELEPHONE&quot; VARCHAR2(20 BYTE),</span><br><span class="line">&quot;F_EMAIL&quot; VARCHAR2(60 BYTE),</span><br><span class="line">&quot;F_ADDRESS&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_CITY&quot; VARCHAR2(45 BYTE),</span><br><span class="line">&quot;F_BALANCE&quot; NUMBER(10,2) NOT NULL ENABLE,</span><br><span class="line">&quot;F_PARTNER&quot; VARCHAR2(45 BYTE),</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_SALESMAN&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_DELETED_TAG&quot; NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE,</span><br><span class="line">&quot;F_CREATED_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CREATED_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MODIFIED_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MODIFIED_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line">&quot;F_VERSION&quot; NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE,</span><br><span class="line"> PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_ID&quot; IS &apos;主键&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_CODE&quot; IS &apos;客户编码&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_FULL_NAME&quot; IS &apos;客户全名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_LINKMAN&quot; IS &apos;联系人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_MOBILE&quot; IS &apos;联系手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_TELEPHONE&quot; IS &apos;联系固话&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_EMAIL&quot; IS &apos;联系邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_ADDRESS&quot; IS &apos;地址&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_CITY&quot; IS &apos;城市&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_BALANCE&quot; IS &apos;余额&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_PARTNER&quot; IS &apos;所属合作伙伴&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_SALESMAN&quot; IS &apos;业务员&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_DELETED_TAG&quot; IS &apos;删除标志，0：可用，1：已删除&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_CREATED_ID&quot; IS &apos;创建人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_CREATED_TIME&quot; IS &apos;创建时间&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_MODIFIED_ID&quot; IS &apos;最后修改人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_MODIFIED_TIME&quot; IS &apos;最后修改时间&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;.&quot;F_VERSION&quot; IS &apos;版本号&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;AUDITTEST&quot;.&quot;T_CUSTOMER&quot;  IS &apos;客户信息表&apos;;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CODE&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_FULL_NAME&quot; VARCHAR2(145 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_LINKMAN&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MOBILE&quot; VARCHAR2(11 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_TELEPHONE&quot; VARCHAR2(20 BYTE),</span><br><span class="line">&quot;F_EMAIL&quot; VARCHAR2(60 BYTE),</span><br><span class="line">&quot;F_ADDRESS&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_CITY&quot; VARCHAR2(45 BYTE),</span><br><span class="line">&quot;F_BALANCE&quot; NUMBER(10,2) NOT NULL ENABLE,</span><br><span class="line">&quot;F_PARTNER&quot; VARCHAR2(45 BYTE),</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_SALESMAN&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_DELETED_TAG&quot; NUMBER(1,0) DEFAULT 0 NOT NULL ENABLE,</span><br><span class="line">&quot;F_CREATED_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CREATED_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MODIFIED_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MODIFIED_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line">&quot;F_VERSION&quot; NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE,</span><br><span class="line"> CONSTRAINT &quot;T_CUSTOMER_HISTORY_PK&quot; PRIMARY KEY (&quot;F_ID&quot;, &quot;F_VERSION&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--客户信息历史表</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_ID&quot; IS &apos;主键&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_CODE&quot; IS &apos;客户编码&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_FULL_NAME&quot; IS &apos;客户全名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_LINKMAN&quot; IS &apos;联系人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_MOBILE&quot; IS &apos;联系手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_TELEPHONE&quot; IS &apos;联系固话&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_EMAIL&quot; IS &apos;联系邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_ADDRESS&quot; IS &apos;地址&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_CITY&quot; IS &apos;城市&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_BALANCE&quot; IS &apos;余额&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_PARTNER&quot; IS &apos;所属合作伙伴&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_SALESMAN&quot; IS &apos;业务员&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_DELETED_TAG&quot; IS &apos;删除标志，0：可用，1：已删除&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_CREATED_ID&quot; IS &apos;创建人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_CREATED_TIME&quot; IS &apos;创建时间&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_MODIFIED_ID&quot; IS &apos;最后修改人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_MODIFIED_TIME&quot; IS &apos;最后修改时间&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;.&quot;F_VERSION&quot; IS &apos;版本号&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;AUDITTEST&quot;.&quot;T_CUSTOMER_HISTORY&quot;  IS &apos;客户信息历史表&apos;;</span><br><span class="line"></span><br><span class="line">--审计表</span><br><span class="line">CREATE TABLE &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_TABLE_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_ROW_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_NEW_VERSION&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_COLUMN_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_OLD_VALUE&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_NEW_VALUE&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_OPERATOR_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_OPERATION_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line"> CONSTRAINT &quot;T_AUDIT_PK&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_ID&quot; IS &apos;主键&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_TABLE_NAME&quot; IS &apos;表名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_ROW_ID&quot; IS &apos;业务数据主键&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_NEW_VERSION&quot; IS &apos;新的版本号&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_COLUMN_NAME&quot; IS &apos;字段&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_OLD_VALUE&quot; IS &apos;原值&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_NEW_VALUE&quot; IS &apos;新值&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_OPERATOR_ID&quot; IS &apos;操作用户&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;.&quot;F_OPERATION_TIME&quot; IS &apos;操作时间&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot;  IS &apos;审计表&apos;;</span><br></pre></td></tr></table></figure><h3 id="创建索引、序列"><a href="#创建索引、序列" class="headerlink" title="创建索引、序列"></a>创建索引、序列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 创建复合索引</span><br><span class="line">CREATE INDEX &quot;AUDITTEST&quot;.&quot;IDX_TABLE_ROWID&quot; ON &quot;AUDITTEST&quot;.&quot;T_AUDIT&quot; (&quot;F_TABLE_NAME&quot;, &quot;F_ROW_ID&quot;) ;</span><br><span class="line">-- 创建序列</span><br><span class="line">CREATE SEQUENCE  SEQ_AUDIT_PK  INCREMENT BY 1 START WITH 1;</span><br></pre></td></tr></table></figure><h3 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">--创建触发器</span><br><span class="line">create or replace trigger trg_customer_audit</span><br><span class="line">before update on t_customer</span><br><span class="line">for each row</span><br><span class="line">declare</span><br><span class="line">    c_insert_sql constant varchar2(100) := &apos;insert into t_audit values(:1,:2,:3,:4,:5,:6,:7,:8,systimestamp)&apos;;</span><br><span class="line">    c_table_name constant varchar2(20)  := &apos;T_CUSTOMER&apos;;</span><br><span class="line">    v_column_name varchar2(20);</span><br><span class="line">begin</span><br><span class="line">    --记录当前数据到历史表</span><br><span class="line">    insert into t_customer_history values(:old.f_id,:old.f_code,:old.f_full_name,:old.f_linkman,:old.f_mobile,:old.f_telephone,:old.f_email,:old.f_address,:old.f_city,:old.f_balance,:old.f_partner,:old.f_remark,:old.f_salesman,:old.f_deleted_tag,:old.f_created_id,:old.f_created_time,:old.f_modified_id,:old.f_modified_time,:old.f_version);</span><br><span class="line"></span><br><span class="line">    --递增记录的版本号</span><br><span class="line">    :new.f_version := :old.f_version+1;</span><br><span class="line"></span><br><span class="line">    --判断字段变化</span><br><span class="line">    if updating(&apos;F_LINKMAN&apos;) then</span><br><span class="line">        v_column_name := &apos;联系人&apos;;</span><br><span class="line">        execute immediate c_insert_sql using seq_audit_pk.nextval,c_table_name,:new.f_id,:old.f_version,v_column_name,:old.f_linkman,:new.f_linkman,:new.f_modified_id;</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    if updating(&apos;F_MOBILE&apos;) then</span><br><span class="line">        v_column_name := &apos;手机号码&apos;;</span><br><span class="line">        execute immediate c_insert_sql using seq_audit_pk.nextval,c_table_name,:new.f_id,:old.f_version,v_column_name,:old.f_mobile,:new.f_mobile,:new.f_modified_id;</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    if updating(&apos;F_TELEPHONE&apos;) then</span><br><span class="line">        v_column_name := &apos;固定电话&apos;;</span><br><span class="line">        execute immediate c_insert_sql using seq_audit_pk.nextval,c_table_name,:new.f_id,:old.f_version,v_column_name,:old.f_telephone,:new.f_telephone,:new.f_modified_id;</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    if updating(&apos;F_EMAIL&apos;) then</span><br><span class="line">        v_column_name := &apos;电子邮箱&apos;;</span><br><span class="line">        execute immediate c_insert_sql using seq_audit_pk.nextval,c_table_name,:new.f_id,:old.f_version,v_column_name,:old.f_email,:new.f_email,:new.f_modified_id;</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    if updating(&apos;F_ADDRESS&apos;) then</span><br><span class="line">        v_column_name := &apos;联系地址&apos;;</span><br><span class="line">        execute immediate c_insert_sql using seq_audit_pk.nextval,c_table_name,:new.f_id,:old.f_version,v_column_name,:old.f_address,:new.f_address,:new.f_modified_id;</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    if updating(&apos;F_BALANCE&apos;) then</span><br><span class="line">        v_column_name := &apos;余额&apos;;</span><br><span class="line">        execute immediate c_insert_sql using seq_audit_pk.nextval,c_table_name,:new.f_id,:old.f_version,v_column_name,:old.f_balance,:new.f_balance,:new.f_modified_id;</span><br><span class="line">    end if;</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--创建过程</span><br><span class="line">--过程：重设序列值</span><br><span class="line">create or replace PROCEDURE reset_seq( seq_name IN VARCHAR2 )</span><br><span class="line">IS</span><br><span class="line">    v_val NUMBER;</span><br><span class="line">BEGIN</span><br><span class="line">    EXECUTE IMMEDIATE &apos;SELECT &apos; || seq_name || &apos;.NEXTVAL FROM dual&apos; INTO v_val;</span><br><span class="line"></span><br><span class="line">    EXECUTE IMMEDIATE &apos;ALTER SEQUENCE &apos; || seq_name || &apos; INCREMENT BY -&apos; || v_val ||&apos; MINVALUE 0&apos;;</span><br><span class="line"></span><br><span class="line">    EXECUTE IMMEDIATE &apos;SELECT &apos; || seq_name || &apos;.NEXTVAL FROM dual&apos; INTO v_val;</span><br><span class="line"></span><br><span class="line">    EXECUTE IMMEDIATE &apos;ALTER SEQUENCE &apos; || seq_name || &apos; INCREMENT BY 1 MINVALUE 0&apos;;</span><br><span class="line">end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h3 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h3><h4 id="过程reset-seq"><a href="#过程reset-seq" class="headerlink" title="过程reset_seq"></a>过程reset_seq</h4><blockquote><p>将序列为输入参数seq_name的值重置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--过程：重设序列值</span><br><span class="line">create or replace PROCEDURE reset_seq( seq_name IN VARCHAR2 )</span><br><span class="line">IS</span><br><span class="line">    v_val NUMBER;</span><br><span class="line">BEGIN</span><br><span class="line">    EXECUTE IMMEDIATE &apos;SELECT &apos; || seq_name || &apos;.NEXTVAL FROM dual&apos; INTO v_val;</span><br><span class="line"></span><br><span class="line">    EXECUTE IMMEDIATE &apos;ALTER SEQUENCE &apos; || seq_name || &apos; INCREMENT BY -&apos; || v_val ||&apos; MINVALUE 0&apos;;</span><br><span class="line"></span><br><span class="line">    EXECUTE IMMEDIATE &apos;SELECT &apos; || seq_name || &apos;.NEXTVAL FROM dual&apos; INTO v_val;</span><br><span class="line"></span><br><span class="line">    EXECUTE IMMEDIATE &apos;ALTER SEQUENCE &apos; || seq_name || &apos; INCREMENT BY 1 MINVALUE 0&apos;;</span><br><span class="line">end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h4 id="过程init"><a href="#过程init" class="headerlink" title="过程init"></a>过程init</h4><blockquote><p>truncate(截断)所有表，重设序列，并添加初始值</p><p>注意：</p><p><strong><code>truncate</code>与<code>delete</code>的区别</strong>：delete通常用于删除表中的某些行或者所有行，且delete支持回滚，删除掉的记录的物理空间在commit前并不会被回收。truncate只能删除表的所有行且不支持回滚，删除掉的记录的物理空间也会被立刻回收。</p><p>truncate的好处在于当需要删除所有行它比delete要快，尤其在包含大量触发器、索引和其他依赖项的情况下；且它不会改变表结构、表依赖等关系，这一特性又使得它比重建表更有效，删除和重建表会使得表的依赖关系断开，因此需要重新创建依赖、创建约束、赋予权限等等操作。</p><p>但是truncate也有不好的地方，比如说当被truncate的表被依赖时，举例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; -- 创建表，f_id字段引用T_TEST的主码id</span><br><span class="line">&gt; drop table T_TEST2;</span><br><span class="line">&gt; create table T_TEST2(</span><br><span class="line">&gt;   id1 int primary key ,</span><br><span class="line">&gt;   f_id int,</span><br><span class="line">&gt;   constraint fk</span><br><span class="line">&gt;   foreign key (f_id)</span><br><span class="line">&gt;     references T_TEST(id) on delete cascade</span><br><span class="line">&gt; );</span><br><span class="line">&gt; select *</span><br><span class="line">&gt; from T_TEST2;</span><br><span class="line">&gt; insert into T_TEST2 values(1, 1);</span><br><span class="line">&gt; -- 可级联删除</span><br><span class="line">&gt; delete from T_TEST;</span><br><span class="line">&gt; -- 将外码置为禁用</span><br><span class="line">&gt; alter table T_TEST2 modify constraint fk disable validate ;</span><br><span class="line">&gt; -- 可截断（当不禁用外码时无法截断）</span><br><span class="line">&gt; truncate table T_TEST;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>可见，可通过禁用约束来完成truncate，但是这些主外键约束应是创建数据库时的我们定义的强制关系，上述方法可能会使得这种强制关系紊乱，因此需做好取舍决策。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">--过程：数据初始化</span><br><span class="line">create or replace procedure init is</span><br><span class="line">begin</span><br><span class="line">    --清除数据</span><br><span class="line">    execute immediate &apos;truncate table t_audit&apos;;</span><br><span class="line">    execute immediate &apos;truncate table t_customer_history&apos;;</span><br><span class="line">    execute immediate &apos;truncate table t_customer&apos;;</span><br><span class="line">    execute immediate &apos;truncate table t_user&apos;;</span><br><span class="line">    execute immediate &apos;truncate table t_department&apos;;</span><br><span class="line">    --重调序列</span><br><span class="line">    reset_seq(&apos;seq_audit_pk&apos;);</span><br><span class="line"></span><br><span class="line">    --插入部门</span><br><span class="line">    insert into t_department values(1,&apos;销售部&apos;,&apos;D01&apos;,NULL,&apos;李明&apos;,&apos;备注1...&apos;);</span><br><span class="line">    insert into t_department values(2,&apos;销售部-北京分部&apos;,&apos;D0101&apos;,1,&apos;赵军&apos;,&apos;备注2...&apos;);</span><br><span class="line">    insert into t_department values(3,&apos;销售部-上海分部&apos;,&apos;D0102&apos;,1,&apos;张华&apos;,&apos;备注3...&apos;);</span><br><span class="line">    insert into t_department values(4,&apos;销售部-深圳分部&apos;,&apos;D0103&apos;,1,&apos;王兵&apos;,&apos;备注4...&apos;);</span><br><span class="line"></span><br><span class="line">    --插入用户</span><br><span class="line">    insert into t_user values(1,1,&apos;仲芳芳&apos;,&apos;U8201&apos;,&apos;女&apos;,&apos;13771234101&apos;,&apos;02131231011&apos;,&apos;use1@samtech.com&apos;,&apos;备注1...&apos;);</span><br><span class="line">    insert into t_user values(2,1,&apos;李明申&apos;,&apos;U8202&apos;,&apos;男&apos;,&apos;13771234102&apos;,&apos;02131231012&apos;,&apos;use2@samtech.com&apos;,&apos;备注2...&apos;);</span><br><span class="line">    insert into t_user values(3,2,&apos;张雪&apos;, &apos;U8203&apos;,&apos;女&apos;,&apos;13771234103&apos;,&apos;02131231013&apos;,&apos;use3@samtech.com&apos;,&apos;备注3...&apos;);</span><br><span class="line">    insert into t_user values(4,2,&apos;王刚&apos;, &apos;U8204&apos;,&apos;男&apos;,&apos;13771234104&apos;,&apos;02131231014&apos;,&apos;use4@samtech.com&apos;,&apos;备注4...&apos;);</span><br><span class="line">    insert into t_user values(5,3,&apos;赵昌日&apos;,&apos;U8205&apos;,&apos;男&apos;,&apos;13771234105&apos;,&apos;02131231015&apos;,&apos;use5@samtech.com&apos;,&apos;备注5...&apos;);</span><br><span class="line">    insert into t_user values(6,3,&apos;孙晓华&apos;,&apos;U8206&apos;,&apos;男&apos;,&apos;13771234106&apos;,&apos;02131231016&apos;,&apos;use6@samtech.com&apos;,&apos;备注6...&apos;);</span><br><span class="line">    insert into t_user values(7,4,&apos;陈亚男&apos;,&apos;U8207&apos;,&apos;女&apos;,&apos;13771234107&apos;,&apos;02131231017&apos;,&apos;use7@samtech.com&apos;,&apos;备注7...&apos;);</span><br><span class="line">    insert into t_user values(8,4,&apos;刘兵超&apos;,&apos;U8208&apos;,&apos;男&apos;,&apos;13771234108&apos;,&apos;02131231018&apos;,&apos;use8@samtech.com&apos;,&apos;备注8...&apos;);</span><br><span class="line"></span><br><span class="line">    --插入客户</span><br><span class="line">    insert into t_customer</span><br><span class="line">    values(1,&apos;C1808001&apos;,&apos;上海市永辉电子股份有限公司&apos;,&apos;张明升&apos;,&apos;15352678121&apos;,&apos;02135681589&apos;,&apos;ming@google.com&apos;,&apos;上海市静安区城区安泰路1108号&apos;,&apos;上海市&apos;,12082,&apos;上海中远&apos;,&apos;备注...&apos;,&apos;张娜&apos;,0,1,sysdate,1,sysdate,1);</span><br><span class="line">    commit;</span><br><span class="line">end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h4 id="修改客户信息过程"><a href="#修改客户信息过程" class="headerlink" title="修改客户信息过程"></a>修改客户信息过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">--过程：修改客户地址</span><br><span class="line">create or replace procedure modify_address</span><br><span class="line">(p_row_id in number,p_address in varchar2, p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_address=:1,f_modified_id=:2, f_modified_time=sysdate where f_id=:3&apos;</span><br><span class="line">    using p_address,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated address successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--过程：修改客户余额</span><br><span class="line">create or replace procedure modify_balance</span><br><span class="line">(p_row_id in number,p_balance in number, p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_balance=:1,f_modified_id=:2, f_modified_time=sysdate where f_id=:3&apos;</span><br><span class="line">    using p_balance,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated balance successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--过程：修改客户电子邮箱</span><br><span class="line">create or replace procedure modify_email</span><br><span class="line">(p_row_id in number,p_email in varchar2, p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_email=:1,f_modified_id=:2, f_modified_time=sysdate where f_id=:3&apos;</span><br><span class="line">    using p_email,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated email successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--过程：修改客户联系人</span><br><span class="line">create or replace procedure modify_linkman</span><br><span class="line">(p_row_id in number,p_linkman_name in varchar2, p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_linkman=:1,f_modified_id=:2, f_modified_time=sysdate where f_id=:3&apos;</span><br><span class="line">    using p_linkman_name,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated linkman name successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--过程：修改客户联系人信息</span><br><span class="line">create or replace procedure modify_linkman_info</span><br><span class="line">(p_row_id in number,p_linkman_name in varchar2,p_mobile in varchar2,</span><br><span class="line"> p_telephone in varchar2,p_email in varchar2,p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_linkman=:1, f_mobile=:2,</span><br><span class="line">    f_telephone=:3, f_email=:4, f_modified_id=:5, f_modified_time=sysdate where f_id=:6&apos;</span><br><span class="line">    using p_linkman_name,p_mobile,p_telephone,p_email,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated linkman info successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--过程：修改联系手机</span><br><span class="line">create or replace procedure modify_mobile</span><br><span class="line">(p_row_id in number,p_mobile in varchar2,p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_mobile=:1,f_modified_id=:2, f_modified_time=sysdate where f_id=:3&apos;</span><br><span class="line">    using p_mobile,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated mobile successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">--过程：修改联系固话</span><br><span class="line">create or replace procedure modify_telephone</span><br><span class="line">(p_row_id in number,p_telephone in varchar2,p_operator in number)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    --校验参数省略</span><br><span class="line">    --...</span><br><span class="line">    execute immediate &apos;update t_customer set f_telephone=:1,f_modified_id=:2, f_modified_time=sysdate where f_id=:3&apos;</span><br><span class="line">    using p_telephone,p_operator,p_row_id;</span><br><span class="line">    commit;</span><br><span class="line">    dbms_output.put_line(&apos;Updated mobile successfully.&apos;);</span><br><span class="line"></span><br><span class="line">    --异常捕获省略</span><br><span class="line">    --...</span><br><span class="line">end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">-- 初始化</span><br><span class="line">call init();</span><br><span class="line"></span><br><span class="line">-- 更改客户信息</span><br><span class="line">begin</span><br><span class="line">modify_linkman(1,&apos;李明顺&apos;,1);</span><br><span class="line">dbms_lock.sleep(1);</span><br><span class="line">modify_mobile(1,&apos;13771083211&apos;,2);</span><br><span class="line">dbms_lock.sleep(1);</span><br><span class="line">modify_balance(1,20020,3);</span><br><span class="line">dbms_lock.sleep(1);</span><br><span class="line">modify_address(1,&apos;中国上海市嘉定区xxx路&apos;,4);</span><br><span class="line">dbms_lock.sleep(1);</span><br><span class="line">modify_email(1,&apos;test1@163.com&apos;,5);</span><br><span class="line">dbms_lock.sleep(1);</span><br><span class="line">modify_telephone(1,&apos;02183652145&apos;,6);</span><br><span class="line">dbms_lock.sleep(1);</span><br><span class="line">modify_linkman_info(1,&apos;张雨轩&apos;,&apos;15332892301&apos;,&apos;02188881111&apos;,&apos;zhangyx@gmail.com&apos;,7);</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line">-- 审计</span><br><span class="line">select * from T_AUDIT;</span><br><span class="line"></span><br><span class="line">-- 回滚客户信息</span><br><span class="line">-- 方法1：</span><br><span class="line">update t_customer a</span><br><span class="line">set(</span><br><span class="line">a.f_full_name,a.f_linkman,a.f_mobile,a.f_telephone,a.f_email,a.f_address,</span><br><span class="line">a.f_city,a.f_balance,a.f_partner,a.f_remark,a.f_salesman,a.f_deleted_tag,</span><br><span class="line">a.f_modified_id,a.f_modified_time</span><br><span class="line">)</span><br><span class="line">=</span><br><span class="line">(</span><br><span class="line">select b.f_full_name,b.f_linkman,b.f_mobile,b.f_telephone,b.f_email,</span><br><span class="line">b.f_address,b.f_city,b.f_balance,b.f_partner,b.f_remark,b.f_salesman,</span><br><span class="line">b.f_deleted_tag,5,sysdate</span><br><span class="line">from t_customer_history b where b.f_id=a.f_id and b.f_version=3</span><br><span class="line">)</span><br><span class="line">where a.f_id=1;</span><br><span class="line">-- 方法2：</span><br><span class="line">merge into t_customer a using t_customer_history b on (a.f_id=1 and a.f_id=b.f_id and b.f_version=3)</span><br><span class="line">when matched then</span><br><span class="line">update set a.f_full_name=b.f_full_name,a.f_linkman=b.f_linkman,a.f_mobile=b.f_mobile,a.f_telephone=b.f_telephone,</span><br><span class="line">a.f_email=b.f_email,a.f_address=b.f_address,a.f_city=b.f_city,a.f_balance=b.f_balance,a.f_partner=b.f_partner,</span><br><span class="line">a.f_remark=b.f_remark,a.f_salesman=b.f_salesman,a.f_deleted_tag=b.f_deleted_tag,a.f_modified_id=5,a.f_modified_time=sysdate;</span><br><span class="line"></span><br><span class="line">-- 查看验证数据</span><br><span class="line">select * from t_customer where f_id=1</span><br><span class="line">union</span><br><span class="line">select * from t_customer_history where f_id=1 and f_version=3;</span><br></pre></td></tr></table></figure><h1 id="Lesson-3"><a href="#Lesson-3" class="headerlink" title="Lesson 3"></a>Lesson 3</h1><h2 id="创建用户并分配权限-2"><a href="#创建用户并分配权限-2" class="headerlink" title="创建用户并分配权限"></a>创建用户并分配权限</h2><h3 id="创建用户-1"><a href="#创建用户-1" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user permission identified by permission;</span><br></pre></td></tr></table></figure><h3 id="分配权限-1"><a href="#分配权限-1" class="headerlink" title="分配权限"></a>分配权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant connect,resource to permission;</span><br><span class="line">alter user permisson quota unlimited on users;</span><br><span class="line">conn permission/permission;</span><br></pre></td></tr></table></figure><h2 id="创建表及其他对象-1"><a href="#创建表及其他对象-1" class="headerlink" title="创建表及其他对象"></a>创建表及其他对象</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><blockquote><p>方案一在T_CUSTOMER表中存放创建人员ID，以查询该客户的直接负责人，在T_USER表中存放直属领导的ID，用于查询某领导所有下属的客户。</p></blockquote><h4 id="创建表-2"><a href="#创建表-2" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--方案一</span><br><span class="line">--部门表</span><br><span class="line">CREATE TABLE T_DEPARTMENT</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_PARENT_ID&quot; NUMBER(6,0),</span><br><span class="line">&quot;F_MANAGER_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line"> CONSTRAINT &quot;T_DEPARTMENT_PK&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT&quot;.&quot;F_NAME&quot; IS &apos;部门名称&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT&quot;.&quot;F_PARENT_ID&quot; IS &apos;上级部门ID&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT&quot;.&quot;F_MANAGER_ID&quot; IS &apos;部门经理&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;T_DEPARTMENT&quot;  IS &apos;部门表&apos;;</span><br><span class="line"></span><br><span class="line">--用户表</span><br><span class="line">CREATE TABLE &quot;T_USER&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_DEPT_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_SEX&quot; VARCHAR2(5 BYTE) DEFAULT NULL,</span><br><span class="line">&quot;F_MOBILE&quot; VARCHAR2(20 BYTE),</span><br><span class="line">&quot;F_EMAIL&quot; VARCHAR2(50 BYTE),</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line"> CONSTRAINT &quot;T_USER_PK&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_DEPT_ID&quot; IS &apos;部门ID&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_NAME&quot; IS &apos;用户名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_SEX&quot; IS &apos;性别&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_MOBILE&quot; IS &apos;手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_EMAIL&quot; IS &apos;邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;T_USER&quot;  IS &apos;用户表&apos;;</span><br><span class="line"></span><br><span class="line">--客户信息表</span><br><span class="line">CREATE TABLE &quot;T_CUSTOMER&quot;</span><br><span class="line">(&quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_NAME&quot; VARCHAR2(145 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_LINKMAN&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_MOBILE&quot; VARCHAR2(11 BYTE) NOT NULL ENABLE,</span><br><span class="line">&quot;F_EMAIL&quot; VARCHAR2(60 BYTE),</span><br><span class="line">&quot;F_ADDRESS&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line">&quot;F_CREATED_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line">&quot;F_CREATED_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line"> PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_NAME&quot; IS &apos;客户全名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_LINKMAN&quot; IS &apos;联系人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_MOBILE&quot; IS &apos;联系手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_EMAIL&quot; IS &apos;联系邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_ADDRESS&quot; IS &apos;地址&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_CREATED_ID&quot; IS &apos;创建人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER&quot;.&quot;F_CREATED_TIME&quot; IS &apos;创建时间&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;T_CUSTOMER&quot;  IS &apos;客户信息表&apos;;</span><br></pre></td></tr></table></figure><h4 id="创建过程-1"><a href="#创建过程-1" class="headerlink" title="创建过程"></a>创建过程</h4><h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">--过程：数据初始化</span><br><span class="line">CREATE OR REPLACE PROCEDURE INIT IS</span><br><span class="line">BEGIN</span><br><span class="line">    --清除数据</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_CUSTOMER&apos;;</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_USER&apos;;</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_DEPARTMENT&apos;;</span><br><span class="line"></span><br><span class="line">    --插入部门</span><br><span class="line">    INSERT INTO T_DEPARTMENT VALUES(1,&apos;公司&apos;,NULL,1,&apos;REMARK...&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT VALUES(2,&apos;行政部&apos;,1,1,&apos;REMARK...&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT VALUES(3,&apos;销售部&apos;,1,2,&apos;REMARK...&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT VALUES(4,&apos;电销组&apos;,3,3,&apos;销售部电销组&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT VALUES(5,&apos;推销组&apos;,3,6,&apos;销售部推销组&apos;);</span><br><span class="line"></span><br><span class="line">    --插入用户</span><br><span class="line">    INSERT INTO T_USER VALUES(1,1,&apos;管理员&apos;,&apos;男&apos;,&apos;13771234101&apos;,&apos;USE1@SAMTECH.COM&apos;,&apos;系统管理员&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(2,3,&apos;李明申&apos;,&apos;男&apos;,&apos;13771234102&apos;,&apos;USE2@SAMTECH.COM&apos;,&apos;销售部经理&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(3,4,&apos;张雪&apos;, &apos;女&apos;,&apos;13771234103&apos;,&apos;USE3@SAMTECH.COM&apos;,&apos;销售部电销组主管&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(4,4,&apos;王刚&apos;, &apos;男&apos;,&apos;13771234104&apos;,&apos;USE4@SAMTECH.COM&apos;,&apos;销售部电销组业务员1&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(5,4,&apos;赵昌日&apos;,&apos;男&apos;,&apos;13771234105&apos;,&apos;USE5@SAMTECH.COM&apos;,&apos;销售部电销组业务员2&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(6,5,&apos;孙晓华&apos;,&apos;男&apos;,&apos;13771234106&apos;,&apos;USE6@SAMTECH.COM&apos;,&apos;销售部推销组主管&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(7,5,&apos;陈亚男&apos;,&apos;女&apos;,&apos;13771234107&apos;,&apos;USE7@SAMTECH.COM&apos;,&apos;销售部推销组业务员3&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(8,5,&apos;刘兵超&apos;,&apos;男&apos;,&apos;13771234108&apos;,&apos;USE8@SAMTECH.COM&apos;,&apos;销售部推销组业务员4&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(9,3,&apos;陈彬&apos;,&apos;女&apos;,&apos;13771234109&apos;,&apos;USE9@SAMTECH.COM&apos;,&apos;销售部业务员X1&apos;);</span><br><span class="line">    INSERT INTO T_USER VALUES(10,3,&apos;王军&apos;,&apos;男&apos;,&apos;13771234110&apos;,&apos;USE10@SAMTECH.COM&apos;,&apos;销售部业务员X2&apos;);</span><br><span class="line"></span><br><span class="line">    --插入客户</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(1,&apos;上海市永辉电子股份有限公司&apos;     ,&apos;张明升&apos;,&apos;15352678121&apos;,&apos;MING1@GOOGLE.COM&apos;,&apos;上海市静安区城区安泰路1108号&apos;,&apos;电销组主管创建&apos;,3,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(2,&apos;上海博运汽车销售有限公司&apos;      ,&apos;朱荣荣&apos; ,&apos;13231289212&apos;,&apos;MING2@GOOGLE.COM&apos;,&apos;上海市徐汇区钦江路256号&apos;,&apos;电销组业务员1创建&apos;,4,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(3,&apos;安徽广宏顶管装备制造有限公司&apos;   ,&apos;邱阳阳&apos; ,&apos;15328921231&apos;,&apos;MING3@GOOGLE.COM&apos;,&apos;安徽省广德县经济开发区东纬路5号&apos;,&apos;电销组业务员2创建&apos;,5,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(4,&apos;上海定丰霖贸易有限公司&apos;        ,&apos;赵兰&apos;  ,&apos;15532212322&apos;,&apos;MING4@GOOGLE.COM&apos;,&apos;上海市浦东新区东延路112号408室&apos;,&apos;推销组主管创建&apos;,6,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(5,&apos;上海东俊科技有限公司&apos;          ,&apos;张军&apos;  ,&apos;15367823660&apos;,&apos;MING5@GOOGLE.COM&apos;,&apos;上海市长宁区王安路135号&apos;,&apos;推销组业务员1创建&apos;,7,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(6,&apos;中科创客（深圳）智能工业设备公司&apos;,&apos;李明&apos;  ,&apos;17723180234&apos;,&apos;MING6@GOOGLE.COM&apos;,&apos;深圳市龙岗区富民工业园致康路301号&apos;,&apos;推销组业务员2创建&apos;,8,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(7,&apos;南宁云讯科技有限公司&apos;          ,&apos;王永成&apos;,&apos;13568932166&apos;,&apos;MING7@GOOGLE.COM&apos;,&apos;广东省深圳市福田区长川路102号&apos;,&apos;销售部业务员X1创建&apos;,9,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER VALUES(8,&apos;沈阳优速家政服务有限公司&apos;       ,&apos;李东升&apos;,&apos;13392312343&apos;,&apos;MING8@GOOGLE.COM&apos;,&apos;辽宁省沈阳市铁西区北二路青年易居东门32号&apos;,&apos;销售部业务员X2创建&apos;,10,SYSDATE);</span><br><span class="line">    COMMIT;</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h4 id="执行-1"><a href="#执行-1" class="headerlink" title="执行"></a>执行</h4><h5 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set serveroutput on;</span><br><span class="line">exec init;</span><br></pre></td></tr></table></figure><h5 id="查询自己的客户"><a href="#查询自己的客户" class="headerlink" title="查询自己的客户"></a>查询自己的客户</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM t_customer A WHERE A.f_created_id=&amp;id;</span><br></pre></td></tr></table></figure><blockquote><p><code>&amp;id</code>是所查询人员的ID</p></blockquote><h5 id="查询某领导下属人员的所有客户"><a href="#查询某领导下属人员的所有客户" class="headerlink" title="查询某领导下属人员的所有客户"></a>查询某领导下属人员的所有客户</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from t_user a  where exists(</span><br><span class="line">SELECT 1 FROM t_department b</span><br><span class="line">WHERE a.f_dept_id=b.f_id and b.f_manager_id=&amp;id</span><br><span class="line">CONNECT BY b.F_PARENT_ID = PRIOR b.F_ID</span><br><span class="line">start with b.F_ID = (select c.f_dept_id from t_user c where c.f_id=&amp;id));</span><br></pre></td></tr></table></figure><blockquote><p><code>&amp;id</code>是该领导的ID</p></blockquote><h4 id="当部门结构或员工归属调整时，权限编码如何处理？"><a href="#当部门结构或员工归属调整时，权限编码如何处理？" class="headerlink" title="当部门结构或员工归属调整时，权限编码如何处理？"></a>当部门结构或员工归属调整时，权限编码如何处理？</h4><p>对于方案一，只需要更改员工直属领导ID即可</p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><blockquote><p>方案二取消在T_USER中添加直属领导ID，改为在员工、部门、客户表中添加权限码，查看时直接搜索对应权限码即可</p></blockquote><h4 id="创建表-3"><a href="#创建表-3" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">--方案二</span><br><span class="line">--部门表</span><br><span class="line">CREATE TABLE T_DEPARTMENT_2</span><br><span class="line">(  &quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">    &quot;F_CODE&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_PARENT_ID&quot; NUMBER(6,0),</span><br><span class="line"> &quot;F_MANAGER_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line">  CONSTRAINT &quot;T_DEPARTMENT_PK2&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT_2&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT_2&quot;.&quot;F_NAME&quot; IS &apos;部门名称&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT_2&quot;.&quot;F_CODE&quot; IS &apos;部门编码&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT_2&quot;.&quot;F_PARENT_ID&quot; IS &apos;上级部门ID&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT_2&quot;.&quot;F_MANAGER_ID&quot; IS &apos;部门经理&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_DEPARTMENT_2&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;T_DEPARTMENT_2&quot;  IS &apos;部门表2&apos;;</span><br><span class="line"></span><br><span class="line">--用户表</span><br><span class="line">CREATE TABLE &quot;T_USER_2&quot;</span><br><span class="line">(  &quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_DEPT_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_NAME&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line">    &quot;F_CODE&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_SEX&quot; VARCHAR2(5 BYTE) DEFAULT NULL,</span><br><span class="line"> &quot;F_MOBILE&quot; VARCHAR2(20 BYTE),</span><br><span class="line"> &quot;F_EMAIL&quot; VARCHAR2(50 BYTE),</span><br><span class="line"> &quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line">  CONSTRAINT &quot;T_USER_PK2&quot; PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_DEPT_ID&quot; IS &apos;部门ID&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_NAME&quot; IS &apos;用户名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_CODE&quot; IS &apos;用户编码&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_SEX&quot; IS &apos;性别&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_MOBILE&quot; IS &apos;手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_EMAIL&quot; IS &apos;邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_USER_2&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;T_USER_2&quot;  IS &apos;用户表2&apos;;</span><br><span class="line"></span><br><span class="line">--客户信息表</span><br><span class="line">CREATE TABLE &quot;T_CUSTOMER_2&quot;</span><br><span class="line">(  &quot;F_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_NAME&quot; VARCHAR2(145 BYTE) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_LINKMAN&quot; VARCHAR2(45 BYTE) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_MOBILE&quot; VARCHAR2(11 BYTE) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_EMAIL&quot; VARCHAR2(60 BYTE),</span><br><span class="line"> &quot;F_ADDRESS&quot; VARCHAR2(200 BYTE),</span><br><span class="line"> &quot;F_REMARK&quot; VARCHAR2(200 BYTE),</span><br><span class="line">    &quot;F_ACCESS_CODE&quot; VARCHAR2(50 BYTE) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_CREATED_ID&quot; NUMBER(6,0) NOT NULL ENABLE,</span><br><span class="line"> &quot;F_CREATED_TIME&quot; TIMESTAMP (6) NOT NULL ENABLE,</span><br><span class="line">  PRIMARY KEY (&quot;F_ID&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_ID&quot; IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_NAME&quot; IS &apos;客户全名&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_LINKMAN&quot; IS &apos;联系人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_MOBILE&quot; IS &apos;联系手机&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_EMAIL&quot; IS &apos;联系邮箱&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_ADDRESS&quot; IS &apos;地址&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_REMARK&quot; IS &apos;备注信息&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_ACCESS_CODE&quot; IS &apos;权限编码&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_CREATED_ID&quot; IS &apos;创建人&apos;;</span><br><span class="line">COMMENT ON COLUMN &quot;T_CUSTOMER_2&quot;.&quot;F_CREATED_TIME&quot; IS &apos;创建时间&apos;;</span><br><span class="line">COMMENT ON TABLE &quot;T_CUSTOMER_2&quot;  IS &apos;客户信息表2&apos;;</span><br><span class="line"></span><br><span class="line">-- 创建人员更改历史表</span><br><span class="line">CREATE TABLE T_USER_HISTORY(</span><br><span class="line">  ID NUMBER(6,0) PRIMARY KEY ,</span><br><span class="line">  F_ID NUMBER(6,0) ,</span><br><span class="line">  O_DEP_ID NUMBER(6,0) ,</span><br><span class="line">  O_ACCESS_CODE VARCHAR2(50 BYTE) ,</span><br><span class="line">  N_DEP_ID  NUMBER(6,0),</span><br><span class="line">  N_ACCESS_CODE VARCHAR2(50 BYTE),</span><br><span class="line">  TIME DATE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">COMMENT ON COLUMN T_USER_HISTORY.ID IS &apos;PK&apos;;</span><br><span class="line">COMMENT ON COLUMN T_USER_HISTORY.F_ID IS &apos;修改的人员ID&apos;;</span><br><span class="line">COMMENT ON COLUMN T_USER_HISTORY.O_DEP_ID IS &apos;旧的部门&apos;;</span><br><span class="line">COMMENT ON COLUMN T_USER_HISTORY.O_ACCESS_CODE IS &apos;旧的权限&apos;;</span><br><span class="line">COMMENT ON COLUMN T_USER_HISTORY.N_DEP_ID IS &apos;新的部门&apos;;</span><br><span class="line">COMMENT ON COLUMN T_USER_HISTORY.N_ACCESS_CODE IS &apos;新的权限&apos;;</span><br><span class="line">COMMENT ON TABLE T_USER_HISTORY IS &apos;用户权限更改历史&apos;;</span><br></pre></td></tr></table></figure><h4 id="创建过程-2"><a href="#创建过程-2" class="headerlink" title="创建过程"></a>创建过程</h4><h5 id="初始化-2"><a href="#初始化-2" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">--过程：数据初始化</span><br><span class="line">CREATE OR REPLACE PROCEDURE INIT2 IS</span><br><span class="line">BEGIN</span><br><span class="line">    --清除数据</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_CUSTOMER_2&apos;;</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_USER_2&apos;;</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_DEPARTMENT_2&apos;;</span><br><span class="line">    EXECUTE IMMEDIATE &apos;TRUNCATE TABLE T_USER_HISTORY&apos;;</span><br><span class="line"></span><br><span class="line">    --插入部门</span><br><span class="line">    INSERT INTO T_DEPARTMENT_2 VALUES(1,&apos;公司&apos;,&apos;1&apos;,NULL,1,&apos;REMARK...&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT_2 VALUES(2,&apos;行政部&apos;,&apos;101&apos;,1,1,&apos;REMARK...&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT_2 VALUES(3,&apos;销售部&apos;,&apos;102&apos;,1,2,&apos;REMARK...&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT_2 VALUES(4,&apos;电销组&apos;,&apos;10201&apos;,3,3,&apos;销售部电销组&apos;);</span><br><span class="line">    INSERT INTO T_DEPARTMENT_2 VALUES(5,&apos;推销组&apos;,&apos;10202&apos;,3,6,&apos;销售部推销组&apos;);</span><br><span class="line"></span><br><span class="line">    --插入用户</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(1,1,&apos;管理员&apos;,&apos;1&apos;,&apos;男&apos;,&apos;13771234101&apos;,&apos;USE1@SAMTECH.COM&apos;,&apos;系统管理员&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(2,3,&apos;李明申&apos;,&apos;102&apos;,&apos;男&apos;,&apos;13771234102&apos;,&apos;USE2@SAMTECH.COM&apos;,&apos;销售部经理&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(3,4,&apos;张雪&apos;,  &apos;10201&apos;, &apos;女&apos;,&apos;13771234103&apos;,&apos;USE3@SAMTECH.COM&apos;,&apos;销售部电销组主管&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(4,4,&apos;王刚&apos;,  &apos;1020101&apos;, &apos;男&apos;,&apos;13771234104&apos;,&apos;USE4@SAMTECH.COM&apos;,&apos;销售部电销组业务员1&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(5,4,&apos;赵昌日&apos;,&apos;1020102&apos;,&apos;男&apos;,&apos;13771234105&apos;,&apos;USE5@SAMTECH.COM&apos;,&apos;销售部电销组业务员2&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(6,5,&apos;孙晓华&apos;,&apos;10202&apos;,&apos;男&apos;,&apos;13771234106&apos;,&apos;USE6@SAMTECH.COM&apos;,&apos;销售部推销组主管&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(7,5,&apos;陈亚男&apos;,&apos;1020201&apos;,&apos;女&apos;,&apos;13771234107&apos;,&apos;USE7@SAMTECH.COM&apos;,&apos;销售部推销组业务员3&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(8,5,&apos;刘兵超&apos;,&apos;1020202&apos;,&apos;男&apos;,&apos;13771234108&apos;,&apos;USE8@SAMTECH.COM&apos;,&apos;销售部推销组业务员4&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(9,3,&apos;陈彬&apos;,  &apos;10203&apos;,&apos;女&apos;,&apos;13771234109&apos;,&apos;USE9@SAMTECH.COM&apos;,&apos;销售部业务员X1&apos;);</span><br><span class="line">    INSERT INTO T_USER_2 VALUES(10,3,&apos;王军&apos;, &apos;10204&apos;,&apos;男&apos;,&apos;13771234110&apos;,&apos;USE10@SAMTECH.COM&apos;,&apos;销售部业务员X2&apos;);</span><br><span class="line"></span><br><span class="line">    --插入客户</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(1,&apos;上海市永辉电子股份有限公司&apos;     ,&apos;张明升&apos;,&apos;15352678121&apos;,&apos;MING1@GOOGLE.COM&apos;,&apos;上海市静安区城区安泰路1108号&apos;,&apos;电销组主管创建&apos;,&apos;10201&apos;,3,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(2,&apos;上海博运汽车销售有限公司&apos;      ,&apos;朱荣荣&apos; ,&apos;13231289212&apos;,&apos;MING2@GOOGLE.COM&apos;,&apos;上海市徐汇区钦江路256号&apos;,&apos;电销组业务员1创建&apos;,&apos;1020101&apos;,4,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(3,&apos;安徽广宏顶管装备制造有限公司&apos;   ,&apos;邱阳阳&apos; ,&apos;15328921231&apos;,&apos;MING3@GOOGLE.COM&apos;,&apos;安徽省广德县经济开发区东纬路5号&apos;,&apos;电销组业务员2创建&apos;,&apos;1020102&apos;,5,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(4,&apos;上海定丰霖贸易有限公司&apos;        ,&apos;赵兰&apos;  ,&apos;15532212322&apos;,&apos;MING4@GOOGLE.COM&apos;,&apos;上海市浦东新区东延路112号408室&apos;,&apos;推销组主管创建&apos;,&apos;10202&apos;,6,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(5,&apos;上海东俊科技有限公司&apos;          ,&apos;张军&apos;  ,&apos;15367823660&apos;,&apos;MING5@GOOGLE.COM&apos;,&apos;上海市长宁区王安路135号&apos;,&apos;推销组业务员1创建&apos;,&apos;1020201&apos;,7,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(6,&apos;中科创客（深圳）智能工业设备公司&apos;,&apos;李明&apos;  ,&apos;17723180234&apos;,&apos;MING6@GOOGLE.COM&apos;,&apos;深圳市龙岗区富民工业园致康路301号&apos;,&apos;推销组业务员2创建&apos;,&apos;1020202&apos;,8,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(7,&apos;南宁云讯科技有限公司&apos;          ,&apos;王永成&apos;,&apos;13568932166&apos;,&apos;MING7@GOOGLE.COM&apos;,&apos;广东省深圳市福田区长川路102号&apos;,&apos;销售部业务员X1创建&apos;,&apos;10203&apos;,9,SYSDATE);</span><br><span class="line">    INSERT INTO T_CUSTOMER_2 VALUES(8,&apos;沈阳优速家政服务有限公司&apos;       ,&apos;李东升&apos;,&apos;13392312343&apos;,&apos;MING8@GOOGLE.COM&apos;,&apos;辽宁省沈阳市铁西区北二路青年易居东门32号&apos;,&apos;销售部业务员X2创建&apos;,&apos;10204&apos;,10,SYSDATE);</span><br><span class="line">    COMMIT;</span><br><span class="line">END;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h5 id="将某员工调换到某部门"><a href="#将某员工调换到某部门" class="headerlink" title="将某员工调换到某部门"></a>将某员工调换到某部门</h5><p><img src="/img/image-20181126025537963.png" alt="image-20181126025537963"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">-- 更改用户到特定部门</span><br><span class="line">CREATE OR REPLACE PROCEDURE CHANGE_TO_DEPARTMENT(C_F_ID IN T_USER_2.F_ID%TYPE, N_DEP_ID IN T_DEPARTMENT_2.F_ID%TYPE) IS</span><br><span class="line">  -- 旧部门</span><br><span class="line">  O_DEP_ID T_DEPARTMENT_2.F_ID%TYPE;</span><br><span class="line">  -- 旧权限</span><br><span class="line">  O_ACCESS_CODE T_USER_2.F_CODE%TYPE;</span><br><span class="line">  -- 部门权限前缀</span><br><span class="line">  DEP_ACCESS_CODE_PREFIX T_DEPARTMENT_2.F_CODE%TYPE;</span><br><span class="line">  -- 部门当前人数</span><br><span class="line">  DEP_USER_COUNT T_USER_2.F_CODE%TYPE;</span><br><span class="line">  -- 本部门下的部门数</span><br><span class="line">  DEP_DEP_COUNT T_DEPARTMENT_2.F_CODE%TYPE;</span><br><span class="line">  -- 新权限</span><br><span class="line">  N_ACCESS_CODE T_USER_2.F_CODE%TYPE;</span><br><span class="line">  -- 更新该员工权限</span><br><span class="line">  C_UPDATE_USER VARCHAR2(100) := &apos;UPDATE T_USER_2 SET F_CODE = :1, F_DEPT_ID = :2 WHERE F_ID = :3&apos;;</span><br><span class="line">  -- 更新所有该员工的客户的ACCESS权限</span><br><span class="line">  C_UPDATE_CUSTOMER VARCHAR2(100) := &apos;UPDATE T_CUSTOMER_2 SET F_ACCESS_CODE = :1 WHERE F_CREATED_ID = :2&apos;;</span><br><span class="line">  -- 插入一条修改记录</span><br><span class="line">  C_INSERT_HISTORY VARCHAR2(100) := &apos;INSERT INTO T_USER_HISTORY VALUES (:1, :2, :3, :4, :5, :6, :7)&apos;;</span><br><span class="line">  BEGIN</span><br><span class="line">    -- 旧部门</span><br><span class="line">    SELECT F_DEPT_ID INTO O_DEP_ID FROM T_USER_2 WHERE T_USER_2.F_ID=C_F_ID;</span><br><span class="line">    -- 旧权限</span><br><span class="line">    SELECT F_CODE INTO O_ACCESS_CODE FROM T_USER_2 WHERE T_USER_2.F_ID=C_F_ID;</span><br><span class="line">    -- 新部门权限作为前缀</span><br><span class="line">    SELECT F_CODE INTO DEP_ACCESS_CODE_PREFIX FROM T_DEPARTMENT_2 WHERE T_DEPARTMENT_2.F_ID = N_DEP_ID;</span><br><span class="line">    -- 计算该部门人员数量</span><br><span class="line">    SELECT MAX(T_USER_2.F_CODE) INTO DEP_USER_COUNT FROM T_USER_2 WHERE T_USER_2.F_DEPT_ID = N_DEP_ID;</span><br><span class="line">    -- 计算子部门数量</span><br><span class="line">    SELECT MAX(T_DEPARTMENT_2.F_CODE) INTO DEP_DEP_COUNT FROM T_DEPARTMENT_2 WHERE SUBSTR(T_DEPARTMENT_2.F_CODE, 0, LENGTH(DEP_ACCESS_CODE_PREFIX))=DEP_ACCESS_CODE_PREFIX AND LENGTH(T_DEPARTMENT_2.F_CODE)=LENGTH(DEP_ACCESS_CODE_PREFIX)+2;</span><br><span class="line">    -- 若新部门与旧部门相同，无需更改</span><br><span class="line">    IF N_DEP_ID=O_DEP_ID THEN</span><br><span class="line">      RETURN;</span><br><span class="line">    END IF;</span><br><span class="line">    -- 新权限CODE</span><br><span class="line">    IF DEP_DEP_COUNT &gt; DEP_USER_COUNT THEN</span><br><span class="line">      N_ACCESS_CODE := TO_CHAR(TO_NUMBER(DEP_DEP_COUNT) + 1);</span><br><span class="line">    ELSE</span><br><span class="line">      N_ACCESS_CODE := TO_CHAR(TO_NUMBER(DEP_USER_COUNT) + 1);</span><br><span class="line">    end if;</span><br><span class="line">    -- 输出相关变量</span><br><span class="line">    dbms_output.put_line(&apos;DEP_USER_COUNT : &apos; || DEP_USER_COUNT);</span><br><span class="line">    dbms_output.put_line(&apos;DEP_DEP_COUNT : &apos; || DEP_DEP_COUNT);</span><br><span class="line">    -- 输出相关变量</span><br><span class="line">    dbms_output.put_line(&apos;DEP_ACCESS_CODE_PREFIX : &apos; || DEP_ACCESS_CODE_PREFIX);</span><br><span class="line">    dbms_output.put_line(&apos;C_F_ID : &apos; || C_F_ID);</span><br><span class="line">    dbms_output.put_line(&apos;O_ACCESS_CODE : &apos; || O_ACCESS_CODE);</span><br><span class="line">    dbms_output.put_line(&apos;N_DEP_ID : &apos; || N_DEP_ID);</span><br><span class="line">    dbms_output.put_line(&apos;N_ACCESS_CODE : &apos; || N_ACCESS_CODE);</span><br><span class="line">    -- 更新该员工权限</span><br><span class="line">    EXECUTE IMMEDIATE C_UPDATE_USER USING N_ACCESS_CODE, N_DEP_ID, C_F_ID;</span><br><span class="line">    -- 更新所有该员工的客户的ACCESS权限</span><br><span class="line">    EXECUTE IMMEDIATE C_UPDATE_CUSTOMER USING N_ACCESS_CODE, C_F_ID;</span><br><span class="line">    -- 插入一条修改记录</span><br><span class="line">    EXECUTE IMMEDIATE C_INSERT_HISTORY USING USER_HISTORY.NEXTVAL, C_F_ID, O_DEP_ID, O_ACCESS_CODE, N_DEP_ID, N_ACCESS_CODE, SYSDATE;</span><br><span class="line">    -- 提交</span><br><span class="line">    COMMIT;</span><br><span class="line">  END;</span><br><span class="line">  /</span><br></pre></td></tr></table></figure><h4 id="创建序列"><a href="#创建序列" class="headerlink" title="创建序列"></a>创建序列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 员工部门历史记录主码序列</span><br><span class="line">CREATE SEQUENCE USER_HISTORY INCREMENT BY 1 START WITH 1;</span><br></pre></td></tr></table></figure><h4 id="执行-2"><a href="#执行-2" class="headerlink" title="执行"></a>执行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from t_customer_2 where f_access_code like &apos;xxx%&apos;;</span><br></pre></td></tr></table></figure><blockquote><p><code>xxx%</code>指匹配所有以<code>xxx</code>开头的权限码</p></blockquote><h4 id="当部门结构或员工归属调整时，权限编码如何处理？-1"><a href="#当部门结构或员工归属调整时，权限编码如何处理？-1" class="headerlink" title="当部门结构或员工归属调整时，权限编码如何处理？"></a>当部门结构或员工归属调整时，权限编码如何处理？</h4><p>方案二中，调用新增的过程<code>CHANGE_TO_DEPARTMENT</code>即可级联更改权限码。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Oracle专家的三次授课。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="TimesTen" scheme="http://blog.guitoubing.top/tags/TimesTen/"/>
    
      <category term="内存数据库" scheme="http://blog.guitoubing.top/tags/%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>感谢Docker,让我远离环境配置</title>
    <link href="http://blog.guitoubing.top/2018/11/12/%E4%BD%BF%E7%94%A8Docker%E5%AE%89%E8%A3%85Oracle-12c/"/>
    <id>http://blog.guitoubing.top/2018/11/12/使用Docker安装Oracle-12c/</id>
    <published>2018-11-12T15:26:45.000Z</published>
    <updated>2018-11-25T14:17:59.444Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why-Docker"><a href="#Why-Docker" class="headerlink" title="Why Docker"></a>Why Docker</h2><p>自开始用Oracle以来，环境配置一直是让我掉头发的事。而如今也只是在Windows上的安装界面点点点成功安装了Oracle，Linux上就从来没成功过，Mac的话Oracle 11g后好像就没Mac版的了，就很头疼。</p><p>这学期上了门内存数据库，老师给了个镜像，RedHat+Oracle+TimesTen究极体镜像，扔到VirtualBox上打开直接登录用户名密码，无需安装组件，无需配置环境，即开即用。自由的气息。</p><p>偶然间在网上看到了有关于Docker安装oracle的说法，于是便尝试了一下。真的，简洁，优雅，自由，甚至比虚拟机好用多了。</p><a id="more"></a><h2 id="正题"><a href="#正题" class="headerlink" title="正题"></a>正题</h2><h4 id="Docker安装并启动Oracle-12c"><a href="#Docker安装并启动Oracle-12c" class="headerlink" title="Docker安装并启动Oracle 12c"></a>Docker安装并启动Oracle 12c</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在docker中寻找oracle镜像，可看到一条sath89/oracle-12c的镜像，便是我们需要安装的</span></span><br><span class="line">docker search oracle</span><br><span class="line">docker pull sath89/oracle-12c</span><br><span class="line"><span class="comment"># 查看已安装的镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><blockquote><p>由于docker使用的是国外源，在拉取时的速度可能很慢，可参见博客切换国内源以加快拉取速度：<a href="https://blog.csdn.net/huludan/article/details/52713799" target="_blank" rel="noopener">Docker切换国内镜像下载源</a></p></blockquote><h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用<span class="built_in">log</span>记录oracle启动的容器号</span></span><br><span class="line">log=$(sudo docker run -d -p 8080:8080 -p 1521:1521 -v /Users/tanrui/Oracle/oradata:/u01/app/oracle sath89/oracle-12c)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示当前容器初始化进程</span></span><br><span class="line">docker logs -f $log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示docker中当前运行的容器(可查看到容器ID)</span></span><br><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure><blockquote><p>正常情况下，第一次创建容器应称之为<code>初始化</code>，而以后创建的容器都应基于上次的历史数据，称作<code>容器的数据持久化</code>，在上述命令中<code>-v</code>后的<code>:</code>之前是当前系统想要存储持久性数据的路径，用户想要共享到容器中的文件也可放入其中，<code>:</code>后面是在容器中想要访问<code>当前系统的共享文件</code>的路径。</p><p>因此在初始化完成后，若仍然使用上述命令，会提示数据库未初始化，从而会重新创建持久性数据文件；因此以后的容器创建应该使用以下命令^1^：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -it -p 8080:8080 -p 1521:1521 -v /Users/tanrui/Oracle/oradata:/u01/app/oracle sath89/oracle-12c</span><br></pre></td></tr></table></figure><blockquote><p>至于上述的重复初始化是会造成文件覆盖还是文件并存我没有尝试过，猜测应该会是覆盖。</p><p>同时，重复执行命令^1^时，还会产生端口冲突。因此如果想创建两个Oracle容器应该执行初始化命令，执行时将持久化数据路径更改到其他地方且需将端口号修改掉。</p></blockquote><h5 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入特定的容器，<span class="variable">$&#123;ContainerID&#125;</span>为上述查看到的容器ID</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> env LANG=C.UTF-8 表示当前容器使用支持中文的UTF-8格式(默认为POSIX，不支持中文)</span></span><br><span class="line">sudo docker exec -it $&#123;ContainerID&#125; env LANG=C.UTF-8 /bin/bash</span><br></pre></td></tr></table></figure><h5 id="连接oracle数据库"><a href="#连接oracle数据库" class="headerlink" title="连接oracle数据库"></a>连接oracle数据库</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@1386ef844664:/<span class="comment"># su oracle</span></span><br><span class="line">oracle@1386ef844664:/$ <span class="built_in">cd</span> <span class="variable">$ORACLE_HOME</span></span><br><span class="line">oracle@1386ef844664:/u01/app/oracle/product/12.1.0/xe$ bin/sqlplus / as sysdba</span><br></pre></td></tr></table></figure><h5 id="Oracle数据库设置字符集"><a href="#Oracle数据库设置字符集" class="headerlink" title="Oracle数据库设置字符集"></a>Oracle数据库设置字符集</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看数据库编码，结果最下面一行则是目前编码</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> select * from nls_database_parameters <span class="built_in">where</span> parameter =<span class="string">'NLS_CHARACTERSET'</span>;   </span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 关闭数据库</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> shutdown immediate;               </span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 启动到 mount状态，oracle分为4个状态，详情请百度</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> startup mount;                    </span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 设置session ，下同</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> ALTER SYSTEM ENABLE RESTRICTED SESSION;                        </span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0;</span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> ALTER SYSTEM SET AQ_TM_PROCESSES=0;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 打开oracle到 open状态</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> alter database open;                               </span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 修改编码为 ZHS16GBK</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> ALTER DATABASE character <span class="built_in">set</span> INTERNAL_USE ZHS16GBK;                </span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 重启oracle ，先关闭，再启动</span></span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> shutdown immediate;                      </span></span><br><span class="line"><span class="meta">SQL&gt;</span><span class="bash"> startup;</span></span><br></pre></td></tr></table></figure><h2 id="升华"><a href="#升华" class="headerlink" title="升华"></a>升华</h2><p>Docker真的好用！（俗</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Why-Docker&quot;&gt;&lt;a href=&quot;#Why-Docker&quot; class=&quot;headerlink&quot; title=&quot;Why Docker&quot;&gt;&lt;/a&gt;Why Docker&lt;/h2&gt;&lt;p&gt;自开始用Oracle以来，环境配置一直是让我掉头发的事。而如今也只是在Windows上的安装界面点点点成功安装了Oracle，Linux上就从来没成功过，Mac的话Oracle 11g后好像就没Mac版的了，就很头疼。&lt;/p&gt;
&lt;p&gt;这学期上了门内存数据库，老师给了个镜像，RedHat+Oracle+TimesTen究极体镜像，扔到VirtualBox上打开直接登录用户名密码，无需安装组件，无需配置环境，即开即用。自由的气息。&lt;/p&gt;
&lt;p&gt;偶然间在网上看到了有关于Docker安装oracle的说法，于是便尝试了一下。真的，简洁，优雅，自由，甚至比虚拟机好用多了。&lt;/p&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="Docker" scheme="http://blog.guitoubing.top/tags/Docker/"/>
    
      <category term="Oracle" scheme="http://blog.guitoubing.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>记一次Win10+Fedora双系统的小折腾</title>
    <link href="http://blog.guitoubing.top/2018/11/06/%E8%AE%B0%E4%B8%80%E6%AC%A1Win10-Fedora%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%B0%8F%E6%8A%98%E8%85%BE/"/>
    <id>http://blog.guitoubing.top/2018/11/06/记一次Win10-Fedora双系统的小折腾/</id>
    <published>2018-11-06T13:21:10.000Z</published>
    <updated>2018-11-07T02:57:04.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>因课程需要，我在Win10上安装了Fedora双系统，结果出现了奇怪的问题，现Fedora系统可正常进入，Win10也有引导项，但无法进入Win10系统，报错信息见图。<br>我在Google上搜了类似的问题，大多是诸如以下的原因：</p><a id="more"></a><ul><li>主板供电不足（我使用的是台式机应该不会有这个问题）</li><li>BIOS中系统时间不正确（我也未曾修改过该时间）</li></ul><p>这些原因可能会造成与我类似的状况，但很显然这些都不是此处的问题所在</p><h3 id="问题出现的环境背景及自己尝试过哪些方法"><a href="#问题出现的环境背景及自己尝试过哪些方法" class="headerlink" title="问题出现的环境背景及自己尝试过哪些方法"></a>问题出现的环境背景及自己尝试过哪些方法</h3><h4 id="系统相关信息："><a href="#系统相关信息：" class="headerlink" title="系统相关信息："></a>系统相关信息：</h4><p>主系统Windows10专业版（安装在100G的SSD中），Fedora29（安装在由1T的HHD分出的50G硬盘中）</p><h4 id="尝试过得方法："><a href="#尝试过得方法：" class="headerlink" title="尝试过得方法："></a>尝试过得方法：</h4><ol><li>曾使用PE系统中的引导修复工具修复Win10引导，无果</li><li>在Fedora中安装了<code>grub工具</code>尝试修复Win10引导，grub是用来配置启动时引导的系统，而我这里启动后切换到grub界面是有Win10引导的，因此问题应该不是出在这儿，而是出在Win10的引导文件<code>\Windows\System32\winload.efi</code>上，感觉此方法应该是行不通的（到此处我排除了grub引导出错的可能性）</li><li>至此，我想既然问题出在引导文件上，我从我室友电脑上拷贝了一份该文件替换了我的引导文件，然后再使用PE中的引导修复工具修复了一遍，仍然无果</li></ol><h3 id="问题截图"><a href="#问题截图" class="headerlink" title="问题截图"></a>问题截图</h3><p><img src="/img/bVbjaD6.jpeg" alt="Win10报错"></p><p>如上所示，错误信息提示文件<code>\Windows\System32\winload.efi</code>出错，导致我一直陷入找<code>winload.efi</code>文件错误的怪圈。</p><h3 id="问题解决方法"><a href="#问题解决方法" class="headerlink" title="问题解决方法"></a>问题解决方法</h3><p>鼓捣大半天，我仍然无法解决此问题，便在<a href="https://segmentfault.com/q/1010000016923264" target="_blank" rel="noopener">SegmentFault</a>上提问，希望藉此找到解答。在此要非常感谢解决了我的问题的答主<a href="https://segmentfault.com/u/fenghengzhi/" target="_blank" rel="noopener">冯恒智</a>，一言点睛。</p><h4 id="具体解决方法如下（划重点）："><a href="#具体解决方法如下（划重点）：" class="headerlink" title="具体解决方法如下（划重点）："></a>具体解决方法如下（划重点）：</h4><p>在PE中使用bootice的bcd编辑功能，打开了Win10所在磁盘中的BCD文件（C:\EFI\Microsoft\Boot\BCD），发现其中的<strong>【启动设备】</strong>项下的<strong>启动磁盘</strong>和<strong>启动分区</strong>项被置空了，我将其填写完毕后（如下图所示）发现Win10就可以正常启动了，我想这应该是我在安装Fedora时的一些不当操作使得BCD文件被修改的缘故而让Win10无法正常启动（Bootice使用方法可参见<a href="https://blog.csdn.net/testcs_dn/article/details/47904937" target="_blank" rel="noopener">此博客</a>）。</p><p><img src="/img/image-20181106214511931.png" alt="bootice选项"></p><h4 id="疑问："><a href="#疑问：" class="headerlink" title="疑问："></a>疑问：</h4><p>我在安装Fedora时应该说，和Win10所在盘是完全分隔开来的，为何Fedora安装好后会影响到Win10的Boot文件呢？更疑惑的是它只影响了配置中的<strong>启动磁盘</strong>和<strong>启动分区</strong>两项，而其他都未曾影响？待解……</p><h4 id="就很玄学（挠头"><a href="#就很玄学（挠头" class="headerlink" title="就很玄学（挠头"></a>就很玄学（挠头</h4><h4 id="11月7日更新"><a href="#11月7日更新" class="headerlink" title="11月7日更新"></a>11月7日更新</h4><p>SegmentFault上的答主<a href="https://segmentfault.com/u/fenghengzhi/" target="_blank" rel="noopener">冯恒智</a>又回复了我的问题，如下：</p><blockquote><p>并不是因为你编辑过bcd文件而导致启动磁盘和启动分区项被置空了，而是在win10安完后编辑过磁盘（比如分区啊，改盘符啊，调整容量什么的）导致找不到启动磁盘和启动分区，重新指定一下就行了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;因课程需要，我在Win10上安装了Fedora双系统，结果出现了奇怪的问题，现Fedora系统可正常进入，Win10也有引导项，但无法进入Win10系统，报错信息见图。&lt;br&gt;我在Google上搜了类似的问题，大多是诸如以下的原因：&lt;/p&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="Win10" scheme="http://blog.guitoubing.top/tags/Win10/"/>
    
      <category term="Linux" scheme="http://blog.guitoubing.top/tags/Linux/"/>
    
      <category term="双系统" scheme="http://blog.guitoubing.top/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="引导修复" scheme="http://blog.guitoubing.top/tags/%E5%BC%95%E5%AF%BC%E4%BF%AE%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>JavaFX 学习小记</title>
    <link href="http://blog.guitoubing.top/2018/10/28/JavaFX-%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://blog.guitoubing.top/2018/10/28/JavaFX-学习小记/</id>
    <published>2018-10-27T16:08:25.000Z</published>
    <updated>2018-11-13T10:52:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaFX小记"><a href="#JavaFX小记" class="headerlink" title="JavaFX小记"></a>JavaFX小记</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p>JavaFX</p><p><code>JavaFX</code>是由<a href="https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8" target="_blank" rel="noopener">甲骨文(Oracle)公司</a>推出的一系列的产品和技术，主要应用于创建Rich Internet application(<a href="https://zh.wikipedia.org/wiki/RIA" target="_blank" rel="noopener">RIAs</a>)，它是一个跨平台的桌面应用程序开发框架。</p></li></ul><a id="more"></a><ul><li><p>典型的MVC架构</p><ul><li>定义<code>Model</code>，使用<code>javafx.beans</code>封装类型定义属性类型</li><li>使用<code>fxml</code>文件创建<code>View</code>，利用SceneBuilder工具进行布局</li><li>创建<code>Controller</code>实现动作操作以及<code>Model</code>和<code>View</code>的联系</li></ul></li></ul><h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><ul><li><strong>创建FXML文件，利用SceneBuilder工具进行布局</strong></li></ul><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><ul><li><p><strong>定义<code>Model</code>中的<code>Person</code>类，使用<code>Property</code>和<code>Bind</code></strong></p><p><code>java.beans</code>包中的对象类型不是标准的Java原语，而是新的封装起来的类，它封装了Java原语并添加了一些额外的功能，<code>Property</code>和<code>Bind</code>方便我们实现以下功能：当某个属性如<code>First Name</code>被改变时，会自动收到通知而修改视图，从而保证视图与数据的同步。当然仅仅声明这种类型是不够的，声明只是为后续操作提供类型前提，还需要进一步操作，可参考<a href="https://docs.oracle.com/javase/8/javafx/properties-binding-tutorial/binding.htm" target="_blank" rel="noopener">JavaFX文档</a>。</p><p><strong>Person.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tanrui.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.beans.property.IntegerProperty;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.property.ObjectProperty;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.property.SimpleIntegerProperty;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.property.SimpleObjectProperty;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.property.SimpleStringProperty;</span><br><span class="line"><span class="keyword">import</span> javafx.beans.property.StringProperty;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Model class for a Person.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StringProperty firstName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StringProperty lastName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StringProperty street;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IntegerProperty postalCode;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StringProperty city;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ObjectProperty&lt;LocalDate&gt; birthday;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor with some initial data.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> firstName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lastName</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String firstName, String lastName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstName = <span class="keyword">new</span> SimpleStringProperty(firstName);</span><br><span class="line">        <span class="keyword">this</span>.lastName = <span class="keyword">new</span> SimpleStringProperty(lastName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Some initial dummy data, just for convenient testing.</span></span><br><span class="line">        <span class="keyword">this</span>.street = <span class="keyword">new</span> SimpleStringProperty(<span class="string">"some street"</span>);</span><br><span class="line">        <span class="keyword">this</span>.postalCode = <span class="keyword">new</span> SimpleIntegerProperty(<span class="number">1234</span>);</span><br><span class="line">        <span class="keyword">this</span>.city = <span class="keyword">new</span> SimpleStringProperty(<span class="string">"some city"</span>);</span><br><span class="line">        <span class="keyword">this</span>.birthday = <span class="keyword">new</span> SimpleObjectProperty&lt;LocalDate&gt;(LocalDate.of(<span class="number">1999</span>, <span class="number">2</span>, <span class="number">21</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstName.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstName</span><span class="params">(String firstName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstName.set(firstName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringProperty <span class="title">firstNameProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> firstName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lastName.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastName</span><span class="params">(String lastName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lastName.set(lastName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringProperty <span class="title">lastNameProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lastName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStreet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> street.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStreet</span><span class="params">(String street)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.street.set(street);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringProperty <span class="title">streetProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> street;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPostalCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postalCode.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPostalCode</span><span class="params">(<span class="keyword">int</span> postalCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.postalCode.set(postalCode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IntegerProperty <span class="title">postalCodeProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postalCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> city.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCity</span><span class="params">(String city)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.city.set(city);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringProperty <span class="title">cityProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> city;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalDate <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(LocalDate birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday.set(birthday);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ObjectProperty&lt;LocalDate&gt; <span class="title">birthdayProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>使用<code>ObservableList</code>管理<code>Person</code></strong></p><p>前一点所述的<u><strong>后续</strong></u>操作便是此处了，JavaFX为了实现上述目的即保持视图和数据的同步，引入了一些新的集合类，这里我们用到的是<code>ObservableList</code>，<code>ObservableList</code>继承了<code>List</code>类、实现了<code>Observable</code>接口，其实现视图和数据同步的方法是在声明<code>ObservableList</code>时为方法传递一个监听器，此监听器需要会通过监听<code>personData</code>的变化同步改变视图中对应的值，可参考<a href="https://docs.oracle.com/javase/8/javafx/api/javafx/collections/ObservableList.html" target="_blank" rel="noopener">ObservableList文档</a></p><p><strong>Main.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*......Other variables......*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The data of a observable list of Persons</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ObservableList&lt;Person&gt; personData = FXCollections.observableArrayList();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ObservableList&lt;Person&gt; <span class="title">getPersonData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> personData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Main</span><span class="params">()</span></span>&#123;</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Tan"</span>, <span class="string">"Rui"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Chen"</span>, <span class="string">"Chao"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Liang"</span>, <span class="string">"Chengwei"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Xiao"</span>, <span class="string">"Xin"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Li"</span>, <span class="string">"Yang"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Chen"</span>, <span class="string">"Runqian"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Liang"</span>, <span class="string">"Yongchao"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Luo"</span>, <span class="string">"Jihao"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Chen"</span>, <span class="string">"Zhi"</span>));</span><br><span class="line">        personData.add(<span class="keyword">new</span> Person(<span class="string">"Fan"</span>, <span class="string">"Fan"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* ......Other function..... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><h3 id="PersonOverviewController-java"><a href="#PersonOverviewController-java" class="headerlink" title="PersonOverviewController.java"></a>PersonOverviewController.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tanrui.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.fxml.FXML;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Label;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.TableColumn;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.TableView;</span><br><span class="line"><span class="keyword">import</span> com.tanrui.Main;</span><br><span class="line"><span class="keyword">import</span> com.tanrui.model.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonOverviewController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TableView&lt;Person&gt; personTable;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TableColumn&lt;Person, String&gt; firstNameColumn;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TableColumn&lt;Person, String&gt; lastNameColumn;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> Label firstNameLabel;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> Label lastNameLabel;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> Label streetLabel;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> Label postalCodeLabel;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> Label cityLabel;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> Label birthdayLabel;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Reference to the main application.</span></span><br><span class="line">    <span class="keyword">private</span> Main main;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The constructor.</span></span><br><span class="line"><span class="comment">     * The constructor is called before the initialize() method.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PersonOverviewController</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Initializes the controller class. This method is automatically called</span></span><br><span class="line"><span class="comment">     * after the fxml file has been loaded.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Initialize the person table with the two columns.</span></span><br><span class="line">        firstNameColumn.setCellValueFactory(cellData -&gt; cellData.getValue().firstNameProperty());</span><br><span class="line">        lastNameColumn.setCellValueFactory(cellData -&gt; cellData.getValue().lastNameProperty());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Is called by the main application to give a reference back to itself.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> main</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMain</span><span class="params">(Main main)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.main = main;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Add observable list data to the table</span></span><br><span class="line">        personTable.setItems(main.getPersonData());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong><code>@FXML</code>注解（Annotation）</strong></p><p>使用<code>@FXML</code>注解可以将操作的属性、方法绑定到<code>FXML</code>文件的界面元素，实际上，在属性、方法是非私有的情况下可以不使用<code>@FXML</code>注解，但是比起非私有声明，让他们保持私有并用注解标记的方式会更好！</p></li><li><p><strong><code>initialize()</code>方法</strong></p><p><code>initialize()</code>字面意思可知其是用于初始化对应<code>FXML</code>文件中的属性，此方法会在加载<code>FXML</code>文件时被自动执行，此时，所有的<code>FXML</code>属性都应已被初始化</p></li><li><p><strong><code>setCellValueFactory(...)</code>方法</strong></p><p>我们对表格列上使用<code>setCellValueFactory(...)</code>方法来确定为特定列使用前面<code>Person</code>的某个属性。<code>-&gt;</code>表示使用的是<a href="https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/Lambda-QuickStart/index.html" target="_blank" rel="noopener">Lambdas</a>特性；另外一种方法是使用<a href="https://docs.oracle.com/javase/8/javafx/api/" target="_blank" rel="noopener">PropertyValueFactory</a>(待研究…)。</p><p>这里我们之所以可以使用<code>cellData -&gt; cellData.getValue().firstNameProperty()</code>，便是因为之前我们将Person的属性都定义为<code>javafx.beans</code>中的封装属性，<code>firstNameProperty()</code>等方法都会在声明成<code>Beans</code>封装类型时被创建，其遵循了固定的命名规则，这使得我们使用起来特别方便</p></li></ul><h3 id="连接Main和PersonOverviewController"><a href="#连接Main和PersonOverviewController" class="headerlink" title="连接Main和PersonOverviewController"></a>连接Main和PersonOverviewController</h3><ul><li><p><strong><code>showPersonOverview()</code> 方法</strong></p><p><strong>Main.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Shows the person overview inside the root layout.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showPersonOverview</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// Load person overview.</span></span><br><span class="line">        FXMLLoader loader = <span class="keyword">new</span> FXMLLoader();</span><br><span class="line">        loader.setLocation(Main.class.getResource(<span class="string">"view/PersonOverview.fxml"</span>));</span><br><span class="line">        AnchorPane personOverview = (AnchorPane) loader.load();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set person overview into the center of root layout.</span></span><br><span class="line">        rootLayout.setCenter(personOverview);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Give the controller access to the main app.</span></span><br><span class="line">        PersonOverviewController controller = loader.getController();</span><br><span class="line">        controller.setMain(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="将View与Controller绑定"><a href="#将View与Controller绑定" class="headerlink" title="将View与Controller绑定"></a>将View与Controller绑定</h3><p>我们还需要为<code>FXML文件</code>指定其对应的<code>Controller</code>，以及<code>FXML元素</code>与<code>控制器的属性</code>的对应关系，这是因为FXML文件中的元素只能被对应<code>Controller</code>修改更新，若在其他方法中修改会产生运行时错误。例如：在<code>PersonOverviewController.java</code>中将某个<code>Label</code>返回到<code>Main.java</code>中而后在其中修改该<code>Label</code>的值，意即在<code>非FX线程</code>中执行<code>FX线程</code>相关的任务，则会造成当前的线程阻塞，解决方法之一是使用<code>Platform.runLater()</code>方法，如下所示，括号中的<code>FX线程</code>相关任务便不会阻塞当前进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Platform.runLater(() -&gt; &#123;</span><br><span class="line">        ………相关FX线程代码………</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>当然，最好的选择还是讲<code>FX线程</code>任务和其他任务区分开来，将特定的<code>FXML文件</code>与对应的<code>Controller</code>联系起来，当需要建立联系时可通过之前所说的使用<code>java.beans</code>、<code>ObservableList</code>等方法实现动态更新视图。</p><ul><li><p><strong>为<code>FXML文件</code>指定<code>Controller</code></strong></p><p>在Eclipse中好像有图形化界面直接为<code>FXML文件</code>选择<code>Controller</code>的操作，但是我使用的是IDEA，没有此功能，只能在源代码中指定，如下所示。</p><p><strong>PersonOverview.fxml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">AnchorPane</span> <span class="attr">maxHeight</span>=<span class="string">"-Infinity"</span> <span class="attr">maxWidth</span>=<span class="string">"-Infinity"</span> <span class="attr">minHeight</span>=<span class="string">"-Infinity"</span> <span class="attr">minWidth</span>=<span class="string">"-Infinity"</span> <span class="attr">prefHeight</span>=<span class="string">"300.0"</span> <span class="attr">prefWidth</span>=<span class="string">"600.0"</span> <span class="attr">xmlns</span>=<span class="string">"http://javafx.com/javafx/8.0.121"</span> <span class="attr">xmlns:fx</span>=<span class="string">"http://javafx.com/fxml/1"</span> <span class="attr">fx:controller</span>=<span class="string">"com.tanrui.view.PersonOverviewController"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">children</span>&gt;</span></span><br><span class="line">        &lt;? ... 内容省略 ... ?&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">children</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">AnchorPane</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如上述代码所述，在顶层节点（此处是<code>AnchorPane</code>）标签中添加属性如下：<code>fx:controller=&quot;com.tanrui.view.PersonOverviewController”</code>，以此为<code>FXML文件</code>指定<code>Controller</code></p></li><li><p>为<code>FXML元素</code>指定<code>fx:id</code>，使其绑定对应的<code>控制器属性</code></p><p><img src="/img/image-20181023205748006.png" alt="image-20181023205748006"></p><p>如图，选定特定元素，在右侧界面找到<code>Code</code>-&gt;<code>fx:id</code>，将其对应的控制器属性填入即可</p></li></ul><h3 id="Details界面更新"><a href="#Details界面更新" class="headerlink" title="Details界面更新"></a>Details界面更新</h3><ul><li><p><strong><code>showPersonDetails(Person person)</code>方法</strong></p><p><code>showPersonDetails(Person person)</code>方法用于使用Person实例的数据填写标签。</p><p><strong>PersonOverviewController.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Fills all text fields to show details about the person.</span></span><br><span class="line"><span class="comment"> * If the specified person is null, all text fields are cleared.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> person the person or null</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showPersonDetails</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (person != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// Fill the labels with info from the person object.</span></span><br><span class="line">        firstNameLabel.setText(person.getFirstName());</span><br><span class="line">        lastNameLabel.setText(person.getLastName());</span><br><span class="line">        streetLabel.setText(person.getStreet());</span><br><span class="line">        postalCodeLabel.setText(Integer.toString(person.getPostalCode()));</span><br><span class="line">        cityLabel.setText(person.getCity());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> We need a way to convert the birthday into a String!</span></span><br><span class="line">        <span class="comment">// birthdayLabel.setText(...);</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Person is null, remove all the text.</span></span><br><span class="line">        firstNameLabel.setText(<span class="string">""</span>);</span><br><span class="line">        lastNameLabel.setText(<span class="string">""</span>);</span><br><span class="line">        streetLabel.setText(<span class="string">""</span>);</span><br><span class="line">        postalCodeLabel.setText(<span class="string">""</span>);</span><br><span class="line">        cityLabel.setText(<span class="string">""</span>);</span><br><span class="line">        birthdayLabel.setText(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>监听用户在人员表中的选择</strong></p><p><strong>PersonOverviewController.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FXML</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Initialize the person table with the two columns.</span></span><br><span class="line">    firstNameColumn.setCellValueFactory(</span><br><span class="line">            cellData -&gt; cellData.getValue().firstNameProperty());</span><br><span class="line">    lastNameColumn.setCellValueFactory(</span><br><span class="line">            cellData -&gt; cellData.getValue().lastNameProperty());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clear person details.</span></span><br><span class="line">    showPersonDetails(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Listen for selection changes and show the person details when changed.</span></span><br><span class="line">    personTable.getSelectionModel().selectedItemProperty().addListener(</span><br><span class="line">            (observable, oldValue, newValue) -&gt; showPersonDetails(newValue));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除按钮事件"><a href="#删除按钮事件" class="headerlink" title="删除按钮事件"></a>删除按钮事件</h3><p>我们的界面已经包含了一个删除的按钮 ，但是并没有为其制定实际的响应操作，因此我们定义一个响应函数，如下：</p><p><strong>PersonOverviewController.java</strong>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Called when the user clicks on the delete button.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleDeletePerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> selectedIndex = personTable.getSelectionModel().getSelectedIndex();</span><br><span class="line">        <span class="keyword">if</span> (selectedIndex &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            personTable.getItems().remove(selectedIndex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">new</span> ShowDialog(main.getPrimaryStage(), Alert.AlertType.WARNING, <span class="string">"No Person Selected"</span>, <span class="string">"Please select a person in the table."</span>).ShowSpecificDialog();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h4><p>从上述代码可以看到我们使用了条件判断语句来判断<code>selectedIndex</code>的值，当其小于0时，正常情况我们应该会让其抛出<code>ArrayIndexOutOfBoundsException</code>异常，但是我们想尽量简洁明了的将错误或者警告信息展示给用户，因此这里我们使用了<code>controlsfx</code>包，用于弹出各类提示框（可在<a href="http://fxexperience.com/controlsfx/" target="_blank" rel="noopener">ControlsFX</a>官网获取）。</p><p><code>controlsfx</code>有两个主要的版本，同时对于不同的版本，二者的用法也不同：</p><ul><li>对于Java 8，需要下载<a href="http://fxexperience.com/downloads/controlsfx-8-40-14/" target="_blank" rel="noopener">ControlsFX 8.40.14</a>包</li><li>对于Java 9及以上，需要下载<a href="http://fxexperience.com/downloads/controlsfx-9-0-0/" target="_blank" rel="noopener">ControlsFX 9.0.0</a>包</li></ul><p>我们这里用到的是Java 10，因此使用<code>ControlsFX 9.0.0</code>，使用方法如下：</p><p><strong>ShowDialog.java</strong>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tanrui.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Util to create and show Dialog.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Tan Rui</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShowDialog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Stage stage;</span><br><span class="line">    <span class="keyword">private</span> Alert.AlertType type;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShowDialog</span><span class="params">(Stage stage, Alert.AlertType type, String title, String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.stage = stage;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowSpecificDialog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Alert dlg = <span class="keyword">new</span> Alert(type);</span><br><span class="line">        dlg.initOwner(stage);</span><br><span class="line">        dlg.setTitle(title);</span><br><span class="line">        dlg.getDialogPane().setContentText(message);</span><br><span class="line">        dlg.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>PersonOverviewController.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Called when the user clicks on the delete button.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleDeletePerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> selectedIndex = personTable.getSelectionModel().getSelectedIndex();</span><br><span class="line">        <span class="keyword">if</span> (selectedIndex &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            personTable.getItems().remove(selectedIndex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">new</span> ShowDialog(main.getPrimaryStage(), Alert.AlertType.WARNING, <span class="string">"No Person Selected"</span>, <span class="string">"Please select a person in the table."</span>).ShowSpecificDialog();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="新建和编辑对话框"><a href="#新建和编辑对话框" class="headerlink" title="新建和编辑对话框"></a>新建和编辑对话框</h3><blockquote><p>Tips：创建一个新的界面、新的Stage（承载新的View时），步骤一般都是：</p><ol><li>创建FXML文件，使用SceneBuilder编辑界面；</li><li>创建对应的Controller，对FXML中的元素指定对应的属性。主要是为展示型元素指定数据、为控制型元素指定动作等；</li><li>连接FXML文件和Controller文件、连接FXML中的元素和Controller中的属性；</li><li>在Main函数中加载该控制器</li></ol></blockquote><p>为之前的<code>New</code>和<code>Edit</code>按钮添加动作，弹出对话框（新的Stage）。</p><h4 id="设计对话框"><a href="#设计对话框" class="headerlink" title="设计对话框"></a>设计对话框</h4><p>创建<code>PersonEditDialog.fxml</code>，完成弹出对话框的设计：</p><p><img src="/img/image-20181027150559447.png" alt="image-20181027150559447"></p><h4 id="创建控制器"><a href="#创建控制器" class="headerlink" title="创建控制器"></a>创建控制器</h4><p>为对话框创建控制器<code>PersonEditDialogController.java</code>。</p><p><strong>PersonEditDialogController.java：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tanrui.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tanrui.util.ShowDialog;</span><br><span class="line"><span class="keyword">import</span> javafx.fxml.FXML;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.TextField;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.Stage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tanrui.model.Person;</span><br><span class="line"><span class="keyword">import</span> com.tanrui.util.DateUtil;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Dialog to edit details of a person.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Marco Jakob</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonEditDialogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TextField firstNameField;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TextField lastNameField;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TextField streetField;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TextField postalCodeField;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TextField cityField;</span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="keyword">private</span> TextField birthdayField;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Stage dialogStage;</span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> okClicked = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Initializes the controller class. This method is automatically called</span></span><br><span class="line"><span class="comment">     * after the fxml file has been loaded.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sets the stage of this dialog.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dialogStage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDialogStage</span><span class="params">(Stage dialogStage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dialogStage = dialogStage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sets the person to be edited in the dialog.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> person</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPerson</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.person = person;</span><br><span class="line"></span><br><span class="line">        firstNameField.setText(person.getFirstName());</span><br><span class="line">        lastNameField.setText(person.getLastName());</span><br><span class="line">        streetField.setText(person.getStreet());</span><br><span class="line">        postalCodeField.setText(Integer.toString(person.getPostalCode()));</span><br><span class="line">        cityField.setText(person.getCity());</span><br><span class="line">        birthdayField.setText(DateUtil.format(person.getBirthday()));</span><br><span class="line">        birthdayField.setPromptText(<span class="string">"dd.mm.yyyy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns true if the user clicked OK, false otherwise.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isOkClicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> okClicked;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Called when the user clicks ok.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleOk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isInputValid()) &#123;</span><br><span class="line">            person.setFirstName(firstNameField.getText());</span><br><span class="line">            person.setLastName(lastNameField.getText());</span><br><span class="line">            person.setStreet(streetField.getText());</span><br><span class="line">            person.setPostalCode(Integer.parseInt(postalCodeField.getText()));</span><br><span class="line">            person.setCity(cityField.getText());</span><br><span class="line">            person.setBirthday(DateUtil.parse(birthdayField.getText()));</span><br><span class="line"></span><br><span class="line">            okClicked = <span class="keyword">true</span>;</span><br><span class="line">            dialogStage.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Called when the user clicks cancel.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleCancel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dialogStage.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Validates the user input in the text fields.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if the input is valid</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isInputValid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String errorMessage = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (firstNameField.getText() == <span class="keyword">null</span> || firstNameField.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            errorMessage += <span class="string">"No valid first name!\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (lastNameField.getText() == <span class="keyword">null</span> || lastNameField.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            errorMessage += <span class="string">"No valid last name!\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (streetField.getText() == <span class="keyword">null</span> || streetField.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            errorMessage += <span class="string">"No valid street!\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (postalCodeField.getText() == <span class="keyword">null</span> || postalCodeField.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            errorMessage += <span class="string">"No valid postal code!\n"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Integer.parseInt(postalCodeField.getText());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                errorMessage += <span class="string">"No valid postal code (must be an integer)!\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cityField.getText() == <span class="keyword">null</span> || cityField.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            errorMessage += <span class="string">"No valid city!\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (birthdayField.getText() == <span class="keyword">null</span> || birthdayField.getText().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            errorMessage += <span class="string">"No valid birthday!\n"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!DateUtil.validDate(birthdayField.getText())) &#123;</span><br><span class="line">                errorMessage += <span class="string">"No valid birthday. Use the format dd.mm.yyyy!\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (errorMessage.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> ShowDialog(dialogStage, Alert.AlertType.ERROR, <span class="string">"Invalid Fields"</span>, <span class="string">"Please correct invalid fields"</span>).ShowSpecificDialog();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于该控制器的一些事情应该注意：</p><ol><li><code>setPerson(…)</code>方法可以从其它类中调用，用来设置编辑的人员。</li><li>当用户点击OK按钮时，调用<code>handleOK()</code>方法。首先，通过调用<code>isInputValid()</code>方法做一些验证。只有验证成功，Person对象使用输入的数据填充。这些修改将直接应用到Person对象上，传递给<code>setPerson(…)</code>。</li><li>布尔值<code>okClicked</code>被使用，以便调用者决定用户是否点击OK或者Cancel按钮。</li></ol><h4 id="连接视图和控制器"><a href="#连接视图和控制器" class="headerlink" title="连接视图和控制器"></a>连接视图和控制器</h4><p>使用已经创建的视图（FXML）和控制器，需要连接到一起。</p><ol><li>使用SceneBuilder打开<code>PersonEditDialog.fxml</code>文件</li><li>在左边的<em>Controller</em>组中选择<code>PersonEditDialogController</code>作为控制器类</li><li>设置所有<strong>TextField</strong>的<code>fx:id</code>到相应的控制器字段上。</li><li>设置两个按钮的<strong>onAction</strong>到相应的处理方法上。</li></ol><h4 id="在Main中部署该控制器"><a href="#在Main中部署该控制器" class="headerlink" title="在Main中部署该控制器"></a>在Main中部署该控制器</h4><p><strong>Main.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Opens a dialog to edit details for the specified person. If the user</span></span><br><span class="line"><span class="comment"> * clicks OK, the changes are saved into the provided person object and true</span></span><br><span class="line"><span class="comment"> * is returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> person the person object to be edited</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true if the user clicked OK, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">showPersonEditDialog</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// Load the fxml file and create a new stage for the popup dialog.</span></span><br><span class="line">        FXMLLoader loader = <span class="keyword">new</span> FXMLLoader();</span><br><span class="line">        loader.setLocation(Main.class.getResource(<span class="string">"view/PersonEditDialog.fxml"</span>));</span><br><span class="line">        AnchorPane page = (AnchorPane) loader.load();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create the dialog Stage.</span></span><br><span class="line">        Stage dialogStage = <span class="keyword">new</span> Stage();</span><br><span class="line">        dialogStage.setTitle(<span class="string">"Edit Person"</span>);</span><br><span class="line">        dialogStage.initModality(Modality.WINDOW_MODAL);</span><br><span class="line">        dialogStage.initOwner(primaryStage);</span><br><span class="line">        Scene scene = <span class="keyword">new</span> Scene(page);</span><br><span class="line">        dialogStage.setScene(scene);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the person into the controller.</span></span><br><span class="line">        PersonEditDialogController controller = loader.getController();</span><br><span class="line">        controller.setDialogStage(dialogStage);</span><br><span class="line">        controller.setPerson(person);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Show the dialog and wait until the user closes it</span></span><br><span class="line">        dialogStage.showAndWait();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> controller.isOkClicked();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为主界面中<code>New</code>和<code>Edit</code>按钮创建OnAction方法，这些方法将从<code>Main</code>中调用<code>showPersonEditDialog(…)</code>方法。</p><p><strong>PersonOverviewController.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Called when the user clicks the new button. Opens a dialog to edit</span></span><br><span class="line"><span class="comment"> * details for a new person.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FXML</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleNewPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Person tempPerson = <span class="keyword">new</span> Person();</span><br><span class="line">    <span class="keyword">boolean</span> okClicked = main.showPersonEditDialog(tempPerson);</span><br><span class="line">    <span class="keyword">if</span> (okClicked) &#123;</span><br><span class="line">        main.getPersonData().add(tempPerson);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Called when the user clicks the edit button. Opens a dialog to edit</span></span><br><span class="line"><span class="comment"> * details for the selected person.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FXML</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleEditPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Person selectedPerson = personTable.getSelectionModel().getSelectedItem();</span><br><span class="line">    <span class="keyword">if</span> (selectedPerson != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">boolean</span> okClicked = main.showPersonEditDialog(selectedPerson);</span><br><span class="line">        <span class="keyword">if</span> (okClicked) &#123;</span><br><span class="line">            showPersonDetails(selectedPerson);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> ShowDialog(main.getPrimaryStage(), Alert.AlertType.WARNING, <span class="string">"No Person Selected"</span>, <span class="string">"Please select a person in the table."</span>).ShowSpecificDialog();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而后在<code>PersonOverview.fxml</code>中为New和Edit两个按钮绑定对应的OnAction方法：</p><p><img src="/img/image-20181027164439676.png" alt="image-20181027164439676"></p><h3 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h3><p>我们有很多种方法来实现应用数据的持久化，例如：</p><ul><li>使用数据库存储</li><li>使用Json文件存储</li><li>使用XML文件存储</li><li>……</li></ul><p>这里我们使用XML文件格式存储应用数据。之前的我们应用的数据都只是存在内存中，内存的特性使得关闭应用程序后数据便会丢失，因此我们下面要做的就是：</p><ol><li>每次打开应用可加载上一次的用户数据</li><li>用户可选择保存当前数据到指定XML文件</li><li>用户可选择从指定XML文件加载数据</li></ol><h4 id="使用Preferences保存应用状态"><a href="#使用Preferences保存应用状态" class="headerlink" title="使用Preferences保存应用状态"></a>使用Preferences保存应用状态</h4><p><code>Java</code>提供了<code>Preferences</code>类来帮助我们存储用户配置（本例中是XML数据文件的路径，用于下次打开从该文件中加载），<code>Preferences</code>类底层对各类操作系统进行了封装（实际上是<code>Windows系统</code>、<code>OS X系统</code>和<code>类Unix文件系统</code>三种），用户配置在<code>Windows系统</code>上可能保存在注册表中、在<code>类Unix文件系统</code>上可能保存在<code>/tmp</code>下的某个隐藏文件中，而对于使用者来说这些实现细节都不必考虑，只需知道<code>Preferences</code>类是用来保存用户配置即可。用法如下：</p><p><strong>Main.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the person file preference, i.e. the file that was last opened.</span></span><br><span class="line"><span class="comment">     * The preference is read from the OS specific registry. If no such</span></span><br><span class="line"><span class="comment">     * preference can be found, null is returned.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> File <span class="title">getPersonFilePath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Preferences prefs = Preferences.userNodeForPackage(Main.class);</span><br><span class="line">        String filePath = prefs.get(<span class="string">"filePath"</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (filePath != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> File(filePath);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sets the file path of the currently loaded file. The path is persisted in</span></span><br><span class="line"><span class="comment">     * the OS specific registry.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file the file or null to remove the path</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPersonFilePath</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        Preferences prefs = Preferences.userNodeForPackage(Main.class);</span><br><span class="line">        <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line">            prefs.put(<span class="string">"filePath"</span>, file.getPath());</span><br><span class="line">            <span class="comment">// Update the stage title.</span></span><br><span class="line">            primaryStage.setTitle(<span class="string">"AddressApp - "</span> + file.getName());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            prefs.remove(<span class="string">"filePath"</span>);</span><br><span class="line">            <span class="comment">// Update the stage title.</span></span><br><span class="line">            primaryStage.setTitle(<span class="string">"AddressApp"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="使用JAXB"><a href="#使用JAXB" class="headerlink" title="使用JAXB"></a>使用JAXB</h4><p><code>JAXB包</code>是Java中提供的对数据进行<code>编列(marshall)</code>成XML文件以及对XML文件<code>反编列(unmarshall)</code>为数据结构的包，<code>Java SE</code>中有如下支持类型：<code>JAXB 2.0</code>是<code>JDK 1.6</code>的组成部分。<code>JAXB 2.2.3</code>是<code>JDK 1.7以上</code>的组成部分，而实际上在<code>Java 9</code>之后就已将<code>JAXB</code>包移除，因此使用时需添加额外的lib包，详情可见博客<a href="https://blog.csdn.net/hadues/article/details/79188793" target="_blank" rel="noopener">真正解决方案：java.lang.ClassNotFoundException: javax.xml.bind.JAXBException</a>。</p><h5 id="JAXB模型类"><a href="#JAXB模型类" class="headerlink" title="JAXB模型类"></a>JAXB模型类</h5><p>我们希望持久化的数据应该是<code>Main</code>中的<code>personData</code>，而<code>JAXB</code>有以下要求：</p><ul><li>使用<code>@XmlRootElement</code>定义<code>XML根元素</code>的名称</li><li>使用<code>@XmlElement</code>指定一个<code>XML元素</code>，可选</li></ul><p>而<code>Main</code>中的<code>personData</code>是<code>ObservableList</code>类型，由于<code>ObservableList</code>类型不支持添加注解，因此我们需要创建另外一个能保存<code>Person</code>列表同时又能存储为<code>XML文件</code>的类，如下。</p><p><strong>PersonListWrapper.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tanrui.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlElement;</span><br><span class="line"><span class="keyword">import</span> javax.xml.bind.annotation.XmlRootElement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Helper class to wrap a list of persons. This is used for saving the</span></span><br><span class="line"><span class="comment"> * list of persons to XML.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@XmlRootElement</span>(name = <span class="string">"persons"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonListWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Person&gt; persons;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XmlElement</span>(name = <span class="string">"person"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Person&gt; <span class="title">getPersons</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> persons;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPersons</span><span class="params">(List&lt;Person&gt; persons)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.persons = persons;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用JAXB读写数据到XML文件"><a href="#使用JAXB读写数据到XML文件" class="headerlink" title="使用JAXB读写数据到XML文件"></a>使用JAXB读写数据到XML文件</h5><p>我们将读写XML文件的逻辑放到<code>Main类</code>中，<code>Controller</code>在用到相应的逻辑时，直接调用<code>Main</code>中的方法即可。</p><p><strong>Main.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Loads person data from the specified file. The current person data will</span></span><br><span class="line"><span class="comment"> * be replaced.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadPersonDataFromFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        JAXBContext context = JAXBContext</span><br><span class="line">                .newInstance(PersonListWrapper.class);</span><br><span class="line">        Unmarshaller um = context.createUnmarshaller();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Reading XML from the file and unmarshalling.</span></span><br><span class="line">        PersonListWrapper wrapper = (PersonListWrapper) um.unmarshal(file);</span><br><span class="line"></span><br><span class="line">        personData.clear();</span><br><span class="line">        personData.addAll(wrapper.getPersons());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Save the file path to the registry.</span></span><br><span class="line">        setPersonFilePath(file);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123; <span class="comment">// catches ANY exception</span></span><br><span class="line">        <span class="keyword">new</span> ShowDialog(<span class="keyword">this</span>.getPrimaryStage(), Alert.AlertType.ERROR, <span class="string">"Error"</span>, <span class="string">"Could not save data to file:\n"</span> + file.getPath()).ShowSpecificDialog();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Saves the current person data to the specified file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">savePersonDataToFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        JAXBContext context = JAXBContext.newInstance(PersonListWrapper.class);</span><br><span class="line">        Marshaller m = context.createMarshaller();</span><br><span class="line">        m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Wrapping our person data.</span></span><br><span class="line">        PersonListWrapper wrapper = <span class="keyword">new</span> PersonListWrapper();</span><br><span class="line">        wrapper.setPersons(personData);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Marshalling and saving XML to the file.</span></span><br><span class="line">        m.marshal(wrapper, file);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Save the file path to the registry.</span></span><br><span class="line">        setPersonFilePath(file);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123; <span class="comment">// catches ANY exception</span></span><br><span class="line">        <span class="keyword">new</span> ShowDialog(<span class="keyword">this</span>.getPrimaryStage(), Alert.AlertType.ERROR, <span class="string">"Error"</span>, <span class="string">"Could not save data to file:\n"</span> + file.getPath()).ShowSpecificDialog();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>编组(marshall):savePersonDataToFile(…)</code>和<code>解组(unmarshall):loadPersonDataFromFile(…)</code>已准备好，下面在界面中使用它。</p><h4 id="创建打开和保存菜单"><a href="#创建打开和保存菜单" class="headerlink" title="创建打开和保存菜单"></a>创建打开和保存菜单</h4><h5 id="为File菜单添加子项"><a href="#为File菜单添加子项" class="headerlink" title="为File菜单添加子项"></a>为File菜单添加子项</h5><p><img src="/img/image-20181027232418408.png" alt="image-20181027232418408"></p><h5 id="处理菜单相应动作"><a href="#处理菜单相应动作" class="headerlink" title="处理菜单相应动作"></a>处理菜单相应动作</h5><p><code>Controller</code>中使用<code>FileChooser</code>的方法，<code>FileChooser</code>同样封装了不同操作系统的具体实现，使用者仅需调用接口即可。</p><p>本类中使用了<code>FileChooser.ExtensionFilter</code>，对文件系统中文件进行过滤，保留<code>.xml</code>结尾的文件。</p><p>当用户选择特定文件而后点击<code>打开</code>按钮时，会返回该文件，否则返回<code>Null</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tanrui.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tanrui.Main;</span><br><span class="line"><span class="keyword">import</span> com.tanrui.util.ShowDialog;</span><br><span class="line"><span class="keyword">import</span> javafx.fxml.FXML;</span><br><span class="line"><span class="keyword">import</span> javafx.scene.control.Alert;</span><br><span class="line"><span class="keyword">import</span> javafx.stage.FileChooser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The controller for the root layout. The root layout provides the basic</span></span><br><span class="line"><span class="comment"> * application layout containing a menu bar and space where other JavaFX</span></span><br><span class="line"><span class="comment"> * elements can be placed.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RootLayoutController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Reference to the main application</span></span><br><span class="line">    <span class="keyword">private</span> Main main;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Is called by the main application to give a reference back to itself.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> main</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMain</span><span class="params">(Main main)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.main = main;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates an empty address book.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleNew</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        main.getPersonData().clear();</span><br><span class="line">        main.setPersonFilePath(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Opens a FileChooser to let the user select an address book to load.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleOpen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        FileChooser fileChooser = <span class="keyword">new</span> FileChooser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set extension filter</span></span><br><span class="line">        FileChooser.ExtensionFilter extFilter = <span class="keyword">new</span> FileChooser.ExtensionFilter(</span><br><span class="line">                <span class="string">"XML files (*.xml)"</span>, <span class="string">"*.xml"</span>);</span><br><span class="line">        fileChooser.getExtensionFilters().add(extFilter);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Show save file dialog</span></span><br><span class="line">        File file = fileChooser.showOpenDialog(main.getPrimaryStage());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line">            main.loadPersonDataFromFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Saves the file to the person file that is currently open. If there is no</span></span><br><span class="line"><span class="comment">     * open file, the "save as" dialog is shown.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        File personFile = main.getPersonFilePath();</span><br><span class="line">        <span class="keyword">if</span> (personFile != <span class="keyword">null</span>) &#123;</span><br><span class="line">            main.savePersonDataToFile(personFile);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            handleSaveAs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Opens a FileChooser to let the user select a file to save to.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleSaveAs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        FileChooser fileChooser = <span class="keyword">new</span> FileChooser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set extension filter</span></span><br><span class="line">        FileChooser.ExtensionFilter extFilter = <span class="keyword">new</span> FileChooser.ExtensionFilter(</span><br><span class="line">                <span class="string">"XML files (*.xml)"</span>, <span class="string">"*.xml"</span>);</span><br><span class="line">        fileChooser.getExtensionFilters().add(extFilter);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Show save file dialog</span></span><br><span class="line">        File file = fileChooser.showSaveDialog(main.getPrimaryStage());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// Make sure it has the correct extension</span></span><br><span class="line">            <span class="keyword">if</span> (!file.getPath().endsWith(<span class="string">".xml"</span>)) &#123;</span><br><span class="line">                file = <span class="keyword">new</span> File(file.getPath() + <span class="string">".xml"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            main.savePersonDataToFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Opens an about dialog.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleAbout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ShowDialog(main.getPrimaryStage(), Alert.AlertType.INFORMATION, <span class="string">"About"</span>, <span class="string">"Author: Tan\\nWebsite: https://guitoubing.top"</span>).ShowSpecificDialog();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Closes the application.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleExit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Opens the birthday statistics.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@FXML</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleShowBirthdayStatistics</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        main.showBirthdayStatistics();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="连接FXML文件和Controller、绑定菜单和对应动作"><a href="#连接FXML文件和Controller、绑定菜单和对应动作" class="headerlink" title="连接FXML文件和Controller、绑定菜单和对应动作"></a>连接FXML文件和Controller、绑定菜单和对应动作</h5><p><img src="/img/image-20181027233726178.png" alt="image-20181027233726178"></p><p><img src="/img/image-20181027233529314.png" alt="image-20181027233529314"></p><h5 id="在Main中部署该控制器-1"><a href="#在Main中部署该控制器-1" class="headerlink" title="在Main中部署该控制器"></a>在Main中部署该控制器</h5><p><strong>Main.java:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Initializes the root layout.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initRootLayout</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">// Load root layout from fxml file.</span></span><br><span class="line">           FXMLLoader loader = <span class="keyword">new</span> FXMLLoader();</span><br><span class="line">           loader.setLocation(Main.class.getResource(<span class="string">"view/RootLayout.fxml"</span>));</span><br><span class="line">           rootLayout = (BorderPane) loader.load();</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Show the scene containing the root layout.</span></span><br><span class="line">           Scene scene = <span class="keyword">new</span> Scene(rootLayout);</span><br><span class="line">           primaryStage.setScene(scene);</span><br><span class="line"></span><br><span class="line">           RootLayoutController controller = loader.getController();</span><br><span class="line">           controller.setMain(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">           primaryStage.show();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       File file = getPersonFilePath();</span><br><span class="line">       <span class="keyword">if</span> (file != <span class="keyword">null</span>)&#123;</span><br><span class="line">           loadPersonDataFromFile(file);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://code.makery.ch/" target="_blank" rel="noopener">code.makery —— JavaFX中文教程</a></li><li><a href="https://www.tutorialspoint.com/javafx/" target="_blank" rel="noopener">JavaFX Tutorial</a></li><li><a href="https://blog.csdn.net/hadues/article/details/79188793" target="_blank" rel="noopener">真正解决方案：java.lang.ClassNotFoundException: javax.xml.bind.JAXBException</a></li><li><a href="http://fxexperience.com/controlsfx/" target="_blank" rel="noopener">fxexperience —— ControlFX</a></li><li><a href="https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/Lambda-QuickStart/index.html" target="_blank" rel="noopener">Java SE8 —— Lambda</a></li><li>…………</li></ol><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>本博主要是在学习<a href="https://code.makery.ch/" target="_blank" rel="noopener">code.makery —— JavaFX中文教程</a>博客中对于JavaFX的教程，跟着博主的项目逻辑和代码自己过了一遍，对一些由于版本不兼容（博主使用的是<code>JDK 8u40</code>，我这里使用的是<code>Java 10 2018-03-20</code>）造成的问题进行了解决，同时对项目过程中一些功能进行了拓展学习，研究了很多用到的包源码，收获颇多。可点击<a href="http://getme.guitoubing.top/JavaFX_PRE.zip" target="_blank" rel="noopener">JavaFX-Test</a>中获取源码。</p><p>希望藉此次<code>JavaFX</code>学习开启我的Java源码学习之旅，道阻且长！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JavaFX小记&quot;&gt;&lt;a href=&quot;#JavaFX小记&quot; class=&quot;headerlink&quot; title=&quot;JavaFX小记&quot;&gt;&lt;/a&gt;JavaFX小记&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JavaFX&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JavaFX&lt;/code&gt;是由&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;甲骨文(Oracle)公司&lt;/a&gt;推出的一系列的产品和技术，主要应用于创建Rich Internet application(&lt;a href=&quot;https://zh.wikipedia.org/wiki/RIA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RIAs&lt;/a&gt;)，它是一个跨平台的桌面应用程序开发框架。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="JavaFX" scheme="http://blog.guitoubing.top/tags/JavaFX/"/>
    
      <category term="Java源码学习之旅" scheme="http://blog.guitoubing.top/tags/Java%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%97%85/"/>
    
      <category term="Java" scheme="http://blog.guitoubing.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>TimesTen内存数据库课程笔记（更新中）</title>
    <link href="http://blog.guitoubing.top/2018/09/02/TimesTen%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.guitoubing.top/2018/09/02/TimesTen内存数据库课程笔记/</id>
    <published>2018-09-02T12:59:50.000Z</published>
    <updated>2018-11-06T13:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存计算与内存数据库"><a href="#内存计算与内存数据库" class="headerlink" title="内存计算与内存数据库"></a>内存计算与内存数据库</h1><h2 id="第零章"><a href="#第零章" class="headerlink" title="第零章"></a>第零章</h2><p>OLTP：行存储（记录：元组），联机事务处理</p><p>OLAP：列存储（key-value），联机分析处理</p><h2 id="Timesten操作小记"><a href="#Timesten操作小记" class="headerlink" title="Timesten操作小记"></a>Timesten操作小记</h2><a id="more"></a><h3 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h3><blockquote><p>系统：Red Hat Enterprise Linux Server release 5.7 (Tikanga)</p></blockquote><h3 id="创建DSN（Data-Source-Name）"><a href="#创建DSN（Data-Source-Name）" class="headerlink" title="创建DSN（Data Source Name）"></a>创建DSN（Data Source Name）</h3><blockquote><p>逻辑名，用于标识某一数据库连接</p></blockquote><h4 id="打开数据库配置文件-通常称为系统ODBC-INI配置文件"><a href="#打开数据库配置文件-通常称为系统ODBC-INI配置文件" class="headerlink" title="打开数据库配置文件(通常称为系统ODBC.INI配置文件)"></a>打开数据库配置文件(通常称为<code>系统ODBC.INI配置文件</code>)</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="variable">$TT_HOME</span>/info</span><br><span class="line">$ gedit sys.odbc.ini</span><br></pre></td></tr></table></figure><h4 id="在数据库DSN列表中添加需要新建的数据库名称"><a href="#在数据库DSN列表中添加需要新建的数据库名称" class="headerlink" title="在数据库DSN列表中添加需要新建的数据库名称"></a>在数据库DSN列表中添加需要新建的数据库名称</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加my_ttdb数据库，“=”后面是指该数据库使用某种驱动，如第3行所示</span></span><br><span class="line"><span class="section">[ODBC Data Sources]</span></span><br><span class="line"><span class="attr">my_ttdb</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Driver</span><br><span class="line"><span class="attr">TT_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Driver</span><br><span class="line"><span class="attr">sampledb_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Driver</span><br><span class="line"><span class="attr">cachedb1_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Driver</span><br><span class="line"><span class="attr">repdb1_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Driver</span><br><span class="line"><span class="attr">repdb2_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Driver</span><br><span class="line"><span class="attr">sampledbCS_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Client Driver</span><br><span class="line"><span class="attr">cachedb1CS_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Client Driver</span><br><span class="line"><span class="attr">repdb1CS_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Client Driver</span><br><span class="line"><span class="attr">repdb2CS_1122</span>=TimesTen <span class="number">11.2</span>.<span class="number">2</span> Client Driver</span><br></pre></td></tr></table></figure><h4 id="为2中创建的数据库添加配置，日志文件与检查点文件应存储在不同磁盘中"><a href="#为2中创建的数据库添加配置，日志文件与检查点文件应存储在不同磁盘中" class="headerlink" title="为2中创建的数据库添加配置，日志文件与检查点文件应存储在不同磁盘中"></a>为2中创建的数据库添加配置，<u><strong>日志文件与检查点文件应存储在不同磁盘中</strong></u></h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置my_ttdb</span></span><br><span class="line"><span class="section">[my_ttdb]</span></span><br><span class="line"><span class="comment"># 数据库监听器驱动位置</span></span><br><span class="line"><span class="attr">Driver</span>=/home/oracle/TimesTen/tt1122/lib/libtten.so </span><br><span class="line"><span class="comment"># DataStore为检查点文件存储位置</span></span><br><span class="line"><span class="attr">DataStore</span>=/u02/ttdata/datastores/my_ttdb </span><br><span class="line"><span class="comment"># LogDir为日志文件存储位置</span></span><br><span class="line"><span class="attr">LogDir</span>=/u03/ttdata/logs</span><br><span class="line"><span class="comment"># 以下两个Size是TimesTen内存数据库的内存分配</span></span><br><span class="line"><span class="attr">PermSize</span>=<span class="number">40</span></span><br><span class="line"><span class="attr">TempSize</span>=<span class="number">32</span></span><br><span class="line"><span class="comment"># 数据库的字符集</span></span><br><span class="line"><span class="attr">DatabaseCharacterSet</span>=AL32UTF8</span><br></pre></td></tr></table></figure><blockquote><p>TimesTen的内存分配主要是PermSize和TempSize两块，可先参考博客<a href="https://blog.csdn.net/stevensxiao/article/details/51050831" target="_blank" rel="noopener"><strong><u>如何更改TimesTen数据库的大小</u></strong></a>。</p></blockquote><h4 id="保存配置文件并关闭"><a href="#保存配置文件并关闭" class="headerlink" title="保存配置文件并关闭"></a>保存配置文件并关闭</h4><h3 id="数据库服务器基本命令"><a href="#数据库服务器基本命令" class="headerlink" title="数据库服务器基本命令"></a>数据库服务器基本命令</h3><h4 id="查看服务器状态"><a href="#查看服务器状态" class="headerlink" title="查看服务器状态"></a>查看服务器状态</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttstatus</span><br><span class="line">TimesTen status report as of Thu Sep 27 04:08:30 2018</span><br><span class="line"></span><br><span class="line">Daemon pid 2637 port 53392 instance tt1122</span><br><span class="line">TimesTen server pid 2646 started on port 53393</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">Accessible by group oracle</span><br><span class="line">End of report</span><br></pre></td></tr></table></figure><h4 id="启动-停止数据库"><a href="#启动-停止数据库" class="headerlink" title="启动/停止数据库"></a>启动/停止数据库</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttdaemonadmin -stop</span><br><span class="line">TimesTen Daemon stopped.</span><br><span class="line">[oracle@timesten-hol info]$ ttstatus</span><br><span class="line">ttStatus: Could not connect to the TimesTen daemon.</span><br><span class="line">If the TimesTen daemon is not running, please start it</span><br><span class="line">by running <span class="string">"ttDaemonAdmin -start"</span>.</span><br><span class="line">[oracle@timesten-hol info]$ ttdaemonadmin -start</span><br><span class="line">TimesTen Daemon startup OK.</span><br><span class="line">[oracle@timesten-hol info]$ ttstatus</span><br><span class="line">TimesTen status report as of Thu Sep 27 04:10:00 2018</span><br><span class="line"></span><br><span class="line">Daemon pid 6522 port 53392 instance tt1122</span><br><span class="line">TimesTen server pid 6531 started on port 53393</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">Accessible by group oracle</span><br><span class="line">End of report</span><br></pre></td></tr></table></figure><h3 id="创建TimesTen内存数据库"><a href="#创建TimesTen内存数据库" class="headerlink" title="创建TimesTen内存数据库"></a>创建TimesTen内存数据库</h3><blockquote><p>默认情况下，TimesTen内存数据库在第一次连接到数据库时创建并加载到内存中，并在关闭数据库的最后一个连接时从内存卸载。当然此行为可通过<code>ttadmin -RAMPolicy</code>修改，后面会说到。</p><p>也就是说，默认情况下（前提是RAM策略为<code>inUse</code>，下一节会讲到RAM策略的修改），每次在执行<code>connect “dsn=ttdb_name”</code>连接到一个特定的DSN时，都是一个创建TimesTen内存数据库、加载数据到内存中等过程，因此本节的标题是<code>创建</code>而不是<code>连接到</code>。</p></blockquote><h4 id="连接到特定DSN，创建内存数据库"><a href="#连接到特定DSN，创建内存数据库" class="headerlink" title="连接到特定DSN，创建内存数据库"></a>连接到特定DSN，创建内存数据库</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttisql</span><br><span class="line"></span><br><span class="line">Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Type ? or <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"exit"</span> to quit ttIsql.</span><br><span class="line"></span><br><span class="line">Command&gt; connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">(Default setting AutoCommit=1)</span><br></pre></td></tr></table></figure><p>或者直接在ttisql中指定DSN名称：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttisql <span class="string">"dsn=my_ttdb"</span></span><br><span class="line"></span><br><span class="line">Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Type ? or <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"exit"</span> to quit ttIsql.</span><br><span class="line"></span><br><span class="line">connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">(Default setting AutoCommit=1)</span><br><span class="line">[oracle@timesten-hol ~]$ ttisql my_ttdb</span><br><span class="line"></span><br><span class="line">Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Type ? or <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"exit"</span> to quit ttIsql.</span><br><span class="line"></span><br><span class="line">connect <span class="string">"DSN=my_ttdb"</span>;</span><br><span class="line">Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">(Default setting AutoCommit=1)</span><br></pre></td></tr></table></figure><blockquote><p><strong>问题：重复运行<code>connect “dsn=ttdb_name”</code>命令可以看到命令行中显示了多了连接，这是什么作用呢？</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; Command&gt; connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">&gt; Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">&gt; (Default setting AutoCommit=1)</span><br><span class="line">&gt; Command&gt; connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">&gt; Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">&gt; (Default setting AutoCommit=1)</span><br><span class="line">&gt; con1: Command&gt; connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">&gt; Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">&gt; (Default setting AutoCommit=1)</span><br><span class="line">&gt; con2: Command&gt; connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">&gt; Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">&gt; (Default setting AutoCommit=1)</span><br><span class="line">&gt; con3: Command&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="查看内存数据库的内存分配及容量"><a href="#查看内存数据库的内存分配及容量" class="headerlink" title="查看内存数据库的内存分配及容量"></a>查看内存数据库的内存分配及容量</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; dssize</span><br><span class="line"></span><br><span class="line">  PERM_ALLOCATED_SIZE:      40960</span><br><span class="line">  PERM_IN_USE_SIZE:         9453</span><br><span class="line">  PERM_IN_USE_HIGH_WATER:   9453</span><br><span class="line">  TEMP_ALLOCATED_SIZE:      32768</span><br><span class="line">  TEMP_IN_USE_SIZE:         9442</span><br><span class="line">  TEMP_IN_USE_HIGH_WATER:   9505</span><br></pre></td></tr></table></figure><h4 id="使用Host命令可以调用操作系统级别的指令"><a href="#使用Host命令可以调用操作系统级别的指令" class="headerlink" title="使用Host命令可以调用操作系统级别的指令"></a>使用Host命令可以调用操作系统级别的指令</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; host ttstatus;</span><br><span class="line">TimesTen status report as of Thu Sep 27 04:37:28 2018</span><br><span class="line"></span><br><span class="line">Daemon pid 6522 port 53392 instance tt1122</span><br><span class="line">TimesTen server pid 6531 started on port 53393</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">Data store /u01/ttdata/datastores/my_ttdb</span><br><span class="line">There are 12 connections to the data store</span><br><span class="line">Shared Memory KEY 0x1200c904 ID 2785297</span><br><span class="line">PL/SQL Memory KEY 0x1300c904 ID 2818066 Address 0x7fa0000000</span><br><span class="line">Type            PID     Context             Connection Name              ConnID</span><br><span class="line">Process         6973    0x0000000000c72c00  my_ttdb                           1</span><br><span class="line">Subdaemon       6529    0x00000000012d3360  Manager                         142</span><br><span class="line">Subdaemon       6529    0x000000000132a1e0  Rollback                        141</span><br><span class="line">Subdaemon       6529    0x000000000140b360  HistGC                          139</span><br><span class="line">Subdaemon       6529    0x0000000001420070  AsyncMV                         140</span><br><span class="line">Subdaemon       6529    0x00000000014b4e00  Log Marker                      136</span><br><span class="line">Subdaemon       6529    0x0000000001509a30  Deadlock Detector               135</span><br><span class="line">Subdaemon       6529    0x000000000151e620  Flusher                         134</span><br><span class="line">Subdaemon       6529    0x0000000001533210  Checkpoint                      133</span><br><span class="line">Subdaemon       6529    0x00000000016286b0  Monitor                         132</span><br><span class="line">Subdaemon       6529    0x00007f95880208e0  Aging                           138</span><br><span class="line">Subdaemon       6529    0x00007f958808f900  IndexGC                         137</span><br><span class="line">Replication policy  : Manual</span><br><span class="line">Cache Agent policy  : Manual</span><br><span class="line">PL/SQL enabled.</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">Accessible by group oracle</span><br><span class="line">End of report</span><br></pre></td></tr></table></figure><h3 id="修改RAM策略"><a href="#修改RAM策略" class="headerlink" title="修改RAM策略"></a>修改RAM策略</h3><blockquote><p>上一节讲到每一次的连接到特定的DSN都是新建一个内存数据库的过程，当然这是基于默认RAM策略为<code>inUse</code>的情况，下面会讲到当RAM策略设置为<code>Manual</code>时创建内存数据库的过程。</p><p><code>Manual</code>策略适用于当数据库中数据规模巨大，装载到内存中的时间可能很长，从而导致内存数据库效率低下；而<code>inUse</code>策略适用于大多数情况，数据规模不是很大，装载到内存中的时间很短或者说在业务需求中可以忽略不计。</p></blockquote><h4 id="查看当前RAM策略"><a href="#查看当前RAM策略" class="headerlink" title="查看当前RAM策略"></a>查看当前RAM策略</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttadmin my_ttdb</span><br><span class="line">RAM Residence Policy            : inUse</span><br><span class="line">Replication Agent Policy        : manual</span><br><span class="line">Replication Manually Started    : False</span><br><span class="line">Cache Agent Policy              : manual</span><br><span class="line">Cache Agent Manually Started    : False</span><br></pre></td></tr></table></figure><h4 id="修改RAM策略为手动模式（Manual）"><a href="#修改RAM策略为手动模式（Manual）" class="headerlink" title="修改RAM策略为手动模式（Manual）"></a>修改RAM策略为手动模式（Manual）</h4><blockquote><p>手动模式下，创建DSN连接时并不会将数据加载到内存中，需要手动进行数据装载和卸载</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttadmin -rampolicy manual my_ttdb</span><br><span class="line">RAM Residence Policy            : manual</span><br><span class="line">Manually Loaded In RAM          : False</span><br><span class="line">Replication Agent Policy        : manual</span><br><span class="line">Replication Manually Started    : False</span><br><span class="line">Cache Agent Policy              : manual</span><br><span class="line">Cache Agent Manually Started    : False</span><br><span class="line">[oracle@timesten-hol info]$ ttisql <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line"></span><br><span class="line">Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Type ? or <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"exit"</span> to quit ttIsql.</span><br><span class="line"></span><br><span class="line">connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">  707: Attempt to connect to a data store that has been manually unloaded from RAM</span><br><span class="line">The <span class="built_in">command</span> failed.</span><br><span class="line">Done.</span><br><span class="line">[oracle@timesten-hol info]$</span><br></pre></td></tr></table></figure><h4 id="向内存中装载数据"><a href="#向内存中装载数据" class="headerlink" title="向内存中装载数据"></a>向内存中装载数据</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttadmin -ramload my_ttdb</span><br><span class="line">RAM Residence Policy            : manual</span><br><span class="line">Manually Loaded In RAM          : True</span><br><span class="line">Replication Agent Policy        : manual</span><br><span class="line">Replication Manually Started    : False</span><br><span class="line">Cache Agent Policy              : manual</span><br><span class="line">Cache Agent Manually Started    : False</span><br><span class="line">[oracle@timesten-hol info]$ ttisql <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line"></span><br><span class="line">Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Type ? or <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"exit"</span> to quit ttIsql.</span><br><span class="line"></span><br><span class="line">connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">Connection successful: DSN=my_ttdb;UID=oracle;DataStore=/u02/ttdata/datastores/my_ttdb;DatabaseCharacterSet=AL32UTF8;ConnectionCharacterSet=US7ASCII;DRIVER=/home/oracle/TimesTen/tt1122/lib/libtten.so;LogDir=/u03/ttdata/logs;PermSize=40;TempSize=32;TypeMode=0;</span><br><span class="line">(Default setting AutoCommit=1)</span><br><span class="line">Command&gt;</span><br></pre></td></tr></table></figure><h4 id="从内存中卸载数据"><a href="#从内存中卸载数据" class="headerlink" title="从内存中卸载数据"></a>从内存中卸载数据</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[oracle@timesten-hol info]$ ttadmin -ramunload my_ttdb</span><br><span class="line">RAM Residence Policy            : manual</span><br><span class="line">Manually Loaded In RAM          : False</span><br><span class="line">Replication Agent Policy        : manual</span><br><span class="line">Replication Manually Started    : False</span><br><span class="line">Cache Agent Policy              : manual</span><br><span class="line">Cache Agent Manually Started    : False</span><br><span class="line">[oracle@timesten-hol info]$ ttisql <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line"></span><br><span class="line">Copyright (c) 1996, 2014, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Type ? or <span class="string">"help"</span> <span class="keyword">for</span> <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"exit"</span> to quit ttIsql.</span><br><span class="line"></span><br><span class="line">connect <span class="string">"dsn=my_ttdb"</span>;</span><br><span class="line">  707: Attempt to connect to a data store that has been manually unloaded from RAM</span><br><span class="line">The <span class="built_in">command</span> failed.</span><br><span class="line">Done.</span><br><span class="line">[oracle@timesten-hol info]$</span><br></pre></td></tr></table></figure><h3 id="日志和检查点"><a href="#日志和检查点" class="headerlink" title="日志和检查点"></a>日志和检查点</h3><h4 id="查看日志文件，提交之前会预写日志"><a href="#查看日志文件，提交之前会预写日志" class="headerlink" title="查看日志文件，提交之前会预写日志"></a>查看日志文件，<strong><u>提交之前会预写日志</u></strong></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; host ls -al /u03/ttdata/logs/my*</span><br><span class="line">-rw-rw---- 1 oracle oracle 18270208 Sep 28 23:00 /u03/ttdata/logs/my_ttdb.log4</span><br><span class="line">-rw-rw---- 1 oracle oracle 67108864 Sep 27 04:18 /u03/ttdata/logs/my_ttdb.res0</span><br><span class="line">-rw-rw---- 1 oracle oracle 67108864 Sep 27 04:18 /u03/ttdata/logs/my_ttdb.res1</span><br><span class="line">-rw-rw---- 1 oracle oracle 67108864 Sep 27 04:18 /u03/ttdata/logs/my_ttdb.res2</span><br></pre></td></tr></table></figure><h4 id="查看检查点"><a href="#查看检查点" class="headerlink" title="查看检查点"></a>查看检查点</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; host ls -al /u02/ttdata/datastores/my*</span><br><span class="line">-rw-rw---- 1 oracle oracle 31906840 Sep 28 23:00 /u02/ttdata/datastores/my_ttdb.ds0</span><br><span class="line">-rw-rw---- 1 oracle oracle 31906840 Sep 28 22:57 /u02/ttdata/datastores/my_ttdb.ds1</span><br></pre></td></tr></table></figure><h4 id="手动更新检查点文件"><a href="#手动更新检查点文件" class="headerlink" title="手动更新检查点文件"></a>手动更新检查点文件</h4><blockquote><p>非手动状态下检查点会每间隔一段时间执行一次，会将自上次检查点后提交的事务更新到检查点中；检查点文件是非阻塞的，即更新检查点文件时也可执行事务。</p><p>如下调用检查点文件：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; call ttckpt;</span><br><span class="line">Command&gt; call ttckpt;</span><br></pre></td></tr></table></figure><h3 id="ttisql基本命令——用户操作"><a href="#ttisql基本命令——用户操作" class="headerlink" title="ttisql基本命令——用户操作"></a>ttisql基本命令——用户操作</h3><h4 id="创建用户，可在表sys-all-users中查找所有的用户信息"><a href="#创建用户，可在表sys-all-users中查找所有的用户信息" class="headerlink" title="创建用户，可在表sys.all_users中查找所有的用户信息"></a>创建用户，可在表<code>sys.all_users</code>中查找所有的用户信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; select * from sys.all_users;</span><br><span class="line">&lt; SYS, 0, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; TTREP, 2, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; SYSTEM, 3, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; GRID, 4, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; ORACLE, 10, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; SCOTT, 11, 2018-09-27 05:06:39.267433 &gt;</span><br><span class="line">6 rows found.</span><br><span class="line">Command&gt; create user tthr identified by tthr;</span><br><span class="line"></span><br><span class="line">User created.</span><br><span class="line"></span><br><span class="line">Command&gt; select * from sys.all_users;</span><br><span class="line">&lt; SYS, 0, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; TTREP, 2, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; SYSTEM, 3, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; GRID, 4, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; ORACLE, 10, 2018-09-27 04:18:18.063030 &gt;</span><br><span class="line">&lt; SCOTT, 11, 2018-09-27 05:06:39.267433 &gt;</span><br><span class="line">&lt; TTHR, 12, 2018-09-28 23:11:57.126074 &gt;</span><br><span class="line">7 rows found.</span><br></pre></td></tr></table></figure><h4 id="给用户分配权限"><a href="#给用户分配权限" class="headerlink" title="给用户分配权限"></a>给用户分配权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; grant create session to tthr;</span><br><span class="line">Command&gt; grant create table to tthr;</span><br><span class="line">Command&gt; grant create view to tthr;</span><br><span class="line">Command&gt; grant create sequence to tthr;</span><br></pre></td></tr></table></figure><h4 id="查看当前数据库系统内用户权限"><a href="#查看当前数据库系统内用户权限" class="headerlink" title="查看当前数据库系统内用户权限"></a>查看当前数据库系统内用户权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; select * from sys.dba_sys_privs;</span><br><span class="line">&lt; SYS, ADMIN, YES &gt;</span><br><span class="line">&lt; SYSTEM, ADMIN, YES &gt;</span><br><span class="line">&lt; ORACLE, ADMIN, YES &gt;</span><br><span class="line">&lt; SCOTT, CREATE SESSION, NO &gt;</span><br><span class="line">&lt; SCOTT, CREATE TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE SESSION, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE VIEW, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE SEQUENCE, NO &gt;</span><br><span class="line">9 rows found.</span><br></pre></td></tr></table></figure><h4 id="撤回用户权限"><a href="#撤回用户权限" class="headerlink" title="撤回用户权限"></a>撤回用户权限</h4><blockquote><p>以下示例展示了如何从用户撤回权限（赋予<code>delete any table</code>权限后再撤回该权限）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; grant delete any table to tthr;</span><br><span class="line">Command&gt; select * from sys.dba_sys_privs;</span><br><span class="line">&lt; SYS, ADMIN, YES &gt;</span><br><span class="line">&lt; SYSTEM, ADMIN, YES &gt;</span><br><span class="line">&lt; ORACLE, ADMIN, YES &gt;</span><br><span class="line">&lt; SCOTT, CREATE SESSION, NO &gt;</span><br><span class="line">&lt; SCOTT, CREATE TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE SESSION, NO &gt;</span><br><span class="line">&lt; TTHR, DELETE ANY TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE VIEW, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE SEQUENCE, NO &gt;</span><br><span class="line">10 rows found.</span><br><span class="line">Command&gt; revoke delete any table from tthr;</span><br><span class="line">Command&gt; select * from sys.dba_sys_privs;</span><br><span class="line">&lt; SYS, ADMIN, YES &gt;</span><br><span class="line">&lt; SYSTEM, ADMIN, YES &gt;</span><br><span class="line">&lt; ORACLE, ADMIN, YES &gt;</span><br><span class="line">&lt; SCOTT, CREATE SESSION, NO &gt;</span><br><span class="line">&lt; SCOTT, CREATE TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE SESSION, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE TABLE, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE VIEW, NO &gt;</span><br><span class="line">&lt; TTHR, CREATE SEQUENCE, NO &gt;</span><br><span class="line">9 rows found.</span><br></pre></td></tr></table></figure><h3 id="ttisql基本命令——数据库对象操作"><a href="#ttisql基本命令——数据库对象操作" class="headerlink" title="ttisql基本命令——数据库对象操作"></a>ttisql基本命令——数据库对象操作</h3><h4 id="关闭自动提交"><a href="#关闭自动提交" class="headerlink" title="关闭自动提交"></a>关闭自动提交</h4><blockquote><p>意即每次执行事务后，均需要执行<code>commit</code>以提交事务。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; autocommit off;</span><br></pre></td></tr></table></figure><h4 id="建表、插入数据"><a href="#建表、插入数据" class="headerlink" title="建表、插入数据"></a>建表、插入数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Command&gt; create table ttemployees</span><br><span class="line">       &gt; (employee_id NUMBER(6) NOT NULL,</span><br><span class="line">       &gt; last_name VARCHAR2(10) NOT NULL, hire_date DATE, performance_report CLOB,</span><br><span class="line">       &gt; PRIMARY KEY (employee_id) )</span><br><span class="line">       &gt; UNIQUE HASH ON (employee_id) PAGES = 1;</span><br><span class="line">Command&gt; insert into ttemployees values (1, &apos;Smith&apos;, &apos;2009-02-23&apos;, &apos;excellent&apos;); </span><br><span class="line">1 row inserted.</span><br><span class="line">Command&gt; insert into ttemployees values (2, &apos;King&apos;, &apos;2005-08-05&apos;, &apos;great&apos;);</span><br><span class="line">1 row inserted.</span><br><span class="line">Command&gt; insert into ttemployees values (3, &apos;Taylor&apos;, &apos;2012-01-28&apos;, EMPTY_CLOB());</span><br><span class="line">1 row inserted.</span><br><span class="line">Command&gt; commit;</span><br></pre></td></tr></table></figure><h4 id="一些命令总结"><a href="#一些命令总结" class="headerlink" title="一些命令总结"></a>一些命令总结</h4><blockquote><ul><li>tables and alltables - Lists tables</li><li>indexes and allindexes - Lists indexes</li><li>views and allviews - Lists views</li><li>sequences and allsequences - Lists sequences</li><li>synonyms and allsynonyms - Lists synonyms</li><li>functions and allfunctions - Lists PL/SQL functions</li><li>procedures and allprocedures - Lists PL/SQL procedures</li><li>packages and allpackages - Lists PL/SQL packages</li></ul></blockquote><h3 id="PLSQL编程"><a href="#PLSQL编程" class="headerlink" title="PLSQL编程"></a>PLSQL编程</h3><h4 id="创建plsqldb、pls用户、运行sql脚本"><a href="#创建plsqldb、pls用户、运行sql脚本" class="headerlink" title="创建plsqldb、pls用户、运行sql脚本"></a>创建plsqldb、pls用户、运行sql脚本</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> ttOptUpdateStats;</span><br><span class="line">// 更新统计数据，用于分析生成最优执行计划</span><br></pre></td></tr></table></figure><h4 id="使用sql-developer连接TimesTen和Oracle"><a href="#使用sql-developer连接TimesTen和Oracle" class="headerlink" title="使用sql developer连接TimesTen和Oracle"></a>使用sql developer连接TimesTen和Oracle</h4><p>配置如下：</p><p><img src="/img/image-20181018140355729.png" alt="TimesTen数据库连接配置"></p><p><img src="/img/image-20181018140412582.png" alt="Oracle数据库连接配置"></p><h4 id="plsql语法"><a href="#plsql语法" class="headerlink" title="plsql语法"></a>plsql语法</h4><blockquote><h2 id="What-Is-a-PL-SQL-Package"><a href="#What-Is-a-PL-SQL-Package" class="headerlink" title="What Is a PL/SQL Package?"></a>What Is a PL/SQL Package?</h2><p>A <strong>package</strong> is a schema object that groups logically related PL/SQL types, items, and subprograms. Packages usually have two parts, a specification and a body, although sometimes the body is unnecessary. The <strong>specification</strong> (<strong>spec</strong> for short) is the interface to your applications; it declares the types, variables, constants, exceptions, cursors, and subprograms available for use. The <strong>body</strong> fully defines cursors and subprograms, and so implements the spec.</p><p><code>包</code>是一个模式对象，它对逻辑上相关的PL/SQL类型、项和子程序进行分组。包通常有两个部分，<code>规范</code>和<code>主体</code>，主体不是必要的。<code>规范</code>是应用程序的接口：它声明可用的类型、变量、常量、异常、游标和子程序。<code>主体</code>将完全定义游标和子程序，以此实现<code>规范</code>。</p><p>As <a href="https://docs.oracle.com/cd/B10501_01/appdev.920/a96624/09_packs.htm#5871" target="_blank" rel="noopener">Figure 9-1</a> shows, you can think of the spec as an operational interface and of the body as a “black box.” You can debug, enhance, or replace a package body without changing the interface (package spec) to the package.</p><p><img src="/img/image-20181018143452887.png" alt="包"></p><p>——<a href="https://docs.oracle.com/cd/B10501_01/appdev.920/a96624/09_packs.htm#362" target="_blank" rel="noopener">Oracle PL/SQL Package文档</a></p></blockquote><p><code>1_package.sql:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE PACKAGE test AS</span><br><span class="line"></span><br><span class="line">  -- Declare a record for the desired EMP fields</span><br><span class="line">  TYPE empRecType IS RECORD (</span><br><span class="line">    r_empno  EMP.EMPNO%TYPE,</span><br><span class="line">      -- 使用EMP表中EMPNO的类型</span><br><span class="line">    r_ename  EMP.ENAME%TYPE,</span><br><span class="line">    r_salary EMP.SAL%TYPE</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  -- Declare a Ref Cursor type</span><br><span class="line">  TYPE EmpCurType IS REF CURSOR RETURN empRecType; -- 游标类型需要有返回值</span><br><span class="line"></span><br><span class="line">  -- A parameterized cursor，定义</span><br><span class="line">  -- 游标</span><br><span class="line">  CURSOR low_paid (num PLS_INTEGER) IS</span><br><span class="line">    SELECT empno </span><br><span class="line">      FROM emp</span><br><span class="line">      WHERE rownum &lt;= num</span><br><span class="line">      ORDER BY sal ASC;</span><br><span class="line">-- 过程(IN表示输入，OUT表示输出)</span><br><span class="line">  PROCEDURE ddl_dml</span><br><span class="line">    (myComment IN  VARCHAR2,</span><br><span class="line">     errCode   OUT PLS_INTEGER, -- 整型</span><br><span class="line">     errText   OUT VARCHAR2); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  PROCEDURE givePayRise</span><br><span class="line">    (num       IN  PLS_INTEGER,</span><br><span class="line">     name      OUT EMP.ENAME%TYPE, </span><br><span class="line">     -- name是plsql中的保留字，应该尽量避免使用保留字</span><br><span class="line">     errCode   OUT PLS_INTEGER,</span><br><span class="line">     errText   OUT VARCHAR2); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  PROCEDURE getCommEmps</span><br><span class="line">    (empRefCur IN OUT EmpCurType,</span><br><span class="line">     errCode   OUT PLS_INTEGER,</span><br><span class="line">     errText   OUT VARCHAR2); </span><br><span class="line"></span><br><span class="line">  -- Associative array</span><br><span class="line">  TYPE sum_multiples IS TABLE OF PLS_INTEGER -- Associative array type</span><br><span class="line">  INDEX BY PLS_INTEGER; -- indexed by pls_integer</span><br><span class="line">  </span><br><span class="line">  FUNCTION get_sum_multiples</span><br><span class="line">   ( multiple IN PLS_INTEGER,</span><br><span class="line">     num      IN PLS_INTEGER</span><br><span class="line">   ) RETURN sum_multiples;</span><br><span class="line"></span><br><span class="line">END test;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE OR REPLACE PACKAGE BODY test AS</span><br><span class="line"></span><br><span class="line">  PROCEDURE ddl_dml</span><br><span class="line">    (myComment IN  VARCHAR2,</span><br><span class="line">     errCode   OUT PLS_INTEGER,</span><br><span class="line">     errText   OUT VARCHAR2) IS</span><br><span class="line"></span><br><span class="line">    sql_str                    VARCHAR2(256);</span><br><span class="line">    name_already_exists        EXCEPTION;</span><br><span class="line">    insufficient_privileges    EXCEPTION;</span><br><span class="line">    PRAGMA EXCEPTION_INIT(name_already_exists,     -0955);</span><br><span class="line">    PRAGMA EXCEPTION_INIT(insufficient_privileges, -1031);</span><br><span class="line">    seq_value                  number;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  BEGIN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    BEGIN</span><br><span class="line">      sql_str := &apos;create table foo (COL1 VARCHAR2 (20),COL2 NVARCHAR2 (60))&apos;;</span><br><span class="line">      DBMS_OUTPUT.PUT_LINE(sql_str);</span><br><span class="line">      execute immediate sql_str;</span><br><span class="line">    EXCEPTION</span><br><span class="line">      WHEN name_already_exists THEN</span><br><span class="line">        DBMS_OUTPUT.PUT_LINE(&apos;  Ignore existing table errors&apos;);</span><br><span class="line">      WHEN insufficient_privileges THEN</span><br><span class="line">        DBMS_OUTPUT.PUT_LINE(&apos;  Ignore insufficient privileges errors&apos;);</span><br><span class="line">    END;</span><br><span class="line"></span><br><span class="line">    -- Cast num_col1 and char_col values</span><br><span class="line">    insert into temp values (1, 1, myComment);</span><br><span class="line"></span><br><span class="line">    commit;</span><br><span class="line"></span><br><span class="line">    errCode := 0;</span><br><span class="line">    errtext := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">  EXCEPTION</span><br><span class="line">  </span><br><span class="line">    WHEN name_already_exists THEN</span><br><span class="line"></span><br><span class="line">      errCode := 0;</span><br><span class="line">      errtext := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line"></span><br><span class="line">      errCode  := SQLCODE;</span><br><span class="line">      errText  := SUBSTR(SQLERRM, 1, 200);</span><br><span class="line"></span><br><span class="line">  END ddl_dml;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  PROCEDURE givePayRise</span><br><span class="line">    (num       IN  PLS_INTEGER,</span><br><span class="line">     name      OUT EMP.ENAME%TYPE,</span><br><span class="line">     errCode   OUT PLS_INTEGER,</span><br><span class="line">     errText   OUT VARCHAR2) IS</span><br><span class="line"></span><br><span class="line">   -- Can use PLSQL collections within TimesTen PLSQL</span><br><span class="line">   TYPE lowest_paid_type IS TABLE OF emp.empno%TYPE;</span><br><span class="line">   lowest_paid lowest_paid_type;</span><br><span class="line"></span><br><span class="line">   i           PLS_INTEGER; </span><br><span class="line">   numRows     PLS_INTEGER;</span><br><span class="line">   lucky_index PLS_INTEGER; </span><br><span class="line">   lucky_emp   EMP.EMPNO%TYPE; </span><br><span class="line"></span><br><span class="line">  BEGIN</span><br><span class="line"></span><br><span class="line">    -- Initialize the output variable</span><br><span class="line">    name := &apos;Nobody&apos;;</span><br><span class="line"></span><br><span class="line">    -- Initialize the collection</span><br><span class="line">    lowest_paid := lowest_paid_type(0, 1, 2, 3, 4, 5, 6, 7, 8, 9);</span><br><span class="line">    i := 1;</span><br><span class="line">    </span><br><span class="line">    -- Constrain the resultset size</span><br><span class="line">    IF num &lt; 1 OR num &gt; 10 THEN</span><br><span class="line"></span><br><span class="line">      -- If bad inputs, default to 5 rows</span><br><span class="line">      numRows := 5;</span><br><span class="line">    ELSE</span><br><span class="line">      numRows := num;</span><br><span class="line">    END IF;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- Create the cursor resultset with up to &apos;numRows&apos; rows</span><br><span class="line">    OPEN low_paid( numRows );</span><br><span class="line"></span><br><span class="line">    LOOP</span><br><span class="line"></span><br><span class="line">      -- Get the current empid</span><br><span class="line">      FETCH low_paid INTO lowest_paid(i);</span><br><span class="line"></span><br><span class="line">      EXIT WHEN low_paid%NOTFOUND;</span><br><span class="line"></span><br><span class="line">      -- Increment the PLSQL table index</span><br><span class="line">      i := i + 1;</span><br><span class="line"></span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    -- Close the cursor</span><br><span class="line">    CLOSE low_paid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- List the subset of lowest paid employees</span><br><span class="line">    FOR j in lowest_paid.FIRST .. numRows LOOP</span><br><span class="line">      DBMS_OUTPUT.PUT_LINE(&apos;  Lowest paid empno &apos; || j || &apos; is &apos; || lowest_paid(j) );</span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    -- Randomly choose one of the lowest paid employees for a 10% pay raise.</span><br><span class="line">    lucky_index := trunc(dbms_random.value(lowest_paid.FIRST, numRows)); </span><br><span class="line">    lucky_emp := lowest_paid(lucky_index);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- Give lucky_emp a 10% pay raise and return their name</span><br><span class="line">    UPDATE emp</span><br><span class="line">      SET sal = sal * 1.1</span><br><span class="line">      WHERE empno = lucky_emp</span><br><span class="line">      RETURNING ename INTO name;</span><br><span class="line"></span><br><span class="line">    COMMIT;</span><br><span class="line"></span><br><span class="line">    errCode := 0;</span><br><span class="line">    errtext := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">  EXCEPTION</span><br><span class="line">  </span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line"></span><br><span class="line">      errCode  := SQLCODE;</span><br><span class="line">      errText  := SUBSTR(SQLERRM, 1, 200);</span><br><span class="line"></span><br><span class="line">  END givePayRise;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  PROCEDURE getCommEmps</span><br><span class="line">    (empRefCur IN OUT EmpCurType,</span><br><span class="line">     errCode   OUT PLS_INTEGER,</span><br><span class="line">     errText   OUT VARCHAR2) IS</span><br><span class="line"></span><br><span class="line">    salesGuy empRecType;</span><br><span class="line"></span><br><span class="line">  BEGIN </span><br><span class="line"></span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(&apos; &apos;);</span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(&apos;Displaying the refcursor for the sales people&apos;);</span><br><span class="line"></span><br><span class="line">    -- The refcursor (empRefCur) result was opened before calling this procedure</span><br><span class="line">    LOOP</span><br><span class="line">      FETCH empRefCur INTO salesGuy;</span><br><span class="line">      EXIT WHEN empRefCur%NOTFOUND;</span><br><span class="line"></span><br><span class="line">      DBMS_OUTPUT.PUT_LINE(salesGuy.r_ename);</span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    CLOSE empRefCur;</span><br><span class="line"></span><br><span class="line">    errCode := 0;</span><br><span class="line">    errtext := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">  EXCEPTION</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line"></span><br><span class="line">      errCode  := SQLCODE;</span><br><span class="line">      errText  := SUBSTR(SQLERRM, 1, 200);</span><br><span class="line"></span><br><span class="line">  END getCommEmps;</span><br><span class="line"></span><br><span class="line">  FUNCTION get_sum_multiples</span><br><span class="line">   ( multiple IN PLS_INTEGER,</span><br><span class="line">     num      IN PLS_INTEGER</span><br><span class="line">   ) RETURN sum_multiples</span><br><span class="line">   IS</span><br><span class="line">     s sum_multiples;</span><br><span class="line">  BEGIN</span><br><span class="line">    FOR i in 1..num LOOP</span><br><span class="line">      s(i) := multiple * ((i * (i + 1)) / 2); -- sum of the multiples</span><br><span class="line">    END LOOP;</span><br><span class="line">    RETURN s;</span><br><span class="line">  END get_sum_multiples;</span><br><span class="line"></span><br><span class="line">BEGIN  -- package initialization goes here</span><br><span class="line">  DBMS_OUTPUT.PUT_LINE(&apos;Initialized package test&apos;);</span><br><span class="line">END test;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p><code>2_call_package.sql:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">set serveroutput on;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  errCode      PLS_INTEGER;</span><br><span class="line">  errtext      VARCHAR2(256);</span><br><span class="line">  myRefCur     test.EmpCurType; -- 使用test包中定义的类型</span><br><span class="line">  salesPerson  test.empRecType;</span><br><span class="line">  name         EMP.ENAME%TYPE;</span><br><span class="line">  n           PLS_INTEGER := 5; -- number of multiples to sum for display</span><br><span class="line">  sn          PLS_INTEGER := 10; -- number of multiples to sum</span><br><span class="line">  m           PLS_INTEGER := 3; -- multiple</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">    dbms_output.put_line(&apos; &apos;);</span><br><span class="line">    dbms_output.put_line(&apos; &apos;);</span><br><span class="line">    dbms_output.put_line(&apos; &apos;);</span><br><span class="line">    dbms_output.put_line(&apos;Find some of the lowest paid employees and give a random employee a 10% pay raise&apos;);</span><br><span class="line">    -- Give a lowely paid random employee a 10% pay raise</span><br><span class="line">    test.givePayRise(5, name, errCode, errText);</span><br><span class="line">    if errCode != 0 then</span><br><span class="line">      dbms_output.put_line(&apos;Error code = &apos; || errCode || &apos; Error Text = &apos; || errtext);</span><br><span class="line">    else</span><br><span class="line">      dbms_output.put_line(name || &apos; got the 10% payraise&apos;);</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    -- Open a refcursor</span><br><span class="line">    OPEN myRefCur FOR</span><br><span class="line">      SELECT empno, ename, sal</span><br><span class="line">      FROM emp</span><br><span class="line">      WHERE comm IS NOT NULL;</span><br><span class="line"></span><br><span class="line">    -- display the resultset of the refcursor</span><br><span class="line">    test.getCommEmps(myRefCur, errCode, errText);</span><br><span class="line">    if errCode != 0 then</span><br><span class="line">      dbms_output.put_line(&apos;Error code = &apos; || errCode || &apos; Error Text = &apos; || errtext);</span><br><span class="line">    end if;</span><br><span class="line"></span><br><span class="line">    dbms_output.put_line(&apos; &apos;);</span><br><span class="line">    dbms_output.put_line(&apos;Do some DDL and DML in a stored procedure&apos;);</span><br><span class="line">    test.ddl_dml(&apos;hi&apos;, errCode, errText);</span><br><span class="line">    if errCode != 0 then</span><br><span class="line">      dbms_output.put_line(&apos;Error code = &apos; || errCode || &apos; Error Text = &apos; || errtext);</span><br><span class="line">    end if;</span><br><span class="line">    </span><br><span class="line">    -- associative arrays</span><br><span class="line">    dbms_output.put_line(&apos; &apos;);</span><br><span class="line">    dbms_output.put_line(&apos;Use an associative array to compute the sum of multiples&apos;);</span><br><span class="line">    dbms_output.put_line(</span><br><span class="line">      &apos;Sum of the first &apos; || TO_CHAR(n) || &apos; multiples of &apos; || TO_CHAR(m) </span><br><span class="line">       || &apos; is &apos; ||  TO_CHAR(test.get_sum_multiples (m, sn)(n)));</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p><code>3_create_package_workload.sql:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE PACKAGE workload AS</span><br><span class="line"></span><br><span class="line">  PROCEDURE oltp_read_only (</span><br><span class="line">    v_id      IN  PLS_INTEGER,</span><br><span class="line">    v_n       IN  PLS_INTEGER,</span><br><span class="line">    v_m       IN  PLS_INTEGER,</span><br><span class="line">    errCode   OUT PLS_INTEGER,</span><br><span class="line">    errText   OUT VARCHAR2);</span><br><span class="line"></span><br><span class="line">  PROCEDURE oltp_read_write (</span><br><span class="line">    v_id      IN  PLS_INTEGER,</span><br><span class="line">    v_n       IN  PLS_INTEGER,</span><br><span class="line">    v_m       IN  PLS_INTEGER,</span><br><span class="line">    v_c       IN  CHAR,</span><br><span class="line">    v_p       IN  VARCHAR2,</span><br><span class="line">    errCode   OUT PLS_INTEGER,</span><br><span class="line">    errText   OUT VARCHAR2);</span><br><span class="line"></span><br><span class="line">END workload;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE OR REPLACE PACKAGE BODY workload AS</span><br><span class="line"></span><br><span class="line">  -- Private package variables used for package initialization</span><br><span class="line">  theErrCode PLS_INTEGER   := 0;</span><br><span class="line">  theErrText VARCHAR2(256) := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">  -- Using shared package cursors for efficiency</span><br><span class="line">  CURSOR range_query (n PLS_INTEGER, m PLS_INTEGER) IS</span><br><span class="line">     SELECT c </span><br><span class="line">       FROM sbtest </span><br><span class="line">       WHERE id BETWEEN n AND m;</span><br><span class="line"></span><br><span class="line">  CURSOR range_order_query (n PLS_INTEGER, m PLS_INTEGER) IS</span><br><span class="line">     SELECT c </span><br><span class="line">       FROM sbtest </span><br><span class="line">       WHERE id BETWEEN n AND m</span><br><span class="line">       ORDER BY c;</span><br><span class="line"></span><br><span class="line">  CURSOR range_distinct_query (n PLS_INTEGER, m PLS_INTEGER) IS</span><br><span class="line">     SELECT DISTINCT c </span><br><span class="line">       FROM sbtest </span><br><span class="line">       WHERE id BETWEEN n AND m</span><br><span class="line">       ORDER BY c;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  -- The workload read only workload</span><br><span class="line">  PROCEDURE oltp_read_only (</span><br><span class="line">    v_id      IN  PLS_INTEGER,</span><br><span class="line">    v_n       IN  PLS_INTEGER,</span><br><span class="line">    v_m       IN  PLS_INTEGER,</span><br><span class="line">    errCode   OUT PLS_INTEGER,</span><br><span class="line">    errText   OUT VARCHAR2) IS</span><br><span class="line"></span><br><span class="line">    -- Store the result of the column &apos;c&apos;</span><br><span class="line">    cValue  char(120);</span><br><span class="line"></span><br><span class="line">    -- Store the sum of the rows in (n..m)</span><br><span class="line">    sumK    number(38,0);</span><br><span class="line"></span><br><span class="line">  BEGIN</span><br><span class="line"></span><br><span class="line">    errCode := 0;</span><br><span class="line">    errtext := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">    -- oltp point query</span><br><span class="line">    FOR i in 1 .. 10 LOOP</span><br><span class="line"></span><br><span class="line">      -- DBMS_OUTPUT.PUT_LINE(&apos;oltp point query&apos;);</span><br><span class="line">      SELECT c INTO cValue FROM sbtest WHERE id = v_id;</span><br><span class="line">      -- DBMS_OUTPUT.PUT_LINE(&apos;c = &apos; || cValue);</span><br><span class="line"></span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    -- oltp range query (using a cursor for loop)</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range query&apos;);</span><br><span class="line">    FOR range_rows IN range_query(v_n, v_m)</span><br><span class="line">    LOOP</span><br><span class="line">--      DBMS_OUTPUT.PUT_LINE(range_query%ROWCOUNT || &apos; c = &apos; || range_rows.c);</span><br><span class="line">      null;</span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    -- olpt range SUM() query</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range SUM() query&apos;);</span><br><span class="line">    SELECT sum(k) INTO sumK FROM sbtest WHERE id BETWEEN v_n AND v_m;</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;sumK = &apos; || sumK);</span><br><span class="line"></span><br><span class="line">    -- oltp range ORDER BY query (using explicit fetches)</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range ORDER BY query&apos;);</span><br><span class="line">    OPEN range_order_query(v_n, v_m);</span><br><span class="line">    LOOP</span><br><span class="line">      FETCH range_order_query INTO cValue;</span><br><span class="line">      EXIT WHEN range_order_query%NOTFOUND;</span><br><span class="line">--      DBMS_OUTPUT.PUT_LINE(&apos;c = &apos; || cValue);</span><br><span class="line">    END LOOP;</span><br><span class="line">    CLOSE range_order_query;</span><br><span class="line"></span><br><span class="line">    -- oltp range DISTINCT query</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range DISTINCT query&apos;);</span><br><span class="line">    OPEN range_distinct_query(v_n, v_m);</span><br><span class="line">    LOOP</span><br><span class="line">      FETCH range_distinct_query INTO cValue;</span><br><span class="line">      EXIT WHEN range_distinct_query%NOTFOUND;</span><br><span class="line">--      DBMS_OUTPUT.PUT_LINE(&apos;c = &apos; || cValue);</span><br><span class="line">    END LOOP;</span><br><span class="line">    CLOSE range_distinct_query;</span><br><span class="line"></span><br><span class="line">  EXCEPTION</span><br><span class="line"></span><br><span class="line">    WHEN NO_DATA_FOUND THEN</span><br><span class="line"></span><br><span class="line">      errCode  := 0;</span><br><span class="line">      errText  := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line"></span><br><span class="line">      errCode  := SQLCODE;</span><br><span class="line">      errText  := SUBSTR(SQLERRM, 1, 200);</span><br><span class="line"></span><br><span class="line">  END oltp_read_only;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  -- The workload read + write workload</span><br><span class="line">  PROCEDURE oltp_read_write (</span><br><span class="line">    v_id      IN  PLS_INTEGER,</span><br><span class="line">    v_n       IN  PLS_INTEGER,</span><br><span class="line">    v_m       IN  PLS_INTEGER,</span><br><span class="line">    v_c       IN  CHAR,</span><br><span class="line">    v_p       IN  VARCHAR2,</span><br><span class="line">    errCode   OUT PLS_INTEGER,</span><br><span class="line">    errText   OUT VARCHAR2) IS</span><br><span class="line"></span><br><span class="line">    -- Store the result of the column &apos;c&apos;</span><br><span class="line">    cValue  char(120);</span><br><span class="line"></span><br><span class="line">    -- Store the sum of the rows in (n..m)</span><br><span class="line">    sumK    number(38,0);</span><br><span class="line"></span><br><span class="line">  BEGIN</span><br><span class="line"></span><br><span class="line">    errCode := 0;</span><br><span class="line">    errtext := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">    -- oltp point query</span><br><span class="line">    FOR i in 1 .. 10 LOOP</span><br><span class="line"></span><br><span class="line">      -- DBMS_OUTPUT.PUT_LINE(&apos;oltp point query&apos;);</span><br><span class="line">      SELECT c INTO cValue FROM sbtest WHERE id = v_id;</span><br><span class="line">      -- DBMS_OUTPUT.PUT_LINE(&apos;c = &apos; || cValue);</span><br><span class="line"></span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    -- oltp range query (using a cursor for loop)</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range query&apos;);</span><br><span class="line">    FOR range_rows IN range_query(v_n, v_m)</span><br><span class="line">    LOOP</span><br><span class="line">--      DBMS_OUTPUT.PUT_LINE(range_query%ROWCOUNT || &apos; c = &apos; || range_rows.c);</span><br><span class="line">      null;</span><br><span class="line">    END LOOP;</span><br><span class="line"></span><br><span class="line">    -- olpt range SUM() query</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range SUM() query&apos;);</span><br><span class="line">    SELECT sum(k) INTO sumK FROM sbtest WHERE id BETWEEN v_n AND v_m;</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;sumK = &apos; || sumK);</span><br><span class="line"></span><br><span class="line">    -- oltp range ORDER BY query (using explict fetches)</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range ORDER BY query&apos;);</span><br><span class="line">    OPEN range_order_query(v_n, v_m);</span><br><span class="line">    LOOP</span><br><span class="line">      FETCH range_order_query INTO cValue;</span><br><span class="line">      EXIT WHEN range_order_query%NOTFOUND;</span><br><span class="line">--      DBMS_OUTPUT.PUT_LINE(&apos;c = &apos; || cValue);</span><br><span class="line">    END LOOP;</span><br><span class="line">    CLOSE range_order_query;</span><br><span class="line"></span><br><span class="line">    -- oltp range DISTINCT query</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp range DISTINCT query&apos;);</span><br><span class="line">    OPEN range_distinct_query(v_n, v_m);</span><br><span class="line">    LOOP</span><br><span class="line">      FETCH range_distinct_query INTO cValue;</span><br><span class="line">      EXIT WHEN range_distinct_query%NOTFOUND;</span><br><span class="line">--      DBMS_OUTPUT.PUT_LINE(&apos;c = &apos; || cValue);</span><br><span class="line">    END LOOP;</span><br><span class="line">    CLOSE range_distinct_query;</span><br><span class="line"></span><br><span class="line">    -- oltp UPDATES on index column</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp UPDATES on index column&apos;);</span><br><span class="line">    UPDATE sbtest </span><br><span class="line">      SET k = k + 1 </span><br><span class="line">      WHERE id = v_n;</span><br><span class="line"></span><br><span class="line">    -- oltp UPDATES on non-index column</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp UPDATES on non-index column&apos;);</span><br><span class="line">    UPDATE sbtest </span><br><span class="line">      SET c =  v_n</span><br><span class="line">      WHERE id = v_m; </span><br><span class="line"></span><br><span class="line">    -- oltp DELETE query</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp DELETE query&apos;);</span><br><span class="line">    DELETE FROM sbtest </span><br><span class="line">      WHERE id = v_n;</span><br><span class="line"></span><br><span class="line">    -- oltp INSERT query</span><br><span class="line">--    DBMS_OUTPUT.PUT_LINE(&apos;oltp INSERT query&apos;);</span><br><span class="line">    INSERT INTO sbtest (id, k, c, pad)</span><br><span class="line">      VALUES (v_n, v_m, v_c, v_p);  </span><br><span class="line"></span><br><span class="line">    -- Commit the changes</span><br><span class="line">    COMMIT;</span><br><span class="line"></span><br><span class="line">  EXCEPTION</span><br><span class="line"></span><br><span class="line">    WHEN NO_DATA_FOUND THEN</span><br><span class="line"></span><br><span class="line">      errCode  := 0;</span><br><span class="line">      errText  := &apos;OK&apos;;</span><br><span class="line"></span><br><span class="line">    WHEN OTHERS THEN</span><br><span class="line"></span><br><span class="line">      errCode  := SQLCODE;</span><br><span class="line">      errText  := SUBSTR(SQLERRM, 1, 200);</span><br><span class="line"></span><br><span class="line">  END oltp_read_write;</span><br><span class="line"></span><br><span class="line">BEGIN  -- package initialization goes here</span><br><span class="line"></span><br><span class="line">  -- Run the procedures once to initialize everything</span><br><span class="line">  oltp_read_only(1, 1, 10, theErrCode, theErrText );</span><br><span class="line">  oltp_read_write(1, 1, 10, &apos;abc&apos;, &apos;def&apos;, theErrCode, theErrText );</span><br><span class="line"></span><br><span class="line">  DBMS_OUTPUT.PUT_LINE(&apos;Initialized the workload package&apos;);</span><br><span class="line">END workload;</span><br><span class="line">/</span><br></pre></td></tr></table></figure><p><code>4_call_workload.sql:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">set serveroutput on;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  counter    PLS_INTEGER;</span><br><span class="line">  errCode    PLS_INTEGER;</span><br><span class="line">  errtext    VARCHAR2(256);</span><br><span class="line">  line1      VARCHAR2(256);</span><br><span class="line">  line2      VARCHAR2(256);</span><br><span class="line">  someText   sbtest.c%TYPE;</span><br><span class="line">  moreText   VARCHAR2(256);</span><br><span class="line">  i          PLS_INTEGER;</span><br><span class="line">  iterations PLS_INTEGER;</span><br><span class="line">  startTime  NUMBER;</span><br><span class="line">  endTime    NUMBER;</span><br><span class="line">  duration   NUMBER;</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">  -- Initialize the someText string</span><br><span class="line">  line1 := &apos;The quick brown foxy did da jumping thing over that lazy doggy. &apos;;</span><br><span class="line">  line2 := &apos;Question three, who was scott and who or what was tiger?&apos;;</span><br><span class="line">  someText := line1 || line2;</span><br><span class="line">  moreText := &apos;&apos;;</span><br><span class="line"> </span><br><span class="line">  -- Initialize the moreText string</span><br><span class="line">  FOR i in 1 .. 60 LOOP</span><br><span class="line">    moreText := moreText || &apos;a&apos;;</span><br><span class="line">  END LOOP;</span><br><span class="line">  </span><br><span class="line">  -- Get the start time in centi-seconds</span><br><span class="line">  startTime := DBMS_UTILITY.GET_TIME();</span><br><span class="line"></span><br><span class="line">  iterations := 10000;</span><br><span class="line">  for counter in 1 .. iterations LOOP</span><br><span class="line">    workload.oltp_read_only(1, 1, 1100, errCode, errtext);</span><br><span class="line">    if errCode != 0 then</span><br><span class="line">      exit;</span><br><span class="line">    end if;</span><br><span class="line">  end loop;</span><br><span class="line"></span><br><span class="line">  -- Get the end time in centi-seconds</span><br><span class="line">  endTime := DBMS_UTILITY.GET_TIME();</span><br><span class="line">  if errCode !=0 then </span><br><span class="line">    dbms_output.put_line(&apos;  &apos;);</span><br><span class="line">    dbms_output.put_line(&apos;Error code = &apos; || errCode || &apos; Error Text = &apos; || errtext);</span><br><span class="line">  end if;</span><br><span class="line">  duration := endTime - startTime;</span><br><span class="line">  IF duration &gt; 0 THEN</span><br><span class="line">    dbms_output.put_line(&apos;  &apos;);</span><br><span class="line">    dbms_output.put_line(&apos;Called workload.oltp_read_only  &apos; || iterations || &apos; times. TPS = &apos; || trunc(iterations / duration * 100, 1) );</span><br><span class="line">  ELSE</span><br><span class="line">    dbms_output.put_line(&apos;Could not get valid timing info&apos;);</span><br><span class="line">  END IF;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  iterations := 10000;</span><br><span class="line">  for counter in 1 .. iterations LOOP</span><br><span class="line">    workload.oltp_read_write(1, 1, 1100, someText, moreText, errCode, errtext);</span><br><span class="line">    if errCode != 0 then</span><br><span class="line">      exit;</span><br><span class="line">    end if;</span><br><span class="line">  end loop;</span><br><span class="line"></span><br><span class="line">  -- Get the end time in centi-seconds</span><br><span class="line">  endTime := DBMS_UTILITY.GET_TIME();</span><br><span class="line"></span><br><span class="line">  if errCode !=0 then </span><br><span class="line">    dbms_output.put_line(&apos;  &apos;);</span><br><span class="line">    dbms_output.put_line(&apos;Error code = &apos; || errCode || &apos; Error Text = &apos; || errtext);</span><br><span class="line">  end if;</span><br><span class="line"></span><br><span class="line">  duration := endTime - startTime;</span><br><span class="line">  IF duration &gt; 0 THEN</span><br><span class="line">    dbms_output.put_line(&apos;Called workload.oltp_read_write &apos; || iterations || &apos; times. TPS = &apos; || trunc(iterations / duration * 100, 1) );</span><br><span class="line">  ELSE</span><br><span class="line">    dbms_output.put_line(&apos;Could not get valid timing info&apos;);</span><br><span class="line">  END IF;</span><br><span class="line">end;</span><br><span class="line">/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内存计算与内存数据库&quot;&gt;&lt;a href=&quot;#内存计算与内存数据库&quot; class=&quot;headerlink&quot; title=&quot;内存计算与内存数据库&quot;&gt;&lt;/a&gt;内存计算与内存数据库&lt;/h1&gt;&lt;h2 id=&quot;第零章&quot;&gt;&lt;a href=&quot;#第零章&quot; class=&quot;headerlink&quot; title=&quot;第零章&quot;&gt;&lt;/a&gt;第零章&lt;/h2&gt;&lt;p&gt;OLTP：行存储（记录：元组），联机事务处理&lt;/p&gt;
&lt;p&gt;OLAP：列存储（key-value），联机分析处理&lt;/p&gt;
&lt;h2 id=&quot;Timesten操作小记&quot;&gt;&lt;a href=&quot;#Timesten操作小记&quot; class=&quot;headerlink&quot; title=&quot;Timesten操作小记&quot;&gt;&lt;/a&gt;Timesten操作小记&lt;/h2&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="大三上笔记" scheme="http://blog.guitoubing.top/tags/%E5%A4%A7%E4%B8%89%E4%B8%8A%E7%AC%94%E8%AE%B0/"/>
    
      <category term="TimesTen" scheme="http://blog.guitoubing.top/tags/TimesTen/"/>
    
      <category term="内存数据库" scheme="http://blog.guitoubing.top/tags/%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>软件工程课程笔记（更新中）</title>
    <link href="http://blog.guitoubing.top/2018/09/01/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.guitoubing.top/2018/09/01/软件工程课程笔记/</id>
    <published>2018-09-01T13:22:10.000Z</published>
    <updated>2018-11-06T13:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h2 id="第二章-软件工程"><a href="#第二章-软件工程" class="headerlink" title="第二章 软件工程"></a>第二章 软件工程</h2><blockquote><p>定义软件工程的<strong><u>框架(Framework)</u></strong></p></blockquote><h3 id="软件工程的定义"><a href="#软件工程的定义" class="headerlink" title="软件工程的定义"></a>软件工程的定义</h3><blockquote><h5 id="软件工程是："><a href="#软件工程是：" class="headerlink" title="软件工程是："></a>软件工程是：</h5><p>（1）将<strong><u>系统化的(systematic)</u></strong>、<strong><u>规范的(disciplined)</u></strong>、<strong><u>可量化(quantifiable)</u></strong>的方法应用于软件的<u><strong>开发(development)</strong></u>、<u><strong>运行(operation)</strong></u>和<u><strong>维护(maintenance)</strong></u>.</p><p>（2）对（1）中所述<strong><u>方法(approaches)</u></strong>的研究.</p></blockquote><a id="more"></a><h3 id="软件工程层次图"><a href="#软件工程层次图" class="headerlink" title="软件工程层次图"></a>软件工程层次图</h3><blockquote><p>工具-方法-过程-质量关注点</p><p><img src="" alt="软件工程层次图"></p></blockquote><h4 id="软件过程"><a href="#软件过程" class="headerlink" title="软件过程"></a>软件过程</h4><ul><li>软件过程的定义</li></ul><blockquote><p>软件过程是工作产品构建时所执行的一系列活动、动作和任务的集合，一个<strong><u>活动(activity)</u></strong>包含多个<u><strong>动作(action)</strong></u>，一个动作包含多个<u><strong>任务(task)</strong></u>.</p></blockquote><h4 id="过程框架"><a href="#过程框架" class="headerlink" title="过程框架"></a>过程框架</h4><ul><li><span id="GPF">最经典的过程框架：</span></li></ul><p>需求调研(RE)→需求分析建模(Require Analysis Model)→概要设计(Architecture Design)→详细设计(CLD)→编码(Coding)→单元测试(Unit testing)→整合测试(Integrating testing)→系统测试(System testing)→交付或发布(Delivery or Release)</p><ul><li>通用的过程框架：</li></ul><p>沟通(Communication)→策划(Planning)→建模(Modeling)→构建(Construction)→部署(Deployment)</p><blockquote><p><strong><u>沟通</u></strong>包含需求调研；</p><p><u><strong>策划</strong></u>是一个<strong><u>普适性活动</u></strong>或者庇护维活动或质量控制维活动(Umbrella activity)，与开发维(devolope demention)或框架活动(framework)不重合</p><p><strong><u>建模</u></strong>包含需求分析建模、概要设计、详细设计</p><p><strong><u>构建</u></strong>包含编码、单元测试、整合测试、系统测试</p><p><strong><u>部署</u></strong>包含发布</p></blockquote><ul><li>milestone</li></ul><blockquote><p>milestone是项目管理中用于标记项目时间轴上特定点的工具，用于某一过程活动完成的标志，以使工程能够成功过渡到下一阶段。</p></blockquote><h4 id="普适性活动"><a href="#普适性活动" class="headerlink" title="普适性活动"></a>普适性活动</h4><p>包含：</p><ul><li>软件项目跟踪和控制(Software project tracking and control，以Planning为基础)</li><li>风险管理(Risk management)</li></ul><blockquote><ol><li>首先进行<strong><u>风险识别</u></strong>，得到初始识别的风险表(risk list)，利用以下公式将风险按照RE从高到低排序列出。 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; risk exposure(RE，风险曝光度) = impact(影响度) * productivity(影响比例)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="2"><li>制定风险缓解计划(risk mitigation planning)</li><li><p>风险跟踪(risk tranking)：</p><ul><li>可能风险缓解</li><li>可能风险真的发生，要有对应的风险处理对策</li></ul></li></ol></blockquote><ul><li>软件质量保证(Software quality assurance)</li></ul><blockquote><p>例子：SQA，GitHub的bug检查合并</p></blockquote><ul><li>技术评审(Technical review)</li></ul><blockquote><p>按照代码逻辑或者代码行进行评审、检查</p></blockquote><ul><li>测量(Measurement)</li></ul><blockquote><p>定量化，</p></blockquote><ul><li>软件配置管理(Software configuration management)</li></ul><blockquote><p>在整个软件过程中管理变更所带来的影响</p></blockquote><ul><li>可复用管理(Reusability management)</li><li>工作产品的准备和生产(Work product preparation and production)</li></ul><blockquote><p>工作分解结构(WBS)：</p><p>​    工作分解结构（简称WBS）跟因数分解是一个原理，就是把一个项目，按一定的原则分解，项目分解成任务，任务再分解成一项项工作，再把一项项工作分配到每个人的日常活动中，直到分解不下去为止。即：项目→任务→工作→日常活动。工作分解结构以<a href="https://baike.baidu.com/item/%E5%8F%AF%E4%BA%A4%E4%BB%98%E6%88%90%E6%9E%9C/6780498" target="_blank" rel="noopener">可交付成果</a>为导向，对项目要素进行的分组，它归纳和定义了项目的整个工作范围，每下降一层代表对项目工作的更详细定义。WBS总是处于计划过程的中心，也是制定<a href="https://baike.baidu.com/item/%E8%BF%9B%E5%BA%A6%E8%AE%A1%E5%88%92/4805982" target="_blank" rel="noopener">进度计划</a>、资源需求、成本预算、风险管理计划和采购计划等的重要基础。——百度百科</p></blockquote><h4 id="过程的适应性调整"><a href="#过程的适应性调整" class="headerlink" title="过程的适应性调整"></a>过程的适应性调整</h4><blockquote><p>软件工程过程并不是教条的规则，也不要求软件团队机械地执行，而应该是灵活可适应的（根据软件所需解决的问题、项目特点、开发团队和组织文化等进行适应性调整）。</p></blockquote><h3 id="软件工程实践"><a href="#软件工程实践" class="headerlink" title="软件工程实践"></a>软件工程实践</h3><blockquote><p>具体实施通用框架活动的过程就是软件实践。</p></blockquote><h4 id="实践的精髓"><a href="#实践的精髓" class="headerlink" title="实践的精髓"></a>实践的精髓</h4><ul><li><p>理解问题（沟通和分析）—— Understand the problem (communication and analysis)</p></li><li><p>策划解决方案（建模和软件设计）—— Plan a solution (modeling and software design)</p><blockquote><p>包含概要设计建模和分析设计建模，最重要的是概要设计建模（体系结构、数据库设计、接口设计）</p></blockquote></li><li><p>实施计划（代码生成）—— Carry out the plan (code generation)</p><blockquote><p>就是写代码</p></blockquote></li><li><p>检查结果的正确性（测试和质量保证）—— Examine the result for accuracy (tesing and quality assurance)</p><blockquote><p>通过设计足够的测试来发现尽可能多的错误</p></blockquote></li></ul><h4 id="通用原则"><a href="#通用原则" class="headerlink" title="通用原则"></a>通用原则</h4><ul><li>存在价值（The reason it all exists）</li><li>保持简洁（KISS, Keep it simple, stupid）</li><li>保持愿景（Maintain the Vision）</li><li>关注使用者（What You Produce， Others Will Consume）</li><li>面向未来（Be Open To The Future）</li><li>提前计划复用（Plan Ahead for Reuse）</li><li>认真思考（Think！）</li></ul><h3 id="软件开发神话"><a href="#软件开发神话" class="headerlink" title="软件开发神话"></a>软件开发神话</h3><h3 id="Exercise-找到Tools"><a href="#Exercise-找到Tools" class="headerlink" title="Exercise: 找到Tools"></a>Exercise: 找到Tools</h3><h2 id="第三章-软件过程结构"><a href="#第三章-软件过程结构" class="headerlink" title="第三章 软件过程结构"></a>第三章 软件过程结构</h2><h3 id="通用过程模型"><a href="#通用过程模型" class="headerlink" title="通用过程模型"></a>通用过程模型</h3><p><img src="/img/软件过程框架.png" alt="软件过程框架"></p><h3 id="过程流"><a href="#过程流" class="headerlink" title="过程流"></a>过程流</h3><ul><li><p>线性过程流</p><blockquote></blockquote></li><li><p>迭代过程流</p></li><li><p>演化过程流</p></li><li><p>并行过程流</p></li></ul><h3 id="定义框架活动"><a href="#定义框架活动" class="headerlink" title="定义框架活动"></a>定义框架活动</h3><h3 id="过程模式"><a href="#过程模式" class="headerlink" title="过程模式"></a>过程模式</h3><h2 id="第四章-过程模型（Process-Models）"><a href="#第四章-过程模型（Process-Models）" class="headerlink" title="第四章 过程模型（Process Models）"></a>第四章 过程模型（Process Models）</h2><h3 id="传统（惯用）过程模型（Prescriptive-Process-Models）"><a href="#传统（惯用）过程模型（Prescriptive-Process-Models）" class="headerlink" title="传统（惯用）过程模型（Prescriptive Process Models）"></a>传统（惯用）过程模型（Prescriptive Process Models）</h3><h4 id="瀑布模型（Waterfall-Model）"><a href="#瀑布模型（Waterfall-Model）" class="headerlink" title="瀑布模型（Waterfall Model）"></a>瀑布模型（Waterfall Model）</h4><blockquote><p>又称经典生命周期（Classic life cycle）</p></blockquote><blockquote><p>瀑布模型可能会有<code>反复</code>的过程，但无<code>迭代</code>的过程，但<code>反复</code>会使得开发过程产生混乱。</p></blockquote><p>瀑布模型的变种：V模型（V-model），V模型拉直后与<a href="#GPF">Generic Process Framework</a>一致。</p><p><img src="/img/006tNbRwly1fwdiojeitsj31eu1444it.jpg" alt="image-20181019142951342"></p><p>箭头表示测试过程与设计过程的关系（相关性）</p><h4 id="增量过程模型（Incremental-Process-Models）"><a href="#增量过程模型（Incremental-Process-Models）" class="headerlink" title="增量过程模型（Incremental Process Models）"></a>增量过程模型（Incremental Process Models）</h4><blockquote><p>增量过程模型没有<code>迭代</code>过程，因为其开发过程没有<code>环</code></p></blockquote><p><img src="/img/006tNbRwly1fwdiyk83baj31ig114aw6.jpg" alt="image-20181019143931279"></p><p>特点：</p><ol><li>每1个增量交叉并行</li><li>每1个增量都是可以供用户直接使用的系统</li><li>第1个增量往往包含主要的、核心的功能</li></ol><p>模型的选择：时间限制、资金限制、技术限制</p><blockquote><p>例如项目的99%的需求已经完善，项目需要6个月完成，若时间充足可使用<code>瀑布模型</code>，但若甲方所给时间比较少，则可先完成一部分主要的内容，先交付，后来的需求可在后面的增量中开发，这就是<code>增量模型</code>的一个例子。</p></blockquote><h4 id="演化过程模型（Evolutionary-Process-Model）"><a href="#演化过程模型（Evolutionary-Process-Model）" class="headerlink" title="演化过程模型（Evolutionary Process Model）"></a>演化过程模型（Evolutionary Process Model）</h4><blockquote><p>演化模型是<code>迭代</code>的过程模型</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;软件工程&quot;&gt;&lt;a href=&quot;#软件工程&quot; class=&quot;headerlink&quot; title=&quot;软件工程&quot;&gt;&lt;/a&gt;软件工程&lt;/h1&gt;&lt;h2 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h2&gt;&lt;h2 id=&quot;第二章-软件工程&quot;&gt;&lt;a href=&quot;#第二章-软件工程&quot; class=&quot;headerlink&quot; title=&quot;第二章 软件工程&quot;&gt;&lt;/a&gt;第二章 软件工程&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;定义软件工程的&lt;strong&gt;&lt;u&gt;框架(Framework)&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;软件工程的定义&quot;&gt;&lt;a href=&quot;#软件工程的定义&quot; class=&quot;headerlink&quot; title=&quot;软件工程的定义&quot;&gt;&lt;/a&gt;软件工程的定义&lt;/h3&gt;&lt;blockquote&gt;
&lt;h5 id=&quot;软件工程是：&quot;&gt;&lt;a href=&quot;#软件工程是：&quot; class=&quot;headerlink&quot; title=&quot;软件工程是：&quot;&gt;&lt;/a&gt;软件工程是：&lt;/h5&gt;&lt;p&gt;（1）将&lt;strong&gt;&lt;u&gt;系统化的(systematic)&lt;/u&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;u&gt;规范的(disciplined)&lt;/u&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;u&gt;可量化(quantifiable)&lt;/u&gt;&lt;/strong&gt;的方法应用于软件的&lt;u&gt;&lt;strong&gt;开发(development)&lt;/strong&gt;&lt;/u&gt;、&lt;u&gt;&lt;strong&gt;运行(operation)&lt;/strong&gt;&lt;/u&gt;和&lt;u&gt;&lt;strong&gt;维护(maintenance)&lt;/strong&gt;&lt;/u&gt;.&lt;/p&gt;
&lt;p&gt;（2）对（1）中所述&lt;strong&gt;&lt;u&gt;方法(approaches)&lt;/u&gt;&lt;/strong&gt;的研究.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="大三上笔记" scheme="http://blog.guitoubing.top/tags/%E5%A4%A7%E4%B8%89%E4%B8%8A%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件工程" scheme="http://blog.guitoubing.top/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络课程笔记（更新中）</title>
    <link href="http://blog.guitoubing.top/2018/09/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.guitoubing.top/2018/09/01/计算机网络课程笔记/</id>
    <published>2018-09-01T12:51:13.000Z</published>
    <updated>2018-11-06T13:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p>网络通信是进程间的通信，进程的表示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IP:port//IP为服务器IP地址，port为服务器上的进程号</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>网络组成：</p><ul><li><p>Management</p></li><li><p>Application</p></li><li><p>Hardware</p><blockquote><p>Cable：电缆、光纤</p><p>Network Interface Card：网卡</p><p>Switch：交换机</p><p>Router：路由器</p></blockquote></li></ul></li></ul><h2 id="传播介质（第7章）"><a href="#传播介质（第7章）" class="headerlink" title="传播介质（第7章）"></a>传播介质（第7章）</h2><h3 id="对传播介质的度量"><a href="#对传播介质的度量" class="headerlink" title="对传播介质的度量"></a>对传播介质的度量</h3><ul><li><p>传播延时</p><blockquote><p>信号在介质中往返一次所需的时间</p></blockquote></li><li><p>信道容量</p><blockquote><p>介质可以支持的最大数据速率</p></blockquote></li><li><p>频率范围</p><blockquote><p>介质可接受的最大的频率变化范围</p></blockquote></li><li><p>带宽</p><blockquote><p>每秒所收到的数据量（Bit）</p></blockquote></li></ul><h3 id="奈奎斯特定理"><a href="#奈奎斯特定理" class="headerlink" title="奈奎斯特定理"></a>奈奎斯特定理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D=2*B*log2K</span><br><span class="line">K:传输系统使用的信号电平数</span><br><span class="line">B:模拟带宽</span><br><span class="line">D:以每秒位元数计算的最大数据速率</span><br></pre></td></tr></table></figure><h3 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C=B*log2(1+S/N)</span><br><span class="line">B:硬件带宽</span><br><span class="line">S/N:信噪比</span><br><span class="line">C:用每秒位数表示的对信道容量的有效限制</span><br></pre></td></tr></table></figure><ul><li><p>分贝(db)和信噪比(S/N)是指数关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dB=10*log10S/N</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">dB = 20 =&gt; S/N = 100</span><br><span class="line">db = 30 =&gt; S/N = 1000</span><br></pre></td></tr></table></figure></li><li><p>例子：电话线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Bandwidth = 3000HZ</span><br><span class="line">S/N ratio = 30db</span><br><span class="line">=&gt;  C = 30Kps</span><br></pre></td></tr></table></figure></li></ul><h2 id="传输模式（第9章）"><a href="#传输模式（第9章）" class="headerlink" title="传输模式（第9章）"></a>传输模式（第9章）</h2><h3 id="传输模式分类"><a href="#传输模式分类" class="headerlink" title="传输模式分类"></a>传输模式分类</h3><ul><li>串行传输</li><li>并行传输</li></ul><h3 id="传输数据"><a href="#传输数据" class="headerlink" title="传输数据"></a>传输数据</h3><blockquote><p>例子：Byte 正序(big-endian) &amp;&amp; Bit 逆序(little-endian)</p></blockquote><h4 id="串行传输方式"><a href="#串行传输方式" class="headerlink" title="串行传输方式"></a>串行传输方式</h4><ul><li><p>异步传输</p><blockquote><p>键盘输入，RS-232异步字符传输</p></blockquote><ul><li><p>RS-232异步字符传输标准</p><blockquote><p>把一串字符串通过铜线进行传输</p><p>S1:把字符用ASCII码表示出来；S2:</p></blockquote><p>状态机：电压变化表示状态切换</p><blockquote><p>空闲状态：</p><p>​    接受”-“：保持空闲状态</p><p>​    接受”+“：变成传输状态</p><p>传输状态：</p><p>​    接受”-“：保持传输状态，传1</p><p>​    接受“+”：保持传输状态，传0</p><p>传输的数据前后各需要一位，分别作为起始位(+)、终止位(-)</p><p>结束按照“翻转”时间确定，传输完成保持负电压</p><p><strong>最终传输到接收方是9位，多一位<u>校验码</u></strong></p></blockquote></li></ul></li><li><p>同步传输</p><blockquote><p>以太网</p></blockquote><ul><li><p>原理同对表一样</p><blockquote><p>实现方法：采用先传输一部分规定好的数据，来检测发送方和接收方是否一致</p></blockquote></li></ul></li><li><p>等时传输</p><blockquote><p>利用<strong><u>缓冲区</u></strong>实现</p></blockquote></li></ul><h4 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h4><ul><li>波特率匹配</li><li>例子：传输Z(0x5A)，检测波特率提高一倍</li></ul><h4 id="通信信道"><a href="#通信信道" class="headerlink" title="通信信道"></a>通信信道</h4><ul><li><p>单工信道</p><blockquote><p>Eg：广播、收音机</p></blockquote></li><li><p>全双工信道</p><ul><li>数据线路设备(DCE)和数据终端设备(DTE)</li><li>反接线</li></ul></li><li><p>半双工信道</p><blockquote><p>Eg：对讲机</p></blockquote></li></ul><h2 id="调制和调制解调器（第10章）"><a href="#调制和调制解调器（第10章）" class="headerlink" title="调制和调制解调器（第10章）"></a>调制和调制解调器（第10章）</h2><h3 id="远距离传输"><a href="#远距离传输" class="headerlink" title="远距离传输"></a>远距离传输</h3><blockquote><p>考虑：干扰、<strong><u>信号衰减</u></strong></p><p>解决方案：<strong><u>载波</u></strong>传输</p></blockquote><h3 id="载波传输方式"><a href="#载波传输方式" class="headerlink" title="载波传输方式"></a>载波传输方式</h3><ul><li></li><li></li><li>连续性好</li><li></li></ul><h3 id="载波改变方式——调制（Modulation）与解调（Demodulation）"><a href="#载波改变方式——调制（Modulation）与解调（Demodulation）" class="headerlink" title="载波改变方式——调制（Modulation）与解调（Demodulation）"></a>载波改变方式——调制（Modulation）与解调（Demodulation）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">S(t)=Asin(2πFt+P)</span><br><span class="line">// A: Amplitude Modulation(调幅)</span><br><span class="line">// F: Frequency Modulation(调频，单位时间内波的个数)</span><br><span class="line">// P: Phase Modulation(调相)</span><br></pre></td></tr></table></figure><ul><li><p>调幅</p><blockquote><p>调幅的大小有一定的限制（香农定理的限制）</p></blockquote></li><li><p>调频</p></li><li><p>调相</p></li></ul><h3 id="键控（Shift-keying）"><a href="#键控（Shift-keying）" class="headerlink" title="键控（Shift keying）"></a>键控（Shift keying）</h3><h3 id="调制技术的比较"><a href="#调制技术的比较" class="headerlink" title="调制技术的比较"></a>调制技术的比较</h3><blockquote><p>调相的效率要高一点，变化一次可传输不止一位（通过相位分隔，例如将2π分为8份，则有8种信号，可传输3位数据）</p></blockquote><h3 id="正交调幅-QAM-Quadrature-Amplitude-Modulation"><a href="#正交调幅-QAM-Quadrature-Amplitude-Modulation" class="headerlink" title="正交调幅(QAM, Quadrature Amplitude Modulation)"></a>正交调幅(QAM, Quadrature Amplitude Modulation)</h3><blockquote><p>结合调幅和移相键控，使用同时包含相位和振幅的改变来表示数据，QAM最大可以表示1024个</p><p>公式：Y~m~(t) = A~m~sinwt+B~m~coswt，运算为矢量运算</p></blockquote><h3 id="调制解调器类型"><a href="#调制解调器类型" class="headerlink" title="调制解调器类型"></a>调制解调器类型</h3><ul><li>无线猫（RF，Radio Frequency）</li><li>光纤猫（optical modems）</li><li>拨号猫（Dialup modem）<ul><li>拨号调制解调器模式<ul><li>Calling mode</li><li>Answer mode</li></ul></li></ul></li></ul><h2 id="复用与解复用（第11章）"><a href="#复用与解复用（第11章）" class="headerlink" title="复用与解复用（第11章）"></a>复用与解复用（第11章）</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="频分多路复用FDM"><a href="#频分多路复用FDM" class="headerlink" title="频分多路复用FDM"></a>频分多路复用FDM</h4><ul><li><p>多个逻辑信道，实际上只有一个物理信道。</p></li><li><p>防止频道之间干扰，通常有个区间为防护带区间。</p></li><li><p>信号的漂移现象</p><blockquote><p>解决方法：子信道分配</p></blockquote></li><li><p>分级FDM</p></li><li><p>分布式平铺</p></li></ul><h4 id="波分多路复用WDM"><a href="#波分多路复用WDM" class="headerlink" title="波分多路复用WDM"></a>波分多路复用WDM</h4><ul><li>是指应用于光纤中的频分复用技术</li></ul><h4 id="时分多路复用TDM"><a href="#时分多路复用TDM" class="headerlink" title="时分多路复用TDM"></a>时分多路复用TDM</h4><ul><li>同步TDM<ul><li>问题：空闲时隙</li><li>应用：电话通话</li></ul></li><li>分级TDM</li><li>统计TDM<ul><li>应用：网络</li></ul></li><li>逆转复用<ul><li>将单个高速数字输入被分配到多个低速连接上，传输后再重新复合而形成输入的副本</li></ul></li></ul><h4 id="码分多路复用CDM"><a href="#码分多路复用CDM" class="headerlink" title="码分多路复用CDM"></a>码分多路复用CDM</h4><ul><li><p>矢量（Vector）</p><blockquote><p>矢量的运算</p></blockquote></li><li><p>结论 </p></li></ul><h2 id="可靠性和信道编码（第8章）"><a href="#可靠性和信道编码（第8章）" class="headerlink" title="可靠性和信道编码（第8章）"></a>可靠性和信道编码（第8章）</h2><h3 id="数据传输错误的3个源头"><a href="#数据传输错误的3个源头" class="headerlink" title="数据传输错误的3个源头"></a>数据传输错误的3个源头</h3><ul><li>干扰</li><li>失真</li><li>衰减</li></ul><h3 id="传输差错对数据的影响"><a href="#传输差错对数据的影响" class="headerlink" title="传输差错对数据的影响"></a>传输差错对数据的影响</h3><ul><li>单个差错</li><li>突发差错</li><li>擦除（模糊）</li></ul><h3 id="处理信道差错的两种策略（信道编码）"><a href="#处理信道差错的两种策略（信道编码）" class="headerlink" title="处理信道差错的两种策略（信道编码）"></a>处理信道差错的两种策略（信道编码）</h3><blockquote><p>发送数据的同时，发送校验码</p></blockquote><ul><li><p>前向纠错（FEC）</p></li><li><p>自动重传请求（ARQ）</p></li></ul><h3 id="FEC机制"><a href="#FEC机制" class="headerlink" title="FEC机制"></a>FEC机制</h3><ul><li><p>单奇偶检验</p><blockquote><p>奇偶性定义为1的个数，且校验位的添加会使得<code>码字</code>始终保持<code>奇数</code>或<code>偶数</code>，保持奇数就是<code>奇校验</code>，保持偶数就是<code>偶校验</code>.</p><p>限制：校验能力有限，出两个错误时便无法校验</p></blockquote></li><li><p>分组码数学与<code>（n, k）</code>表示</p></li><li><p>汉明距离</p><blockquote><p>先计算最小汉明距<code>d</code>，而后得出可检查的最大的有效位长度：<code>E&lt;=d-1</code></p></blockquote></li><li><p>纵横奇偶校验</p><blockquote><p>作用：可以找出错误的位置，并改正错误</p><p>缺点：效率低下，一般不用</p></blockquote></li><li><p>校验和</p><blockquote><p>码的长度一般为字节的倍数，进位需加回到原和中</p><p>优点：</p><ul><li>校验和的大小比较小</li><li>计算很简单</li><li>开支很低</li></ul><p>缺点：</p><ul><li>对纵向错误无法校验（导致校验和方法一般不用在硬件上）</li></ul><p><strong><u>一般情况下，校验和位取的是算数反码，校验时所有数据位相加，得到结果取补码为0则数据正确</u></strong></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IP包的头部长度：20Bytes</span><br></pre></td></tr></table></figure><ul><li><p>循环冗余校验码（CRC码，适宜用在硬件上，例如网卡）</p><ul><li><p>关键特性</p><ul><li>任意长度报文</li><li>出色的检错能力</li><li>快速硬件实现</li></ul></li><li><p>线性码、循环线性码</p><blockquote><p>线性码是一个码的集合C，且C~1~、C~2~∈C，则C~1~、C~2~∈C的线性组合仍然∈C；</p><p>循环线性码是指码循环移位后的码仍然属于该集合。</p></blockquote></li><li><p>原理</p><blockquote></blockquote></li><li><p>硬件实现</p><blockquote><p>异或门实现基本运算</p></blockquote><ul><li>算法</li></ul></li><li><p>自动重传请求(ARQ)机制</p><blockquote><p>数据传输成功会发送回执，错误则不发送回执</p></blockquote><p>​    </p></li></ul></li></ul><h3 id="OSI-Reference-Model"><a href="#OSI-Reference-Model" class="headerlink" title="OSI Reference Model"></a>OSI Reference Model</h3><blockquote><p><strong>数据流（Data Flow）：</strong></p><ul><li>Service服务：下一层对上一层提供服务（接口、方法）</li><li>Protocol协议</li><li>Physical物理</li></ul></blockquote><ul><li><p>物理层（5 7 9 10 11）</p></li><li><p>数据链路层（8）</p><blockquote><p>将一条物理上有差错的传输信道通过通知和管理而变成逻辑上无差错的</p></blockquote></li><li></li></ul><h2 id="因特网应用与网络编程（第3章）"><a href="#因特网应用与网络编程（第3章）" class="headerlink" title="因特网应用与网络编程（第3章）"></a>因特网应用与网络编程（第3章）</h2><h3 id="线路交换网络（circuit-switched-network）"><a href="#线路交换网络（circuit-switched-network）" class="headerlink" title="线路交换网络（circuit switched network）"></a>线路交换网络（circuit switched network）</h3><h3 id="包交换网络（packet-switched-network）"><a href="#包交换网络（packet-switched-network）" class="headerlink" title="包交换网络（packet switched network）"></a>包交换网络（packet switched network）</h3><blockquote><p>特征：轮流</p></blockquote><p>​    </p><ul><li><p>异步</p></li><li><p>不用安装</p></li></ul><blockquote><p>主要区别在于二者的共享性</p></blockquote><h2 id="局域网：分组、帧和拓扑（第13章）"><a href="#局域网：分组、帧和拓扑（第13章）" class="headerlink" title="局域网：分组、帧和拓扑（第13章）"></a>局域网：分组、帧和拓扑（第13章）</h2><h3 id="以太网的接受方式"><a href="#以太网的接受方式" class="headerlink" title="以太网的接受方式"></a>以太网的接受方式</h3><blockquote><p>广播式：</p><ul><li>MAC子层拷贝每个包</li><li>LLC子层提取每个包的拷贝</li><li>LLC子层只接受那些单一传播、广播或多路传播的地址相匹配的包</li></ul></blockquote><h3 id="帧"><a href="#帧" class="headerlink" title="帧"></a>帧</h3><blockquote><p>帧头、帧尾用于检测传输过程是否发生错误，同时用作<code>边界</code> </p><p><code>边界</code>采用两个ASC码中很少使用的字符： </p><ul><li>SOH（01）头部起始字符</li><li>EOT（04）传输结束字符</li></ul></blockquote><ul><li><h4 id="此方案的缺陷"><a href="#此方案的缺陷" class="headerlink" title="此方案的缺陷"></a>此方案的缺陷</h4><p>假如使用此两个字符，将会发生接受解析问题</p></li><li><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><blockquote><p>字填充（ABC可换成“任意”字符，但是效率不同，找一些不太会出现的字符会提高效率）：</p><ul><li>soh → esc + A</li><li>eot → esc + B</li><li>esc → esc + C</li></ul></blockquote><blockquote><p>位填充：</p><p>5个<code>1</code>出现了便插入1个<code>0</code>，首尾使用<code>01111110</code>作为边界</p></blockquote></li></ul><h2 id="IEEE-MAC子层（第14章）"><a href="#IEEE-MAC子层（第14章）" class="headerlink" title="IEEE MAC子层（第14章）"></a>IEEE MAC子层（第14章）</h2><h3 id="受控介入协议（Control-Access-Protocols）"><a href="#受控介入协议（Control-Access-Protocols）" class="headerlink" title="受控介入协议（Control Access Protocols）"></a>受控介入协议（Control Access Protocols）</h3><h4 id="轮询"><a href="#轮询" class="headerlink" title="轮询"></a>轮询</h4><blockquote><p>方式：</p><ul><li>按循环顺序</li><li>按优先级顺序</li></ul><p>算法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; 目的：</span><br><span class="line">&gt; 通过轮询来控制分组的发送</span><br><span class="line">&gt; 方法：</span><br><span class="line">&gt; 控制器不断重复&#123;</span><br><span class="line">&gt;         选择站点S，发送一个查询报文给S；</span><br><span class="line">&gt;         等待S发送一个分组来进行响应或跳过；</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="预定"><a href="#预定" class="headerlink" title="预定"></a>预定</h4><blockquote><p>算法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; 目的：</span><br><span class="line">&gt; 通过预约来控制分组的发送</span><br><span class="line">&gt; 方法：</span><br><span class="line">&gt; 控制器不断重复&#123;</span><br><span class="line">&gt;         形成一个需要发送分组的站点列表；</span><br><span class="line">&gt;         允许列表中的站点发送分组；</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="令牌传递"><a href="#令牌传递" class="headerlink" title="令牌传递"></a>令牌传递</h4><blockquote><p><code>令牌</code>是一个特殊的<code>帧</code>，不管有没有数据都会在环状网络中传输</p><p>令牌有两个状态（<code>空</code>和<code>忙</code>的切换只能由同一个站点切换）：</p><ul><li>空 → 可以发送（数据在传输时转变为<code>忙令牌</code>） </li><li>忙 → 无法发送（只能当数据在环网中发送一周时，才能将<code>忙令牌</code>转换为<code>空令牌</code>）</li></ul></blockquote><blockquote><p>算法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 目的：</span><br><span class="line">&gt; 通过令牌传递来控制分组的发送</span><br><span class="line">&gt; 方法：</span><br><span class="line">&gt; 网络上的每台计算机重复执行&#123;</span><br><span class="line">&gt;         等待令牌的到达；</span><br><span class="line">&gt;         如果本计算机有分组正在等待发送，则发送一个分组；</span><br><span class="line">&gt;         将令牌发送到下一站；</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1）空令牌传递到下一个节点；</span><br><span class="line">&gt; 2）节点是否要发送？不发送，转向1）</span><br><span class="line">&gt; 3）填充帧到令牌中，并置为忙</span><br><span class="line">&gt; 4）忙令牌传递到下一个节点</span><br><span class="line">&gt; 5）是否接受节点？是，复制该帧；转向4）</span><br><span class="line">&gt; 6）节点是否发送节点？是，销毁令牌中的帧，并置空，返回1）</span><br><span class="line">&gt; 7）返回4）</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="随机接入协议（Random-Access-Protocol）"><a href="#随机接入协议（Random-Access-Protocol）" class="headerlink" title="随机接入协议（Random Access Protocol）"></a>随机接入协议（Random Access Protocol）</h3><h4 id="ALOHA"><a href="#ALOHA" class="headerlink" title="ALOHA"></a>ALOHA</h4><h4 id="CSMA-CD（Collision-Detect）"><a href="#CSMA-CD（Collision-Detect）" class="headerlink" title="CSMA/CD（Collision Detect）"></a>CSMA/CD（Collision Detect）</h4><blockquote><p>以太网中一个网卡数据一旦发送，便不能停下，需等到数据发送完</p><p>算法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1）监听网络状态；如果空闲，转向3）</span><br><span class="line">&gt; 2）等待，返回1）</span><br><span class="line">&gt; 3）发送，在发送的过程中同时进行碰撞监听</span><br><span class="line">&gt; 4）一旦发生碰撞，立即停止发送</span><br><span class="line">&gt; 5）推后一个随机时间，返回1）</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>检测冲突的方法：</p><ul><li>载波侦听</li><li>冲突检测</li><li>二进制指数退避</li></ul><h4 id="CSMA-CA（Collision-Avoidance）"><a href="#CSMA-CA（Collision-Avoidance）" class="headerlink" title="CSMA/CA（Collision Avoidance）"></a>CSMA/CA（Collision Avoidance）</h4><blockquote><p>算法：</p></blockquote><h2 id="有限局域网技术（第15章）"><a href="#有限局域网技术（第15章）" class="headerlink" title="有限局域网技术（第15章）"></a>有限局域网技术（第15章）</h2><h3 id="以太网帧格式"><a href="#以太网帧格式" class="headerlink" title="以太网帧格式"></a>以太网帧格式</h3><ul><li><p>以太网帧结构（截自维基百科）</p><p><img src="/img/image-20181017150353887.png" alt="以太网帧格式"></p></li></ul><blockquote><p><strong>Question：</strong>(Using 广播 )</p><p>How does the sender know the target physical address？（注意：网卡无法识别IP地址）</p></blockquote><h3 id="地址解析（Address-Resolution）"><a href="#地址解析（Address-Resolution）" class="headerlink" title="地址解析（Address Resolution）"></a>地址解析（Address Resolution）</h3><h4 id="目的地地址解析"><a href="#目的地地址解析" class="headerlink" title="目的地地址解析"></a>目的地地址解析</h4><p>Sender：</p><ul><li><p>发送广播，征询目的节点的物理地址</p></li><li><p>接到目的节点应答，取出目的节点物理地址</p></li></ul><p>All Receivers：</p><ul><li><p>接到广播，取出源节点物理地址,比较主机名是否相同</p></li><li><p>目标节点，匹配，就取出源节点物理地址，以该地址为目的地址，本物理地址为源地址，作询问应答</p></li><li><p>其他节点，因不匹配不需要作回答</p></li></ul><h3 id="帧类型（Frame-Type）"><a href="#帧类型（Frame-Type）" class="headerlink" title="帧类型（Frame Type）"></a>帧类型（Frame Type）</h3><blockquote><p>用于区分帧的类型，是ARP包还是IP包（区分协议类型）</p></blockquote><p>IP：0800</p><p>ARP：0806</p><h3 id="IEEE’s-802-3-Ethernet-Frame（一种新的帧格式）"><a href="#IEEE’s-802-3-Ethernet-Frame（一种新的帧格式）" class="headerlink" title="IEEE’s 802.3 Ethernet Frame（一种新的帧格式）"></a>IEEE’s 802.3 Ethernet Frame（一种新的帧格式）</h3><h3 id="网卡-NIC-Network-Interface-Card"><a href="#网卡-NIC-Network-Interface-Card" class="headerlink" title="网卡 NIC Network Interface Card"></a>网卡 NIC Network Interface Card</h3><blockquote><p>NIC可以直接访问Memory，NIC与CPU仅存在指令关系</p></blockquote><p>过程：</p><ul><li><p>发送</p><blockquote><ol><li>Before sending data,  CPU forms a packet in memory 发送数据之前，CPU在内存中产生一个数据包</li><li>CPU then instructs the NIC to begin transmission CPU给NIC发送<code>播送</code>指令</li><li>NIC transmits the frame containing the packet</li><li>After finishing transmission, NIC uses the computer’s interrupt mechanism to inform the CPU</li></ol></blockquote></li><li><p>接收</p><blockquote><ol><li>The NIC waits for a frame to cross the network</li><li>The NIC makes a copy of the frame</li><li>The NIC verifies the frame CRC and checks the destination address</li><li>If the destination address is correct，the NIC stores a copy of the packet  in memory</li><li>The NIC then interrupts the CPU</li><li>Otherwise，the NIC discards the frame </li></ol></blockquote></li></ul><h3 id="网卡产品（NIC-Evolution）"><a href="#网卡产品（NIC-Evolution）" class="headerlink" title="网卡产品（NIC Evolution）"></a>网卡产品（NIC Evolution）</h3><h4 id="粗缆（Original-Thick-Ethernet-Wiring）"><a href="#粗缆（Original-Thick-Ethernet-Wiring）" class="headerlink" title="粗缆（Original Thick Ethernet Wiring）"></a>粗缆（Original Thick Ethernet Wiring）</h4><p><img src="/img/image-20181019161433801.png" alt="image-20181019161433801"></p><blockquote><p>IEEE802.3<br>10Base5</p><p>最大长度：500m（摩天大楼的高度）</p></blockquote><p>组成：</p><ul><li>网卡（连在设备上）</li><li>收发器</li><li>电缆</li></ul><blockquote><p>Terminator（终结器）：将信号能量消耗掉，防止信号反弹造成干扰，原理是电阻</p><p>Connection Multiplexor（多路连接器）：允许多台计算机连接到单个收发器，且提供与传统收发器完全相同的信号</p></blockquote><h4 id="细缆（Thin-Ethernet）"><a href="#细缆（Thin-Ethernet）" class="headerlink" title="细缆（Thin Ethernet）"></a>细缆（Thin Ethernet）</h4><p><img src="/img/image-20181019161405925.png" alt="image-20181019161405925"></p><p>将前者的三部分组合起来，结构和环网很像，但传输方式仍然是广播式的，Terminator仍然需要。</p><h4 id="双绞线以太网（Twisted-Pair-Ethernet）"><a href="#双绞线以太网（Twisted-Pair-Ethernet）" class="headerlink" title="双绞线以太网（Twisted Pair Ethernet）"></a>双绞线以太网（Twisted Pair Ethernet）</h4><p><img src="/img/image-20181019161451060.png" alt="image-20181019161451060"></p><blockquote><p>HUB（集线器）里面包含了主线</p></blockquote><h3 id="集成网卡"><a href="#集成网卡" class="headerlink" title="集成网卡"></a>集成网卡</h3><p><img src="/img/image-20181019161615728.png" alt="image-20181019161615728"></p><ul><li><p>RJ-45：双绞线</p></li><li><p>AUI：粗缆</p></li><li><p>BNC：细缆</p></li></ul><h3 id="双绞线网卡拓扑结构"><a href="#双绞线网卡拓扑结构" class="headerlink" title="双绞线网卡拓扑结构"></a>双绞线网卡拓扑结构</h3><blockquote><p>Tips：网络上的逻辑上和结构上的拓扑结构可以不同！</p></blockquote><p>物理上：星形结构</p><p>逻辑上：总线结构</p><h3 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h3><p><img src="/img/image-20181019162644076.png" alt="image-20181019162644076"></p><h3 id="布线工程"><a href="#布线工程" class="headerlink" title="布线工程"></a>布线工程</h3><p><img src="/img/image-20181019163053138.png" alt="image-20181019163053138"></p><h2 id="无线联网技术（第16章）"><a href="#无线联网技术（第16章）" class="headerlink" title="无线联网技术（第16章）"></a>无线联网技术（第16章）</h2><h3 id="个域网（PAN，802-15）"><a href="#个域网（PAN，802-15）" class="headerlink" title="个域网（PAN，802.15）"></a>个域网（PAN，802.15）</h3><ul><li>蓝牙</li><li>红外</li></ul><blockquote><p>蓝牙耗电比较低，红外耗电高</p></blockquote><ul><li>紫峰（ZigBee）</li><li>ISM无线</li></ul><h3 id="无线局域网（WLAN、WiFi，802-11）"><a href="#无线局域网（WLAN、WiFi，802-11）" class="headerlink" title="无线局域网（WLAN、WiFi，802.11）"></a>无线局域网（WLAN、WiFi，802.11）</h3><blockquote><p>为降低信号衰减采用FDM分布式平铺技术（第11章）</p></blockquote><blockquote><p>AP，Access Point through the air （Base Station），相当于集线器</p></blockquote><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><ul><li><p>专门构建型（Ad hoc）</p><blockquote><p>点到点，不通过AP</p></blockquote></li><li><p>基础结构型（Infrastructure）</p><blockquote><p>通过AP</p></blockquote></li></ul><h4 id="Manet（Mobile-Ad-hoc-Networks）"><a href="#Manet（Mobile-Ad-hoc-Networks）" class="headerlink" title="Manet（Mobile Ad-hoc Networks）"></a>Manet（Mobile Ad-hoc Networks）</h4>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;计算机网络&quot;&gt;&lt;a href=&quot;#计算机网络&quot; class=&quot;headerlink&quot; title=&quot;计算机网络&quot;&gt;&lt;/a&gt;计算机网络&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;网络通信是进程间的通信，进程的表示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;IP:port		//IP为服务器IP地址，port为服务器上的进程号&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="大三上笔记" scheme="http://blog.guitoubing.top/tags/%E5%A4%A7%E4%B8%89%E4%B8%8A%E7%AC%94%E8%AE%B0/"/>
    
      <category term="计算机网络" scheme="http://blog.guitoubing.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>dotnet基本配置及EFCore连接Mysql</title>
    <link href="http://blog.guitoubing.top/2018/06/26/Dotnet/"/>
    <id>http://blog.guitoubing.top/2018/06/26/Dotnet/</id>
    <published>2018-06-26T08:57:08.000Z</published>
    <updated>2018-11-06T13:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前奏部分"><a href="#前奏部分" class="headerlink" title="前奏部分"></a>前奏部分</h2><ul><li><p>下载并安装<a href="https://www.microsoft.com/net/learn/get-started/" target="_blank" rel="noopener">dotnet core</a></p></li><li><p>下载并安装<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">vscode</a>（需要把vscode添加到path中）</p></li></ul><a id="more"></a><ul><li><p>vscode中搜索并安装C#插件、NuGet Package Manager插件</p><blockquote><p><img src="http://getme.guitoubing.top/image-20180607144445947.png" alt="image-20180607144445947"></p></blockquote></li><li><p>新建项目</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> mkdir dotnet</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">cd</span> dotnet</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> dotnet new mvc</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> code .</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>commond + shift + p输入nuget add package安装以下依赖包，各个包的Version可在添加时选择</p><blockquote><p><img src="http://getme.guitoubing.top/image-20180607145223693.png" alt="image-20180607145123118"></p></blockquote><blockquote><p>添加包时以下代码将自动在dotnet.csproj中添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.AspNetCore.All"</span> <span class="attr">Version</span>=<span class="string">"2.0.6"</span>/&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.EntityFrameworkCore.Sqlite"</span> <span class="attr">Version</span>=<span class="string">"2.1.0"</span>/&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.EntityFrameworkCore.Tools"</span> <span class="attr">Version</span>=<span class="string">"2.1.0"</span>/&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.EntityFrameworkCore.Sqlite.Design"</span> <span class="attr">Version</span>=<span class="string">"2.0.0-preview1-final"</span>/&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.EntityFrameworkCore.Tools.DotNet"</span> <span class="attr">Version</span>=<span class="string">"2.1.0-preview1-final"</span>/&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Pomelo.EntityFrameworkCore.MySql"</span> <span class="attr">Version</span>=<span class="string">"2.1.0-rc1-final"</span>/&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"Pomelo.EntityFrameworkCore.MySql.Design"</span> <span class="attr">Version</span>=<span class="string">"1.1.2"</span>/&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li></ul><h2 id="Model部分"><a href="#Model部分" class="headerlink" title="Model部分"></a>Model部分</h2><ul><li><p>连接数据库创建实体：</p><p>在vscode终端中输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet ef dbcontext scaffold &quot;server=localhost;userid=user;pwd=password;port=3306;database=university;sslmode=none;&quot; Pomelo.EntityFrameworkCore.MySql -o Models</span><br></pre></td></tr></table></figure></li><li><p>dotnet ef两个问题</p><blockquote><p>问题1：No executable found matching command “dotnet-ef”<br>解决方法：dotnet.csproj中添加如下行： </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">DotNetCliToolReference</span> <span class="attr">Include</span>=<span class="string">"Microsoft.EntityFrameworkCore.Tools.DotNet"</span> <span class="attr">Version</span>=<span class="string">"2.1.0-preview1-final"</span>/&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>问题2：Version for package <code>Microsoft.EntityFrameworkCore.Tools.DotNet</code> could not be resolved.</p><p>原因：上述配置中Version版本与包引用中的版本不一致，修改上述添加代码的Version即可</p></blockquote><p>此时将会在Models文件夹下创建所有数据库表的实体，同时会创建一个universityContext.cs实体（university为我数据库名称，自行定义），用于对整个数据库的操作。<strong>至此MVC已完成Model部分</strong>。</p></li></ul><h2 id="Controller及View部分"><a href="#Controller及View部分" class="headerlink" title="Controller及View部分"></a>Controller及View部分</h2><ul><li><p>目前项目Models文件夹下已有DBFirst模式生成的实体文件：</p><p><img src="http://getme.guitoubing.top/image-20180607150002112.png" alt="image-20180607150002112"></p></li><li><p>我们选择Student的Model创建C-V视图</p><blockquote><p>这里说明一下，MVC模式中Model顾名思义是数据模型、实体，而View和Controller是相互依存的。一般步骤是先创建StudentController.cs文件，定义其中的路由(URL映射，定义了路由之后可以直接通过URL访问该函数)，如本项目中的StudentController.cs中定义的Index：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; public IActionResult Index()&#123;</span><br><span class="line">&gt;         return View(_context.Student.ToList());</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如此定义后，再在Views文件夹下创建对应Controller的文件夹，此处为Student，而在Controller中定义的每一个路由，都要有对应的一个cshtml文件，此处在Student下创建Index.cshtml。简而言之，<strong>View只负责处理布局，Controller只负责处理逻辑。</strong></p></blockquote><ul><li><p>创建StudentController.cs</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&gt; using System;</span><br><span class="line">&gt; using System.Collections.Generic;</span><br><span class="line">&gt; using System.Diagnostics;</span><br><span class="line">&gt; using System.Linq;</span><br><span class="line">&gt; using System.Threading.Tasks;</span><br><span class="line">&gt; using Microsoft.AspNetCore.Mvc;</span><br><span class="line">&gt; using dotnet.Models;</span><br><span class="line">&gt; using dotnet;</span><br><span class="line">&gt; </span><br><span class="line">&gt; public class StudentController : Controller&#123;</span><br><span class="line">&gt;     private universityContext _context;</span><br><span class="line">&gt; </span><br><span class="line">&gt;     public StudentController(universityContext context)&#123;</span><br><span class="line">&gt;         _context = context;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     </span><br><span class="line">&gt;     public IActionResult Index()&#123;</span><br><span class="line">&gt;         return View(_context.Student.ToList());</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt;     public IActionResult Register()&#123;</span><br><span class="line">&gt;         return View();</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt;     [HttpPost]</span><br><span class="line">&gt;     [ValidateAntiForgeryToken]</span><br><span class="line">&gt;     public IActionResult Register(Student student)&#123;</span><br><span class="line">&gt;         if(ModelState.IsValid)&#123;</span><br><span class="line">&gt;             _context.Student.Add(student);</span><br><span class="line">&gt;             _context.SaveChanges();</span><br><span class="line">&gt;             return RedirectToAction(&quot;Index&quot;);</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;         return View(student);</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li><li><p>创建Student文件夹，以及对应路由的cshtml</p><blockquote><ul><li>Index.cshtml</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&gt; @&#123;</span><br><span class="line">&gt;     ViewData["Title"] = "学生主页";</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment">&lt;!-- 此处这个model声明不能忘记 --&gt;</span></span><br><span class="line">&gt; @model IEnumerable<span class="tag">&lt;<span class="name">dotnet.Student</span>&gt;</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">th</span>&gt;</span>Id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">th</span>&gt;</span>系<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">th</span>&gt;</span>学分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&gt;     @foreach (var item in Model)&#123;</span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;                 @Html.DisplayFor(modelItem =&gt; item.Id)</span><br><span class="line">&gt;             <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;                 @Html.DisplayFor(modelItem =&gt; item.Name)</span><br><span class="line">&gt;             <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;                 @Html.DisplayFor(modelItem =&gt; item.DeptName)</span><br><span class="line">&gt;             <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;                 @Html.DisplayFor(modelItem =&gt; item.TotCred)</span><br><span class="line">&gt;             <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><ul><li>Register.cshtml</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&gt; @model dotnet.Student</span><br><span class="line">&gt; </span><br><span class="line">&gt; @&#123;</span><br><span class="line">&gt;     ViewData["Title"] = "注册";</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">form</span> <span class="attr">asp-controller</span>=<span class="string">"Student"</span> <span class="attr">asp-action</span>=<span class="string">"Register"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">label</span> <span class="attr">asp-for</span>=<span class="string">"Id"</span> <span class="attr">class</span>=<span class="string">"col-md-2 control-label"</span>&gt;</span>编号：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-10"</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">asp-for</span>=<span class="string">"Id"</span>/&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">span</span> <span class="attr">asp-validation-for</span>=<span class="string">"Id"</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">label</span> <span class="attr">asp-for</span>=<span class="string">"Name"</span> <span class="attr">class</span>=<span class="string">"col-md-2 control-label"</span>&gt;</span>名字：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-10"</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">asp-for</span>=<span class="string">"Name"</span>/&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">span</span> <span class="attr">asp-validation-for</span>=<span class="string">"Name"</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">label</span> <span class="attr">asp-for</span>=<span class="string">"DeptName"</span> <span class="attr">class</span>=<span class="string">"col-md-2 control-label"</span>&gt;</span>系：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-10"</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">asp-for</span>=<span class="string">"DeptName"</span>/&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">span</span> <span class="attr">asp-validation-for</span>=<span class="string">"DeptName"</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">label</span> <span class="attr">asp-for</span>=<span class="string">"TotCred"</span> <span class="attr">class</span>=<span class="string">"col-md-2 control-label"</span>&gt;</span>学分：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-10"</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">asp-for</span>=<span class="string">"TotCred"</span>/&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">span</span> <span class="attr">asp-validation-for</span>=<span class="string">"TotCred"</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-offset-2 col-md-10"</span>&gt;</span></span><br><span class="line">&gt;             <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"保存"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>/&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt;     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li></ul></li><li><p>关于抛出以下错误的解决方法</p><ul><li><p>错误：</p><blockquote><p><img src="http://getme.guitoubing.top/image-20180607142732374.png" alt="image-20180607142732374"></p></blockquote></li><li><p>解决方法：</p><blockquote><p><img src="http://getme.guitoubing.top/dotnet%E9%85%8D%E7%BD%AE.png" alt="dotnet配置"></p><p>注意最下面的Tip：由于我们在Startup.cs中已经添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; public void ConfigureServices(IServiceCollection services)</span><br><span class="line">&gt;         &#123;</span><br><span class="line">&gt;             services.AddDbContext&lt;universityContext&gt;();</span><br><span class="line">&gt;             services.AddMvc();</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>即满足条件“already configured outside of the context in Startup.cs”，因此我们需要将上述图片中的if语句注释掉，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; //if (!optionsBuilder.IsConfigured)&#123; </span><br><span class="line">&gt; optionsBuilder.UseMySql(&quot;server=localhost;userid=root;pwd=tanrui;port=3306;database=university;sslmode=none;&quot;);</span><br><span class="line">&gt; //&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li></ul><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><ul><li><p>调试的方法</p><blockquote><ul><li><p>vscode下点按“开始调试”</p><p><img src="http://getme.guitoubing.top/image-20180607151747548.png" alt="image-20180607151747548"></p></li><li><p>浏览器将会自动跳转至localhost:5000</p><p><img src="http://getme.guitoubing.top/image-20180607152008469.png" alt="image-20180607152008469"></p></li><li><p>在URL中添加<u>/student</u>或<u>student/index</u>跳转到我们定义的Controller中，一般情况下index路由是可以忽略不写的，此时自动定位到index中：</p><p><img src="http://getme.guitoubing.top/image-20180607152229016.png" alt="image-20180607152229016"></p></li></ul></blockquote></li><li><p>戳这里下载<a href="http://getme.guitoubing.top/ASP.NET%20Core%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E6%88%98%20,%E5%BC%A0%E5%89%91%E6%A1%A5%20,2017.04%20,Pg319_14181929.pdf" target="_blank" rel="noopener">Asp.net Core开发实战.pdf</a></p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前奏部分&quot;&gt;&lt;a href=&quot;#前奏部分&quot; class=&quot;headerlink&quot; title=&quot;前奏部分&quot;&gt;&lt;/a&gt;前奏部分&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载并安装&lt;a href=&quot;https://www.microsoft.com/net/learn/get-started/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dotnet core&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载并安装&lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vscode&lt;/a&gt;（需要把vscode添加到path中）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="archives" scheme="http://blog.guitoubing.top/categories/archives/"/>
    
    
      <category term="Dotnet" scheme="http://blog.guitoubing.top/tags/Dotnet/"/>
    
      <category term="数据库" scheme="http://blog.guitoubing.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>我们梦中见</title>
    <link href="http://blog.guitoubing.top/2018/06/26/2017-10-14/"/>
    <id>http://blog.guitoubing.top/2018/06/26/2017-10-14/</id>
    <published>2018-06-26T04:29:17.000Z</published>
    <updated>2018-11-06T13:19:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“Yeah It’s on. ”</p></blockquote><h3 id="26-06-2018"><a href="#26-06-2018" class="headerlink" title="26/06/2018"></a>26/06/2018</h3><p>当兵回来用的虚拟主机建的博客，hexo建在本地。前段时间电脑重装了，以前的博客就落满了灰，现迁移过来，换个心情。</p><h3 id="14-10-2017"><a href="#14-10-2017" class="headerlink" title="14/10/2017"></a>14/10/2017</h3><p>（是不是个技博自己心里没点B数？</p><a id="more"></a><p>应该说<a href="http://donggu.me/" target="_blank" rel="noopener">天明学长</a>在技术方面给予了很大的支持，为她打call！</p><p>说要建站已经是三年前了，那时候在某课网上闲逛看到了关于Linux搭建服务器的视频，学了点，发现，what are you fk saying？后来自己买了本书，噢~ 更™不懂了。然后，就去了号子（？？）。转眼两年过去了，是该重新做人了，该搬的砖还得搬，搬不完还想吃饭？</p><p>买的第一个虚拟主机是景安一台国内主机，这个时候还是不知道国内主机和海外主机有啥区别，只知道国内主机便宜，不，新用户免费。于是买了个试了下。配套的买了个top域名¥15.00/月，是贼贵了。绑定域名时发现需要备案，备案就备案吧，流程走下去。一大堆东西拍了照填了表提交上去了想的差不多了吧。结果跟我说非上海本地户口要™居住证或者临时居住证，我哪里去办，户口都没迁过来，想想要不找个备案不怎么严的省份备案下，看了下河南（？？？）以及其他，要么是要本地手机号要么就是居住证，算了，贵国厉害，我买海外。于是买了个HK主机，¥199/年（后来看到阿里云服务器学生价¥10/月+com域名就扇了自己一巴掌，你有钱行了吧）。</p><h3 id="接下来是干货了（扯淡"><a href="#接下来是干货了（扯淡" class="headerlink" title="接下来是干货了（扯淡"></a>接下来是干货了（扯淡</h3><p>然后就是绑定域名了没啥说的。 对于一个毫无前端经验的人来说，有了这些又有啥用，别人进你网站就为了看你在云里面存了多少种子？ 这里又要提到<a href="http://donggu.me/" target="_blank" rel="noopener">天明学长</a>了，在她网站中得知有了个<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>的框架，仿佛看到了未来。至于<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>怎么用，<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a>里面都很详尽了，这里讲几点用的时候踩过的坑，以备。</p><h4 id="config-YML配置，比较重要的几个地方"><a href="#config-YML配置，比较重要的几个地方" class="headerlink" title="_config.YML配置，比较重要的几个地方"></a>_config.YML配置，比较重要的几个地方</h4><h5 id="路径URL"><a href="#路径URL" class="headerlink" title="路径URL"></a>路径URL</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: http://guitoubing.top/</span><br><span class="line">root: /</span><br></pre></td></tr></table></figure><ul><li>url和root一定要注意，最后面的“/”千万不要忘了，不然在hexo generate的时候肯定会报错</li><li>在generate后要注意public文件夹的位置，public文件夹一般自动创建在当前目录下，我在server后，本地服务器浏览是没有问题的，但是点开public文件夹里面的index就会连不上css，当然上传到服务器之后肯定也是连不上的了，因为root: /这行代码认为你当前工作目录是在根目录下（硬盘根目录或者服务器根目录），有的同学会想那我把root改成我当前位置不就好了，我也试过，此时public里面的index可以正常浏览，但是传到deploy到服务器上就又连不上了，因为服务器里面没有你当前这样的路径呀。这里我用的笨办法，把创建好的public文件夹复制到硬盘根目录下，然后发现本地服务器上index是可以正常显示了，传到服务器上之后也是可以的。</li></ul><h5 id="Disqus插件"><a href="#Disqus插件" class="headerlink" title="Disqus插件"></a><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus插件</a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Disqus settings</span><br><span class="line">disqus_username: guitoubing</span><br></pre></td></tr></table></figure><p>因为多说已经关闭服务了，只能用<a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>，而<a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>又是需要科学上网才能加载的，所以也没办法了。如果你能科学上网，那只要把这里的disqus_username改成自己注册的账号即可，我用的主题<a href="https://github.com/kaijun/hexo-theme-huxblog/" target="_blank" rel="noopener">hexo-theme-huxblog</a>已经集成了<a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a>的js代码，所以不需要其他设置，如果用的其他主题/themes/layout里面的ejs文件中添加js代码即可。 </p><h2 id="Analytics"><a href="#Analytics" class="headerlink" title="Analytics"></a>Analytics</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Analytics settings</span><br><span class="line"># Baidu Analytics</span><br><span class="line">ba_track_id: bcfce8e737b***********04c164dc96</span><br><span class="line"># Google Analytics</span><br><span class="line">ga_track_id: &apos;UA-10*******-1&apos;            # Format: UA-xxxxxx-xx</span><br><span class="line">ga_domain: guitoubing.top</span><br></pre></td></tr></table></figure><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: ftpsync</span><br><span class="line">  host: guitoubing.top</span><br><span class="line">  user: webmaster@HK******</span><br><span class="line">  pass: tanrui106</span><br><span class="line">  remote: /WEB/</span><br><span class="line">  port: 21</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">deploy</a>就是部署到服务器上咯，因为我用的是HK虚拟主机，所以配置如上，这里的各个信息都是你所部署的服务器信息没什么好说的。</p><h2 id="config-YML配置完成了就可以开始创作咯"><a href="#config-YML配置完成了就可以开始创作咯" class="headerlink" title="_config.YML配置完成了就可以开始创作咯"></a>_config.YML配置完成了就可以开始创作咯</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;blog&quot; </span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a>都有详细使用方法，不赘述。</p><h2 id="有几句MMP当讲"><a href="#有几句MMP当讲" class="headerlink" title="有几句MMP当讲"></a>有几句MMP当讲</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">古有一商人，于川中收购一批苎麻、小麦、桔子、兽皮，从水路出川。船至半途，水急桨朽，桨折断而顺水去，船夫甚急，问商人： 无桨不得行船，你所携货物中可有长直之物当桨？ 商人安慰他： 莫急，我有桔麻麦皮不知当桨不当桨？</span><br></pre></td></tr></table></figure><p>从开始接触hexo到成功deploy到服务器上，算下来该有一下午加一晚上了。应该说两年没接触编程了，那句“程序员写了一段让自己不用再写代码的代码”已经不是笑话，也许是两年之前也啥屁不懂，现在越来越觉得放眼看世界是多重要。当我还熬夜敲着基础代码时，互联网上已经有了其他解决方案，倒不是说基础代码不重要，而是已经有人用基础代码敲出了不用再敲基础代码的代码，那么，吃肉，还是喝汤，看自己选择了。（我选择狗带）</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;“Yeah It’s on. ”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;26-06-2018&quot;&gt;&lt;a href=&quot;#26-06-2018&quot; class=&quot;headerlink&quot; title=&quot;26/06/2018&quot;&gt;&lt;/a&gt;26/06/2018&lt;/h3&gt;&lt;p&gt;当兵回来用的虚拟主机建的博客，hexo建在本地。前段时间电脑重装了，以前的博客就落满了灰，现迁移过来，换个心情。&lt;/p&gt;
&lt;h3 id=&quot;14-10-2017&quot;&gt;&lt;a href=&quot;#14-10-2017&quot; class=&quot;headerlink&quot; title=&quot;14/10/2017&quot;&gt;&lt;/a&gt;14/10/2017&lt;/h3&gt;&lt;p&gt;（是不是个技博自己心里没点B数？&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://blog.guitoubing.top/categories/life/"/>
    
    
      <category term="Hexo" scheme="http://blog.guitoubing.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
